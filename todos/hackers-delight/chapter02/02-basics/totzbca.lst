     1                                  ; totzbca.asm
     2                                  ; turn on trailing zero bits, zero out all other bits
     3                                  
   401                                  [list -]
   402                                  
   403                                  bits 64
   404                                  
   405                                  section .bss
   406 00000000 <res 00000001>            buffer: resb 1
   407                                  
   408                                  section .data
   409                                    
   410                                  section .text
   411                                  global _start
   412                                  
   413                                  _start:
   414                                  
   415 00000000 B810520400                    mov     rax, 0x0000000000045210
   416 00000005 E821000000                    call    printBinary
   417 0000000A E80F000000                    call    totzbca
   418 0000000F E817000000                    call    printBinary
   419                                  
   420 00000014 4831FF                        xor     rdi, rdi
   421 00000017 B83C000000                    mov     rax, SYS_EXIT
   422 0000001C 0F05                          syscall
   423                                  
   424                                  totzbca:                                ; turn on trailing zero bits, zero out all other bits
   425 0000001E 4889C3                        mov     rbx, rax
   426 00000021 48FFCB                        dec     rbx
   427 00000024 48F7D0                        not     rax
   428 00000027 4821D8                        and     rax, rbx
   429 0000002A C3                            ret
   430                                        
   431                                  printBinary:
   432 0000002B 50                            push      rax
   433 0000002C B940000000                    mov       rcx, 64                 ; 64 bits to display
   434 00000031 F8                            clc                               ; clear carry flag
   435                                  .repeat:
   436 00000032 48D1D0                        rcl       rax, 1                  ; start with leftmost bit
   437 00000035 801425[00000000]30            adc       BYTE[buffer],0x30       ; make it ASCII
   438 0000003D 51                            push      rcx
   439 0000003E 50                            push      rax
   440 0000003F E813000000                    call      printBuffer
   441 00000044 58                            pop       rax
   442 00000045 59                            pop       rcx
   443 00000046 E2EA                          loop      .repeat
   444 00000048 C60425[00000000]0A            mov       BYTE[buffer],0x0A
   445 00000050 E802000000                    call      printBuffer
   446 00000055 58                            pop       rax
   447 00000056 C3                            ret
   448                                  
   449                                  printBuffer:
   450 00000057 B801000000                    mov       rax, SYS_WRITE
   451 0000005C BF01000000                    mov       rdi, STDOUT
   452 00000061 48BE-                         mov       rsi, buffer
   453 00000063 [0000000000000000] 
   454 0000006B BA01000000                    mov       rdx, 1
   455 00000070 0F05                          syscall
   456 00000072 802425[00000000]00            and       BYTE[buffer],0          ; clear buffer
   457 0000007A C3                            ret
