     1                                  ; totzb.asm
     2                                  ; turn on trailing zero bits
     3                                  
   401                                  [list -]
   402                                  
   403                                  bits 64
   404                                  
   405                                  section .bss
   406 00000000 <res 00000001>            buffer: resb 1
   407                                  
   408                                  section .data
   409                                    
   410                                  section .text
   411                                  global _start
   412                                  
   413                                  _start:
   414                                  
   415 00000000 48B840520400000000-           mov     rax, 0x8000000000045240
   416 00000009 80                 
   417 0000000A E81E000000                    call    printBinary
   418 0000000F E80F000000                    call    totzb
   419 00000014 E814000000                    call    printBinary
   420                                  
   421 00000019 4831FF                        xor     rdi, rdi
   422 0000001C B83C000000                    mov     rax, SYS_EXIT
   423 00000021 0F05                          syscall
   424                                  
   425                                  totzb:                                  ; turn on trailing zero bits
   426 00000023 4889C3                        mov     rbx, rax
   427 00000026 48FFCB                        dec     rbx
   428 00000029 4809D8                        or      rax, rbx
   429 0000002C C3                            ret
   430                                        
   431                                  printBinary:
   432 0000002D 50                            push      rax
   433 0000002E B940000000                    mov       rcx, 64                 ; 64 bits to display
   434 00000033 F8                            clc                               ; clear carry flag
   435                                  .repeat:
   436 00000034 48D1D0                        rcl       rax, 1                  ; start with leftmost bit
   437 00000037 801425[00000000]30            adc       BYTE[buffer],0x30       ; make it ASCII
   438 0000003F 51                            push      rcx
   439 00000040 50                            push      rax
   440 00000041 E813000000                    call      printBuffer
   441 00000046 58                            pop       rax
   442 00000047 59                            pop       rcx
   443 00000048 E2EA                          loop      .repeat
   444 0000004A C60425[00000000]0A            mov       BYTE[buffer],0x0A
   445 00000052 E802000000                    call      printBuffer
   446 00000057 58                            pop       rax
   447 00000058 C3                            ret
   448                                  
   449                                  printBuffer:
   450 00000059 B801000000                    mov       rax, SYS_WRITE
   451 0000005E BF01000000                    mov       rdi, STDOUT
   452 00000063 48BE-                         mov       rsi, buffer
   453 00000065 [0000000000000000] 
   454 0000006D BA01000000                    mov       rdx, 1
   455 00000072 0F05                          syscall
   456 00000074 802425[00000000]00            and       BYTE[buffer],0          ; clear buffer
   457 0000007C C3                            ret
