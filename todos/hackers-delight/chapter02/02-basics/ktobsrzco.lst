     1                                  ; ktobsrzco.asm
     2                                  ; keep trailing one bits, set rightmost zero bit, clear all other bits
     3                                  
   401                                  [list -]
   402                                  
   403                                  bits 64
   404                                  
   405                                  section .bss
   406 00000000 <res 00000001>            buffer: resb 1
   407                                  
   408                                  section .data
   409                                    
   410                                  section .text
   411                                  global _start
   412                                  
   413                                  _start:
   414                                  
   415 00000000 B81F520400                    mov     rax, 0x000000000004521F
   416 00000005 E81E000000                    call    printBinary
   417 0000000A E80F000000                    call    ktobsrzco
   418 0000000F E814000000                    call    printBinary
   419                                  
   420 00000014 4831FF                        xor     rdi, rdi
   421 00000017 B83C000000                    mov     rax, SYS_EXIT
   422 0000001C 0F05                          syscall
   423                                  
   424                                  ktobsrzco:                              ; keep trailing one bits, set rightmost zero bit, clear all other bits
   425 0000001E 4889C3                        mov     rbx, rax
   426 00000021 48FFC3                        inc     rbx
   427 00000024 4831D8                        xor     rax, rbx
   428 00000027 C3                            ret
   429                                        
   430                                  printBinary:
   431 00000028 50                            push      rax
   432 00000029 B940000000                    mov       rcx, 64                 ; 64 bits to display
   433 0000002E F8                            clc                               ; clear carry flag
   434                                  .repeat:
   435 0000002F 48D1D0                        rcl       rax, 1                  ; start with leftmost bit
   436 00000032 801425[00000000]30            adc       BYTE[buffer],0x30       ; make it ASCII
   437 0000003A 51                            push      rcx
   438 0000003B 50                            push      rax
   439 0000003C E813000000                    call      printBuffer
   440 00000041 58                            pop       rax
   441 00000042 59                            pop       rcx
   442 00000043 E2EA                          loop      .repeat
   443 00000045 C60425[00000000]0A            mov       BYTE[buffer],0x0A
   444 0000004D E802000000                    call      printBuffer
   445 00000052 58                            pop       rax
   446 00000053 C3                            ret
   447                                  
   448                                  printBuffer:
   449 00000054 B801000000                    mov       rax, SYS_WRITE
   450 00000059 BF01000000                    mov       rdi, STDOUT
   451 0000005E 48BE-                         mov       rsi, buffer
   452 00000060 [0000000000000000] 
   453 00000068 BA01000000                    mov       rdx, 1
   454 0000006D 0F05                          syscall
   455 0000006F 802425[00000000]00            and       BYTE[buffer],0          ; clear buffer
   456 00000077 C3                            ret
