     1                                  ;////////////////////////////////////////////////////////////////
     2                                  ;// DEMO8.ASM
     3                                  ;//
     4                                  ;// Copyright (C)2005-2014 The NASMX Project
     5                                  ;//
     6                                  ;// Purpose:
     7                                  ;//    NASMX - GTK Demo in Linux 32 bit.
     8                                  ;//
     9                                  ;// Contributors:
    10                                  ;//    Mathi
    11                                  ;//    Bryant Keller
    12                                  ;//
    13                                  ;// This demo needs libgtk2.0-dev package.
    14                                  ;//  
    15                                  ;// sudo apt-get install libgtk2.0-dev
    16                                  ;//
    17                                  
    18                                  
    19                                  
    20                                  %include 'nasmx/nasmx.inc'
     1                              <1> ;//////////////////////////////////////////////////////////////
     2                              <1> ;//
     3                              <1> ;// NASMX Preprocessor
     4                              <1> ;// Copyright (c) 2005-2014, The NASMX Project
     5                              <1> ;//
     6                              <1> %ifndef __NASMX_INCLUDED__
     7                              <1> %define __NASMX_INCLUDED__
     8                              <1> 
     9                              <1> ;//////////////////////////////////////////////////////////////
    10                              <1> ;//
    11                              <1> ;// Check NASM Version
    12                              <1> ;//
    13                              <1> %define __nxerrmsg "NASM v2.11 or later required"
    14                              <1> %ifdef __NASM_VERSION_ID__
    15                              <1> 	%if __NASM_VERSION_ID__ < 0x020B0000
    16                              <1> 		%fatal __nxerrmsg
    17                              <1> 	%endif
    18                              <1> %else
    19                              <1> 	%fatal __nxerrmsg
    20                              <1> %endif
    21                              <1> %undef __nxerrmsg
    22                              <1> 
    23                              <1> ;//////////////////////////////////////////////////////////////
    24                              <1> ;//
    25                              <1> ;// Set a NASMX Definition
    26                              <1> ;//
    27                              <1> %macro NASMX_DEFINE 1-2.nolist
    28                              <1> 	%if %0 > 1
    29                              <1> 		%ixdefine __NASMX_%[%1]__ %[2]
    30                              <1> 	%else
    31                              <1> 		%ixdefine __NASMX_%[%1]__
    32                              <1> 	%endif
    33                              <1> %endmacro
    34                              <1> 
    35                              <1> 
    36                              <1> ;//////////////////////////////////////////////////////////////
    37                              <1> ;//
    38                              <1> ;// Get a NASMX Definition
    39                              <1> ;//
    40                              <1> %macro NASMX_GET_DEFINE 2.nolist
    41                              <1> 	%ifdef __NASMX_%[%1]__
    42                              <1> 		%xdefine %[%2] __NASMX_%[%1]__
    43                              <1> 	%elifdef %2
    44                              <1> 		%undef %[%2]
    45                              <1> 	%endif
    46                              <1> %endmacro
    47                              <1> 
    48                              <1> ;//////////////////////////////////////////////////////////////
    49                              <1> ;//
    50                              <1> ;// Undefine a NASMX Definition
    51                              <1> ;//
    52                              <1> %macro NASMX_UNDEF 1.nolist
    53                              <1> 	%ifdef __NASMX_%[%1]__
    54                              <1> 		%undef __NASMX_%[%1]__
    55                              <1> 	%else
    56                              <1> 		%warning NASMX Definition %[1] is not defined
    57                              <1> 	%endif
    58                              <1> %endmacro
    59                              <1> 
    60                              <1> 
    61                              <1> ;//////////////////////////////////////////////////////////////
    62                              <1> ;//
    63                              <1> ;// Define NASMX Version
    64                              <1> ;//
    65                              <1> NASMX_DEFINE VERSION,"1.4"
    66                              <1> NASMX_DEFINE VERSION_MAJOR, 1
    67                              <1> NASMX_DEFINE VERSION_MINOR, 4
    68                              <1> NASMX_DEFINE VERSION_REV, 16
    69                              <1> NASMX_DEFINE VERSION_ID, 0x01040010
    70                              <1> 
    71                              <1> 
    72                              <1> ;//////////////////////////////////////////////////////////////
    73                              <1> ;//
    74                              <1> ;// init NASMX context stack
    75                              <1> ;//
    76                              <1> ;%push __NASMX_CTX__
    77                              <1> 
    78                              <1> 
    79                              <1> ;//////////////////////////////////////////////////////////////
    80                              <1> ;//
    81                              <1> ;// Set a Context Stack Value
    82                              <1> ;//
    83                              <1> %macro NASMX_SET_CONTEXT_VALUE 2.nolist
    84                              <1> 	%xdefine %$$%1 %2
    85                              <1> %endmacro
    86                              <1> 
    87                              <1> 
    88                              <1> ;//////////////////////////////////////////////////////////////
    89                              <1> ;//
    90                              <1> ;// native data sizes
    91                              <1> ;// Must be defined here due to struc_size!
    92                              <1> %ixdefine byte_size    1
    93                              <1> %ixdefine word_size    2
    94                              <1> %ixdefine dword_size   4
    95                              <1> %ixdefine qword_size   8
    96                              <1> %ixdefine tword_size  10
    97                              <1> %ixdefine oword_size  16
    98                              <1> %ixdefine __m64_size   8
    99                              <1> %ixdefine __m128_size 16
   100                              <1> %ixdefine __m256_size 32
   101                              <1> %ixdefine __int64_size   8
   102                              <1> %ixdefine __int128_size 16
   103                              <1> %ixdefine __nxfloat_size     4
   104                              <1> %ixdefine __nxdouble_size    8
   105                              <1> %ixdefine __nxfloat32_size   4
   106                              <1> %ixdefine __nxfloat64_size   8
   107                              <1> %ixdefine __nxfloat80_size  10
   108                              <1> %ixdefine __nxfloat128_size 16
   109                              <1> ;// native register sizes
   110                              <1> %idefine al_size  1
   111                              <1> %idefine bl_size  1
   112                              <1> %idefine cl_size  1
   113                              <1> %idefine dl_size  1
   114                              <1> %idefine ah_size  1
   115                              <1> %idefine bh_size  1
   116                              <1> %idefine ch_size  1
   117                              <1> %idefine dh_size  1
   118                              <1> %idefine ax_size  2
   119                              <1> %idefine bx_size  2
   120                              <1> %idefine cx_size  2
   121                              <1> %idefine dx_size  2
   122                              <1> %idefine di_size  2
   123                              <1> %idefine si_size  2
   124                              <1> %idefine sp_size  2
   125                              <1> %idefine bp_size  2
   126                              <1> %idefine bpl_size 1
   127                              <1> %idefine dil_size 1
   128                              <1> %idefine sil_size 1
   129                              <1> %idefine spl_size 1
   130                              <1> %idefine eax_size 4
   131                              <1> %idefine ebx_size 4
   132                              <1> %idefine ecx_size 4
   133                              <1> %idefine edx_size 4
   134                              <1> %idefine edi_size 4
   135                              <1> %idefine esi_size 4
   136                              <1> %idefine esp_size 4
   137                              <1> %idefine ebp_size 4
   138                              <1> %idefine rax_size 8
   139                              <1> %idefine rbx_size 8
   140                              <1> %idefine rcx_size 8
   141                              <1> %idefine rdx_size 8
   142                              <1> %idefine rdi_size 8
   143                              <1> %idefine rsi_size 8
   144                              <1> %idefine rsp_size 8
   145                              <1> %idefine rbp_size 8
   146                              <1> %idefine r8d_size  4
   147                              <1> %idefine r9d_size  4
   148                              <1> %idefine r10d_size 4
   149                              <1> %idefine r11d_size 4
   150                              <1> %idefine r12d_size 4
   151                              <1> %idefine r13d_size 4
   152                              <1> %idefine r14d_size 4
   153                              <1> %idefine r15d_size 4
   154                              <1> %idefine r8_size  8
   155                              <1> %idefine r9_size  8
   156                              <1> %idefine r10_size 8
   157                              <1> %idefine r11_size 8
   158                              <1> %idefine r12_size 8
   159                              <1> %idefine r13_size 8
   160                              <1> %idefine r14_size 8
   161                              <1> %idefine r15_size 8
   162                              <1> 
   163                              <1> ;// register aliases used to help with portability
   164                              <1> %ifidn __BITS__,64
   165                              <1> %ixdefine __AX rax
   166                              <1> %ixdefine __BX rbx
   167                              <1> %ixdefine __CX rcx
   168                              <1> %ixdefine __DX rdx
   169                              <1> %ixdefine __DI rdi
   170                              <1> %ixdefine __SI rsi
   171                              <1> %ixdefine __BP rbp
   172                              <1> %ixdefine __SP rsp
   173                              <1> %else
   174                              <1> %ixdefine __AX eax
   175                              <1> %ixdefine __BX ebx
   176                              <1> %ixdefine __CX ecx
   177                              <1> %ixdefine __DX edx
   178                              <1> %ixdefine __DI edi
   179                              <1> %ixdefine __SI esi
   180                              <1> %ixdefine __BP ebp
   181                              <1> %ixdefine __SP esp
   182                              <1> %endif
   183                              <1> ;// register names used to help with macros invoke and uses
   184                              <1> %ixdefine __nx_reg_eax eax
   185                              <1> %ixdefine __nx_reg_ebx ebx
   186                              <1> %ixdefine __nx_reg_ecx ecx
   187                              <1> %ixdefine __nx_reg_edx edx
   188                              <1> %ixdefine __nx_reg_edi edi
   189                              <1> %ixdefine __nx_reg_esi esi
   190                              <1> %ixdefine __nx_reg_ebp ebp
   191                              <1> %ixdefine __nx_reg_esp esp
   192                              <1> %ixdefine __nx_reg_rax rax
   193                              <1> %ixdefine __nx_reg_rbx rbx
   194                              <1> %ixdefine __nx_reg_rcx rcx
   195                              <1> %ixdefine __nx_reg_rdx rdx
   196                              <1> %ixdefine __nx_reg_rdi rdi
   197                              <1> %ixdefine __nx_reg_rsi rsi
   198                              <1> %ixdefine __nx_reg_rbp rbp
   199                              <1> %ixdefine __nx_reg_rsp rsp
   200                              <1> %ixdefine __nx_reg_r8  r8
   201                              <1> %ixdefine __nx_reg_r9  r9
   202                              <1> %ixdefine __nx_reg_r10 r10
   203                              <1> %ixdefine __nx_reg_r11 r11
   204                              <1> %ixdefine __nx_reg_r12 r12
   205                              <1> %ixdefine __nx_reg_r13 r13
   206                              <1> %ixdefine __nx_reg_r14 r14
   207                              <1> %ixdefine __nx_reg_r15 r15
   208                              <1> 
   209                              <1> 
   210                              <1> ;//////////////////////////////////////////////////////////////
   211                              <1> ;//
   212                              <1> ;// nasm storage types
   213                              <1> ;//
   214                              <1> %ixdefine byte__nx_reserve   RESB
   215                              <1> %ixdefine word__nx_reserve   RESW
   216                              <1> %ixdefine dword__nx_reserve  RESD
   217                              <1> %ixdefine qword__nx_reserve  RESQ
   218                              <1> %ixdefine tword__nx_reserve  REST
   219                              <1> %ixdefine oword__nx_reserve  RESO
   220                              <1> %ixdefine __m64__nx_reserve  RESQ
   221                              <1> %ixdefine __m128__nx_reserve RESO
   222                              <1> %ixdefine __int64__nx_reserve  RESQ
   223                              <1> %ixdefine __int128__nx_reserve RESO
   224                              <1> %ixdefine __nxfloat__nx_reserve    RESD
   225                              <1> %ixdefine __nxdouble__nx_reserve   RESQ
   226                              <1> %ixdefine __nxfloat32__nx_reserve  RESD
   227                              <1> %ixdefine __nxfloat64__nx_reserve  RESQ
   228                              <1> %ixdefine __nxfloat80__nx_reserve  RESO
   229                              <1> %ixdefine __nxfloat128__nx_reserve RESO
   230                              <1> 
   231                              <1> ;//////////////////////////////////////////////////////////////
   232                              <1> ;//
   233                              <1> ;// nasm storage types
   234                              <1> ;//
   235                              <1> %ixdefine byte__nx_storage   DB
   236                              <1> %ixdefine word__nx_storage   DW
   237                              <1> %ixdefine dword__nx_storage  DD
   238                              <1> %ixdefine qword__nx_storage  DQ
   239                              <1> %ixdefine tword__nx_storage  DT
   240                              <1> %ixdefine oword__nx_storage  DO
   241                              <1> %ixdefine __m64__nx_storage  DQ
   242                              <1> %ixdefine __m128__nx_storage DO
   243                              <1> %ixdefine __int64__nx_storage  DQ
   244                              <1> %ixdefine __int128__nx_storage DO
   245                              <1> %ixdefine __nxfloat__nx_storage    DD
   246                              <1> %ixdefine __nxdouble__nx_storage   DQ
   247                              <1> %ixdefine __nxfloat32__nx_storage  DD
   248                              <1> %ixdefine __nxfloat64__nx_storage  DQ
   249                              <1> %ixdefine __nxfloat80__nx_storage  DO
   250                              <1> %ixdefine __nxfloat128__nx_storage DO
   251                              <1> 
   252                              <1> ;//////////////////////////////////////////////////////////////
   253                              <1> ;//
   254                              <1> ;// nasmx classifcation of types
   255                              <1> ;//
   256                              <1> ;// Bits used to contain classification:
   257                              <1> ;// for class/struc/union:
   258                              <1> ;//    0-3 : exponent of alignment (2**x)
   259                              <1> ;//   4-10 : reserved (0)
   260                              <1> ;// for integral types:
   261                              <1> ;//   0-10 : size of type in bytes
   262                              <1> ;// for all types:
   263                              <1> ;//     11 : reserved (0)
   264                              <1> ;//     12 : set if struct type
   265                              <1> ;//     13 : set if union type
   266                              <1> ;//     14 : set if class type
   267                              <1> ;//     15 : set if float type, otherwise clear
   268                              <1> ;//
   269                              <1> %ixdefine byte__nx_type   0x0001
   270                              <1> %ixdefine word__nx_type   0x0002
   271                              <1> %ixdefine dword__nx_type  0x0004
   272                              <1> %ixdefine qword__nx_type  0x0008
   273                              <1> %ixdefine tword__nx_type  0x000A
   274                              <1> %ixdefine oword__nx_type  0x0010
   275                              <1> %ixdefine __m64__nx_type  0x8008
   276                              <1> %ixdefine __m128__nx_type 0x8010
   277                              <1> %ixdefine __m256__nx_type 0x8020
   278                              <1> %ixdefine __int64__nx_type  0x8008
   279                              <1> %ixdefine __int128__nx_type 0x8010
   280                              <1> %ixdefine __nxfloat__nx_type    0x8004
   281                              <1> %ixdefine __nxdouble__nx_type   0x8008
   282                              <1> %ixdefine __nxfloat32__nx_type  0x8004
   283                              <1> %ixdefine __nxfloat64__nx_type  0x8008
   284                              <1> %ixdefine __nxfloat80__nx_type  0x800A
   285                              <1> %ixdefine __nxfloat128__nx_type 0x8010
   286                              <1> 
   287                              <1> %xdefine __NX_STRUC_TYPE 0x1000
   288                              <1> %xdefine __NX_UNION_TYPE 0x2000
   289                              <1> %xdefine __NX_CLASS_TYPE 0x4000
   290                              <1> 
   291                              <1> ;// NASMX int types
   292                              <1> %ixdefine int8_t     byte
   293                              <1> %ixdefine uint8_t    byte
   294                              <1> %ixdefine int16_t    word
   295                              <1> %ixdefine uint16_t   word
   296                              <1> %ixdefine int32_t    dword
   297                              <1> %ixdefine uint32_t   dword
   298                              <1> %ixdefine long32_t   dword
   299                              <1> %ixdefine ulong32_t  dword
   300                              <1> %ixdefine int64_t    qword
   301                              <1> %ixdefine uint64_t   qword
   302                              <1> %ixdefine int80_t    tword
   303                              <1> %ixdefine uint80_t   tword
   304                              <1> %ixdefine int128_t   oword
   305                              <1> %ixdefine uint128_t  oword
   306                              <1> %ixdefine long64_t   qword
   307                              <1> %ixdefine ulong64_t  qword
   308                              <1> %ixdefine long128_t  oword
   309                              <1> %ixdefine ulong128_t oword
   310                              <1> ;// NASMX Unicode Transformation Format types
   311                              <1> %ixdefine utf8_t     uint8_t
   312                              <1> %ixdefine utf16_t    uint16_t
   313                              <1> %ixdefine utf32_t    uint32_t
   314                              <1> ;// C types
   315                              <1> ;// The classification of long_t type  must be performed
   316                              <1> ;// during __OUTPUT_FORMAT__ check as the actual sizes
   317                              <1> ;// are different among operating systems.
   318                              <1> %ixdefine char_t     int8_t
   319                              <1> %ixdefine uchar_t    uint8_t
   320                              <1> %ixdefine short_t    int16_t
   321                              <1> %ixdefine ushort_t   uint16_t
   322                              <1> %ixdefine int_t      int32_t
   323                              <1> %ixdefine uint_t     uint32_t
   324                              <1> ;// float types require special handling due to
   325                              <1> ;// nasm FLOAT directives!
   326                              <1> %ixdefine float_t    __nxfloat
   327                              <1> %ixdefine double_t   __nxdouble
   328                              <1> %ixdefine float32_t  __nxfloat32
   329                              <1> %ixdefine float64_t  __nxfloat64
   330                              <1> %ixdefine float80_t  __nxfloat80
   331                              <1> %ixdefine float128_t __nxfloat128
   332                              <1> %idefine __float(v) dword __float32__(v)
   333                              <1> %idefine __double(v) qword __float64__(v)
   334                              <1> 
   335                              <1> ;// Map between native size and token.
   336                              <1> ;// The define name was chosen as it will
   337                              <1> ;// be displayed to the user if the macro
   338                              <1> ;// nx_token_from_size() is called with
   339                              <1> ;// an illegal value during assembly
   340                              <1> %ixdefine __nx_error_token_size_1  byte
   341                              <1> %ixdefine __nx_error_token_size_2  word
   342                              <1> %ixdefine __nx_error_token_size_4  dword
   343                              <1> %ixdefine __nx_error_token_size_8  qword
   344                              <1> %ixdefine __nx_error_token_size_10 tword
   345                              <1> %ixdefine __nx_error_token_size_16 xmm
   346                              <1> %ixdefine __nx_error_token_size_32 xmm
   347                              <1> 
   348                              <1> %define typeof(x) ((x %+ __nx_type >> 12) & 0x000F)
   349                              <1> %define sizeof(x) x %+ _size
   350                              <1> %define reserve(x) x %+ __nx_reserve
   351                              <1> %define declare(x) x %+ __nx_storage
   352                              <1> %define nx_token_from_size(x) __nx_error_token_size_ %+ x
   353                              <1> %idefine is_typeof_struc(x) ((x %+ __nx_type >> 12) & 0x0001)
   354                              <1> %idefine is_typeof_union(x) ((x %+ __nx_type >> 13) & 0x0001)
   355                              <1> %idefine is_typeof_class(x) ((x %+ __nx_type >> 14) & 0x0001)
   356                              <1> %idefine is_typeof_float(x) ((x %+ __nx_type >> 15) & 0x0001)
   357                              <1> %idefine nx_is_typeof_container(x) ((x %+ __nx_type >> 12) & 0x0007)
   358                              <1> 
   359                              <1> ;// class and member access specifiers
   360                              <1> %ixdefine __nx_class_const     0x0100
   361                              <1> %ixdefine __nx_class_static    0x0200
   362                              <1> %ixdefine __nx_class_abstract  0x0400
   363                              <1> %ixdefine __nx_class_virtual   0x0800
   364                              <1> %ixdefine __nx_class_private   0x1000
   365                              <1> %ixdefine __nx_class_protected 0x2000
   366                              <1> %ixdefine __nx_class_public    0x4000
   367                              <1> 
   368                              <1> ;// class and member tests - returns 0 if false, otherwise non-zero
   369                              <1> %idefine is_class_typeof_const(x) ((x %+ __nx_class_type) & __nx_class_const)
   370                              <1> %idefine is_class_typeof_static(x) ((x %+ __nx_class_type) & __nx_class_static)
   371                              <1> %idefine is_class_typeof_abstract(x) ((x %+ __nx_class_type) & __nx_class_abstract)
   372                              <1> %idefine is_class_typeof_virtual(x) ((x %+ __nx_class_type) & __nx_class_virtual)
   373                              <1> %idefine is_class_typeof_private(x) ((x %+ __nx_class_type) & __nx_class_private)
   374                              <1> %idefine is_class_typeof_protected(x) ((x %+ __nx_class_type) & __nx_class_protected)
   375                              <1> %idefine is_class_typeof_public(x) ((x %+ __nx_class_type) & __nx_class_public)
   376                              <1> 
   377                              <1> ;//////////////////////////////////////////////////////////////
   378                              <1> ;//
   379                              <1> ;// NASMX ABI size and pointer types
   380                              <1> ;//
   381                              <1> ;//                 Windows     Linux       BSD
   382                              <1> ;//        type     32   64     32   64     32   64
   383                              <1> ;// sizeof(int)      4    4      4    4      4    4
   384                              <1> ;// sizeof(long)     4    4      4    8      4    8
   385                              <1> ;// sizeof(ptr)      4    8      4    8      4    8
   386                              <1> ;// sizeof(size_t)   4    8      4    8      4    8
   387                              <1> %ixdefine size32_t dword
   388                              <1> %ixdefine size64_t qword
   389                              <1> %ixdefine size_t size%[__BITS__]_t
   390                              <1> %assign __NASMX_ABI_BITS__ sizeof(size_t) * 8
   391                              <1> %ifnidn __BITS__,__NASMX_ABI_BITS__
   392                              <1> 	%fatal unknown size_t: __BITS__
   393                              <1> %endif
   394                              <1> %ixdefine ptr32_t dword
   395                              <1> %ixdefine ptr64_t qword
   396                              <1> ;// use for 32->64 bit expansion of either int or ptr
   397                              <1> %ixdefine ptrdiff_t ptr%[__BITS__]_t
   398                              <1> %ixdefine NASMX_PTR ptr%[__BITS__]_t
   399                              <1> ;// remember: intptr's can be confusing when going
   400                              <1> ;// from 32-bit to 64-bit as sizeof(ptr) is increased
   401                              <1> ;// to 8 but sizeof(int) remains 4 potential allowing
   402                              <1> ;// very large (long) ints when using intptrs as ints.
   403                              <1> %ixdefine intptr_t ptrdiff_t
   404                              <1> %ixdefine uintptr_t ptrdiff_t
   405                              <1> 
   406                              <1> ;//////////////////////////////////////////////////////////////
   407                              <1> ;//
   408                              <1> ;// Calling Convention Enumerations
   409                              <1> ;// Used within IMPORT, PROTO, PROC, & INVOKE
   410                              <1> ;//
   411                              <1> ;// BIT
   412                              <1> ;//   0-3: PREFIX - index into decorations (i.e. '_', '@', or '?' )
   413                              <1> ;//        all bits clear if no prefix
   414                              <1> ;//   4-7: SUFFIX - index into decorations (i.e. '@', '?', '$' )
   415                              <1> ;//        all bits clear if no suffix
   416                              <1> ;//  8-11: CALLCONV - calling convention enum
   417                              <1> ;//    12: ARGROTATE - rotate direction of args pushed to stack
   418                              <1> ;//        set if left rotation ( PASCAL = %rotate 1 ), clear if right rotation ( CDECL = %rotate -1)
   419                              <1> ;//    13: RETPOPSARGS - stack adjustment responsibility
   420                              <1> ;//        set if callee pops args ( PASCAL/STDCALL ), clear if caller adjusts stack ( CDECL )
   421                              <1> ;//
   422                              <1> ;// Notes:
   423                              <1> ;//    You may create your own calling convention for your operating
   424                              <1> ;//    system of choice by modifying the flags and macros.  However,
   425                              <1> ;//    the standard calling conventions should continue to exist to
   426                              <1> ;//    permit interfacing with system calls ( unless you're writing
   427                              <1> ;//    an OS with a new ABI/API ;)
   428                              <1> ;//
   429                              <1> %define __NASMX_DECLSPEC_CC_PREFIX_MASK__      0x0007
   430                              <1> %define __NASMX_DECLSPEC_CC_SUFFIX_MASK__      0x0070
   431                              <1> %define __NASMX_DECLSPEC_CC_ENUM_MASK__        0x0F00
   432                              <1> %define __NASMX_DECLSPEC_CC_ARGROTATE_MASK__   0x1000
   433                              <1> %define __NASMX_DECLSPEC_CC_RETPOPSARGS_MASK__ 0x2000
   434                              <1> 
   435                              <1> ;// universal calling conventions
   436                              <1> %idefine __NASMX_DECLSPEC_CALLCONV_NAKED__    0
   437                              <1> %idefine __NASMX_DECLSPEC_CALLCONV_PASCAL__   0x3100
   438                              <1> ;// although currently specific to win32, the
   439                              <1> ;// STDCALL calling convention can be useful
   440                              <1> %idefine __NASMX_DECLSPEC_CALLCONV_STDCALL__  0x2321
   441                              <1> ;// The following 3 calling conventions are highly
   442                              <1> ;// platform dependent and are defined within the
   443                              <1> ;// OUTPUT_FORMAT check
   444                              <1> ;// %idefine __NASMX_DECLSPEC_CALLCONV_CDECL__ 0x????
   445                              <1> ;// %idefine __NASMX_DECLSPEC_CALLCONV_THISCALL__ 0x????
   446                              <1> ;// %idefine __NASMX_DECLSPEC_CALLCONV_FASTCALL__ 0x????
   447                              <1> 
   448                              <1> ;// CALLCONV Enums
   449                              <1> ;// coincidentally compatible with DotGNU
   450                              <1> ;// System.Runtime.InteropServices.CallingConvention Enum
   451                              <1> %idefine __NASMX_DECLSPEC_CC_ENUM_NAKED__     0
   452                              <1> %idefine __NASMX_DECLSPEC_CC_ENUM_PASCAL__    1
   453                              <1> %idefine __NASMX_DECLSPEC_CC_ENUM_CDECL__     2
   454                              <1> %idefine __NASMX_DECLSPEC_CC_ENUM_STDCALL__   3
   455                              <1> %idefine __NASMX_DECLSPEC_CC_ENUM_THISCALL__  4
   456                              <1> %idefine __NASMX_DECLSPEC_CC_ENUM_FASTCALL__  5
   457                              <1> ;// %idefine __NASMX_DECLSPEC_CALLCONV_CC_ENUM_RDFCALL__   6
   458                              <1> 
   459                              <1> ;// internal CALLCONV macros
   460                              <1> %define nx_declspec_cc_prefix(x)       (x & 0x0007)
   461                              <1> %define nx_declspec_cc_suffix(x)      ((x >> 4) & 0x0007)
   462                              <1> %define nx_declspec_cc_enum(x)        ((x >> 8) & 0x000F)
   463                              <1> %define nx_declspec_cc_argrotate(x)   ((x >> 12) & 0x0001)
   464                              <1> %define nx_declspec_cc_retpopsargs(x) ((x >> 13) & 0x0001)
   465                              <1> 
   466                              <1> ;// String containing chars that the prefix/suffix bits index into.
   467                              <1> ;// If you are adding __thiscall convention for your compiler of
   468                              <1> ;// choice make sure that the initial suffix char is present in
   469                              <1> ;// the decorations string.
   470                              <1> %define __NASMX_DECLSPEC_CC_DECORATIONS__     '_@?$'
   471                              <1> ;// The following formatted string is used by the nx_is* functions
   472                              <1> %define __NASMX_NUMALPHATOKEN__ '.+-0123456789EeABCDFabcdfGHIJKLMNOPQRSTUVWXYZghijklmnopqrstuvwxyz$@_'
   473                              <1> 
   474                              <1> ;//////////////////////////////////////////////////////////////
   475                              <1> ;// internal macro calls
   476                              <1> ;// usage:
   477                              <1> ;//    __nx_stack_push STACKNAME, VALUE
   478                              <1> ;//    __nx_stack_pop STACKNAME
   479                              <1> ;//
   480                              <1> %macro __nx_stack_push 2.nolist
   481                              <1> 	%ifdef __NX_STACK_IDX_%[%1]
   482                              <1> 		%assign %%idx __NX_STACK_IDX_%[%1]
   483                              <1> 		%assign %%idx ( %%idx + 1 )
   484                              <1> 		%ixdefine __NX_STACK_IDX_%[%1] %%idx
   485                              <1> 		%ixdefine __NX_STACK_%[%1]_%[%%idx] %2
   486                              <1> 	%else
   487                              <1> 		%ixdefine __NX_STACK_IDX_%[%1] 1
   488                              <1> 		%ixdefine __NX_STACK_%[%1]_1 %2
   489                              <1> 	%endif
   490                              <1> %endmacro
   491                              <1> 
   492                              <1> %macro __nx_stack_pop 1.nolist
   493                              <1> 	%ifdef __NX_STACK_IDX_%[%1]
   494                              <1> 		%assign %%idx __NX_STACK_IDX_%[%1]
   495                              <1> 		%undef __NX_STACK_%[%1]_%[%%idx]
   496                              <1> 		%assign %%idx ( %%idx - 1 )
   497                              <1> 		%if ( %%idx != 0 )
   498                              <1> 			%xdefine __NX_STACK_IDX_%[%1] %%idx
   499                              <1> 		%else
   500                              <1> 			%undef __NX_STACK_IDX_%[%1]
   501                              <1> 		%endif
   502                              <1> 	%endif
   503                              <1> %endmacro
   504                              <1> 
   505                              <1> ;//////////////////////////////////////////////////////////////
   506                              <1> ;// internal macro call
   507                              <1> ;// used by IMPORT, PROC, & INVOKE
   508                              <1> ;// usage:
   509                              <1> ;//    nx_callconv_decorate callconv, funcname, suffix
   510                              <1> ;// examples:
   511                              <1> ;//    nx_callconv_decorate __NASMX_DECLSPEC_CALLCONV_STDCALL__, WinProc, 16
   512                              <1> ;//    nx_callconv_decorate __NASMX_DECLSPEC_CALLCONV_CDECL__, printf
   513                              <1> ;//    nx_callconv_decorate __NASMX_DECLSPEC_CALLCONV_THISCALL__, ClassName.MethodName, 'Z1yi4p8aue'
   514                              <1> %macro nx_callconv_decorate 2-3.nolist 0
   515                              <1> 	%ifnum %1
   516                              <1> 		%assign %%__pidx nx_declspec_cc_prefix(%1)
   517                              <1> 		%assign %%__sidx nx_declspec_cc_suffix(%1)
   518                              <1> 	%else
   519                              <1> 		%fatal 'CALLCONV undefined:' %1
   520                              <1> 	%endif
   521                              <1> 	%ifnum %2
   522                              <1> 		%fatal 'internal error'
   523                              <1> 	%endif
   524                              <1> 
   525                              <1> 	%if %%__pidx > 0
   526                              <1> 		%substr %%__sig __NASMX_DECLSPEC_CC_DECORATIONS__ %%__pidx
   527                              <1> 		%ifnum %2
   528                              <1> 			%fatal 'internal error'
   529                              <1> 		%elifid %2
   530                              <1> 			%defstr %%__func %2
   531                              <1> 		%eliftoken %2
   532                              <1> 			%defstr %%__func %2
   533                              <1> 		%else
   534                              <1> 			%define %%__func %2
   535                              <1> 		%endif
   536                              <1> 		%strcat %%__sig %%__sig,%%__func
   537                              <1> 	%else
   538                              <1> 		%ifstr %2
   539                              <1> 			%define %%__func %2
   540                              <1> 		%else
   541                              <1> 			%defstr %%__sig %2
   542                              <1> 		%endif
   543                              <1> 	%endif
   544                              <1> 	%if %%__sidx > 0
   545                              <1> 		%ifnum %3
   546                              <1> 			%defstr %%__suffix %3
   547                              <1> 		%elifid %3
   548                              <1> 			%defstr %%__suffix %3
   549                              <1> 		%else
   550                              <1> 			%ifstr %3
   551                              <1> 				%define %%__suffix %3
   552                              <1> 			%else
   553                              <1> 				%defstr %%__suffix %3
   554                              <1> 			%endif
   555                              <1> 		%endif
   556                              <1> 		%substr %%__stok __NASMX_DECLSPEC_CC_DECORATIONS__ %%__sidx
   557                              <1> 		%strcat %%__sig %%__sig,%%__stok,%%__suffix
   558                              <1> 	%endif
   559                              <1> 
   560                              <1> 	%deftok %$__nxtok_decorated_name %%__sig
   561                              <1> 
   562                              <1> %endmacro
   563                              <1> 
   564                              <1> ;//////////////////////////////////////////////////////////////
   565                              <1> ;//
   566                              <1> ;// Target Operating System Type definitions
   567                              <1> ;//
   568                              <1> %define __NASMX_DECLSPEC_SYSTYPE_LINUX__   1
   569                              <1> %define __NASMX_DECLSPEC_SYSTYPE_MACHOS__  2
   570                              <1> %define __NASMX_DECLSPEC_SYSTYPE_BSD__     3
   571                              <1> %define __NASMX_DECLSPEC_SYSTYPE_WINDOWS__ 4
   572                              <1> 
   573                              <1> ;//////////////////////////////////////////////////////////////////
   574                              <1> ;// Macro to control NASMX default behavior
   575                              <1> ;// example usage:
   576                              <1> ;//    NASMX_PRAGMA PACK, PUSH, 2
   577                              <1> ;//    NASMX_PRAGMA PACK, POP
   578                              <1> ;//    NASMX_PRAGMA CALLSTACK, 32 ; Enable callstack optimization
   579                              <1> ;//    NASMX_PRAGMA CALLSTACK, 0  ; Disable callstack optimization
   580                              <1> ;//    NASMX_PRAGMA WARNING, DISABLE, ALL
   581                              <1> ;//    NASMX_PRAGMA WARNING, DISABLE, 8001[, 8002, 8003]
   582                              <1> ;//    NASMX_PRAGMA WARNING, ENABLE, ALL
   583                              <1> ;//    NASMX_PRAGMA INVOKE_FASTCALL_STACK_PRELOAD, ENABLE
   584                              <1> ;//    NASMX_PRAGMA PROC_FASTCALL_STACK_PRELOAD, DISABLE
   585                              <1> ;//    NASMX_PRAGMA INVOKE_FASTCALL_STACK_PRELOAD, ENABLE
   586                              <1> ;// The macro will eventually allow us to enable/disable
   587                              <1> ;// warnings generated by the NASMX macro type system
   588                              <1> %imacro NASMX_PRAGMA 1-*.nolist
   589                              <1> 	%ifidni WARNING,%1
   590                              <1> 		%warning actual pragma warnings currently unimplemented
   591                              <1> 		%ifidni ENABLE, %2
   592                              <1> 			;// assert: warnings are enabled if undefined
   593                              <1> 			%ifidni ALL,%3
   594                              <1> 				%ifdef __NASMX_PRAGMA_WARNING_8001__
   595                              <1> 					%undef __NASMX_PRAGMA_WARNING_8001__
   596                              <1> 				%endif
   597                              <1> 				%ifdef __NASMX_PRAGMA_WARNING_8002__
   598                              <1> 					%undef __NASMX_PRAGMA_WARNING_8002__
   599                              <1> 				%endif
   600                              <1> 			%else
   601                              <1> 				%rep %0-2
   602                              <1> 					%rotate 1
   603                              <1> 					%ifdef __NASMX_PRAGMA_WARNING_%1__
   604                              <1> 						%undef __NASMX_PRAGMA_WARNING_%1__
   605                              <1> 					%endif
   606                              <1> 				%endrep
   607                              <1> 			%endif
   608                              <1> 		%elifidni DISABLE, %2
   609                              <1> 			;// assert: warnings are disabled if defined
   610                              <1> 			%ifidni ALL,%3
   611                              <1> 				%ifndef __NASMX_PRAGMA_WARNING_8001__
   612                              <1> 					%define __NASMX_PRAGMA_WARNING_8001__
   613                              <1> 				%endif
   614                              <1> 				%ifndef __NASMX_PRAGMA_WARNING_8002__
   615                              <1> 					%define __NASMX_PRAGMA_WARNING_8002__
   616                              <1> 				%endif
   617                              <1> 			%else
   618                              <1> 				%rep %0-2
   619                              <1> 					%rotate 1
   620                              <1> 					%ifndef __NASMX_PRAGMA_WARNING_%3__
   621                              <1> 						%define __NASMX_PRAGMA_WARNING_%3__
   622                              <1> 					%endif
   623                              <1> 				%endrep
   624                              <1> 			%endif
   625                              <1> 		%else
   626                              <1> 			%error 'syntax: nasmx_pragma warning, [enable | disable], ...'
   627                              <1> 		%endif
   628                              <1> 	%elifidni CALLSTACK, %1
   629                              <1> 		;// This option is very useful with fastcall
   630                              <1> 		%ifdef NASMX_ENDPROC
   631                              <1> 			%error %1 pragma cannot be defined within procedure definition
   632                              <1> 		%endif
   633                              <1> 		%ifnum %2
   634                              <1> 			%assign %%__nx_stack_adjust %2
   635                              <1> 			%if %%__nx_stack_adjust > 0
   636                              <1> 				;// assert: turning on call stack feature
   637                              <1> 				%ifidni __OUTPUT_FORMAT__, win64
   638                              <1> 					;// assert: Win64 calling convention requires
   639                              <1> 					;// that the call stack be at least 32
   640                              <1> 					%if %%__nx_stack_adjust < 32
   641                              <1> 						%assign %%__nx_stack_adjust 32
   642                              <1> 					%endif
   643                              <1> 				%endif
   644                              <1> 				;// Note: x64 calling convention requires that
   645                              <1> 				;// the call stack be aligned to 16 bytes.
   646                              <1> 				;// Use 8 bytes for x86
   647                              <1> 				%assign %%__nx_align __NASMX_ABI_BITS__ / 4
   648                              <1> 				%assign %%__off (((%%__nx_stack_adjust + %%__nx_align) / %%__nx_align) * %%__nx_align)
   649                              <1> 				%assign %%__tmp (%%__nx_stack_adjust + %%__nx_align)
   650                              <1> 				%if (%%__off != %%__tmp)
   651                              <1> 					%assign %%__nx_stack_adjust %%__off
   652                              <1> 				%endif
   653                              <1> 			%endif
   654                              <1> 			;// This must be a global define since it is used within the procedure
   655                              <1> 			;// and during invoke and thus could be hidden by one or more user contexts
   656                              <1> 			%ifdef __NX_PROLOGUE_CALLSTACK_ADJUST__
   657                              <1> 				%undef __NX_PROLOGUE_CALLSTACK_ADJUST__
   658                              <1> 			%endif
   659                              <1> 			%if %%__nx_stack_adjust > 0
   660                              <1> 				%xdefine __NX_PROLOGUE_CALLSTACK_ADJUST__ %%__nx_stack_adjust
   661                              <1> 			%endif
   662                              <1> 		%else
   663                              <1> 			%error %1 pragma requires valid byte count
   664                              <1> 		%endif
   665                              <1> 	%elifidni FASTCALL_STACK_PRELOAD, %1
   666                              <1> 		;// NASMX 1.4 - The behavior of this pragma was changed
   667                              <1> 		;// to account for new proc/invoke fastcall preloading behavior.
   668                              <1> 		;// Beginning with this version of NASMX invoke fastcall stack preload
   669                              <1> 		;// is disabled by default.
   670                              <1> 		%warning 'This pragma option is deprecated.'
   671                              <1> 		%ifidni ENABLE, %2
   672                              <1> 			%ifndef ENABLE_INVOKE_FASTCALL_STACK_PRELOAD
   673                              <1> 				%xdefine ENABLE_INVOKE_FASTCALL_STACK_PRELOAD 1
   674                              <1> 			%endif
   675                              <1> 		%elifidni DISABLE, %2
   676                              <1> 			%ifdef ENABLE_INVOKE_FASTCALL_STACK_PRELOAD
   677                              <1> 				%undef ENABLE_INVOKE_FASTCALL_STACK_PRELOAD
   678                              <1> 			%endif
   679                              <1> 		%else
   680                              <1> 			%error 'This pragma option is deprecated.'
   681                              <1> 		%endif
   682                              <1> 	%elifidni INVOKE_FASTCALL_STACK_PRELOAD, %1
   683                              <1> 		;// by default, invoke fastcall stack preload is disabled
   684                              <1> 		%ifidni ENABLE, %2
   685                              <1> 			%ifndef ENABLE_INVOKE_FASTCALL_STACK_PRELOAD
   686                              <1> 				%xdefine ENABLE_INVOKE_FASTCALL_STACK_PRELOAD 1
   687                              <1> 			%endif
   688                              <1> 		%elifidni DISABLE, %2
   689                              <1> 			%ifdef ENABLE_INVOKE_FASTCALL_STACK_PRELOAD
   690                              <1> 				%undef ENABLE_INVOKE_FASTCALL_STACK_PRELOAD
   691                              <1> 			%endif
   692                              <1> 		%else
   693                              <1> 			%error 'syntax: nasmx_pragma invoke_fastcall_stack_preload, [enable | disable]'
   694                              <1> 		%endif
   695                              <1> 	%elifidni PROC_FASTCALL_STACK_PRELOAD, %1
   696                              <1> 		;// by default, proc fastcall stack preload is enabled
   697                              <1> 		%ifidni DISABLE, %2
   698                              <1> 			%ifndef DISABLE_PROC_FASTCALL_STACK_PRELOAD
   699                              <1> 				%xdefine DISABLE_PROC_FASTCALL_STACK_PRELOAD 1
   700                              <1> 			%endif
   701                              <1> 		%elifidni ENABLE, %2
   702                              <1> 			%ifdef DISABLE_PROC_FASTCALL_STACK_PRELOAD
   703                              <1> 				%undef DISABLE_PROC_FASTCALL_STACK_PRELOAD
   704                              <1> 			%endif
   705                              <1> 		%else
   706                              <1> 			%error 'syntax: nasmx_pragma proc_fastcall_stack_preload, [enable | disable]'
   707                              <1> 		%endif
   708                              <1> 	%elifidni PACK, %1
   709                              <1> 		%ifidni PUSH, %2
   710                              <1> 			%assign %%maxsize ( __BITS__ / 2 )
   711                              <1> 			%if ( %0 < 3 )
   712                              <1> 				%fatal missing packing alignment value
   713                              <1> 			%elif ( %3 > %%maxsize )
   714                              <1> 				%error cannot align larger than %%maxsize
   715                              <1> 			%elif ( %3 > 1 )
   716                              <1> 				%assign %%exp 0
   717                              <1> 				%assign %%align %3
   718                              <1> 				%rep %3
   719                              <1> 					%if ((%%align & 0x0001) == 0 )
   720                              <1> 						%assign %%exp ( %%exp + 1 )
   721                              <1> 						%assign %%align ( %%align >> 1 )
   722                              <1> 					%else
   723                              <1> 						%exitrep
   724                              <1> 					%endif
   725                              <1> 				%endrep
   726                              <1> 				%if ( %%align != 1 )
   727                              <1> 					%fatal alignment must be a small power of 2
   728                              <1> 				%endif
   729                              <1> 			%endif
   730                              <1> 			
   731                              <1> 			__nx_stack_push pack, %3
   732                              <1> 		%elifidni POP, %2
   733                              <1> 			__nx_stack_pop pack
   734                              <1> 		%else
   735                              <1> 			%error unknown packing directive
   736                              <1> 		%endif
   737                              <1> 	%else
   738                              <1> 		%error 'unknown nasmx_pragma:' %1
   739                              <1> 	%endif
   740                              <1> %endmacro
   741                              <1> 
   742                              <1> ;//////////////////////////////////////////////////////////////////
   743                              <1> ;// Macro to override default ABI behavior (Declare Specialization)
   744                              <1> ;// example usage:
   745                              <1> ;//    NASMX_DECLSPEC CALLCONV, PASCAL
   746                              <1> ;//    NASMX_DECLSPEC CALLCONV, STDCALL, DEFAULT
   747                              <1> ;//    NASMX_DECLSPEC SYSTYPE, LINUX
   748                              <1> ;//
   749                              <1> ;// notes:
   750                              <1> ;//    Make sure you understand the effects of using this command
   751                              <1> ;//    before making a global declaration!  Unresolved linker errors
   752                              <1> ;//    may haunt you!
   753                              <1> %imacro NASMX_DECLSPEC 1-8.nolist
   754                              <1> 	%ifidni %1,CALLCONV
   755                              <1> 		%if %0 < 2
   756                              <1> 			%error 'nasmx_declspec syntax'
   757                              <1> 		%endif
   758                              <1> 		%ifndef __NASMX_DECLSPEC_CALLCONV_%[%2]__
   759                              <1> 			%error 'unknown declspec calltype:' %2
   760                              <1> 		%endif
   761                              <1> 		%if %0 == 2
   762                              <1> 			%ixdefine __NASMX_DECLSPEC_CALLCONV_DEFAULT__ __NASMX_DECLSPEC_CALLCONV_%[%2]__
   763                              <1> 		%else
   764                              <1> 			%ifdef __NASMX_DECLSPEC_CALLCONV_%[%3]__
   765                              <1> 				%warning 'declspec redefining' %1 %2 %3
   766                              <1> 			%endif
   767                              <1> 			%ixdefine __NASMX_DECLSPEC_CALLCONV_%[%3]__ __NASMX_DECLSPEC_CALLCONV_%[%2]__
   768                              <1> 		%endif
   769                              <1> 	%else
   770                              <1> 		%ifidni %1,SYSTYPE
   771                              <1> 			%ifndef __NASMX_DECLSPEC_SYSTYPE_%[%2]__
   772                              <1> 				%error 'unknown declspec systype:' %2
   773                              <1> 			%endif
   774                              <1> 			%if %0 == 2
   775                              <1> 				%ixdefine __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ __NASMX_DECLSPEC_SYSTYPE_%[%2]__
   776                              <1> 			%else
   777                              <1> 				%ifdef __NASMX_DECLSPEC_SYSTYPE_%[%3]__
   778                              <1> 					%warning 'declspec redefining' %1 %2 %3
   779                              <1> 				%endif
   780                              <1> 				%ixdefine __NASMX_DECLSPEC_SYSTYPE_%[%3]__ __NASMX_DECLSPEC_SYSTYPE_%[%2]__
   781                              <1> 			%endif
   782                              <1> 		%else
   783                              <1> 			%error 'unknown declspec:' %1
   784                              <1> 		%endif
   785                              <1> 	%endif
   786                              <1> %endmacro
   787                              <1> 
   788                              <1> 
   789                              <1> ;//////////////////////////////////////////////////////////////////
   790                              <1> ;// OUTPUT_FORMAT check
   791                              <1> ;//
   792                              <1> ;// All system specific defines are made here
   793                              <1> ;//
   794                              <1> %ifidn	 __OUTPUT_FORMAT__,elf
   795                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_CDECL__    0x0200
   796                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_THISCALL__ 0x0410
   797                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_FASTCALL__ 0x0500
   798                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__    2
   799                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__  0
   800                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_4__ 'ECXEDX'
   801                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_2__ 'CX DX '
   802                              <1> 	%ifdef FREEBSD
   803                              <1> 		NASMX_DECLSPEC SYSTYPE, BSD
   804                              <1> 	%elifdef NETBSD
   805                              <1> 		NASMX_DECLSPEC SYSTYPE, BSD
   806                              <1> 	%elifdef OPENBSD
   807                              <1> 		NASMX_DECLSPEC SYSTYPE, BSD
   808                              <1> 	%else
   809                              <1> 		NASMX_DECLSPEC SYSTYPE, LINUX
   810                              <1> 	%endif
   811                              <1> 	NASMX_DECLSPEC CALLCONV, CDECL, DEFAULT
   812                              <1> 	%idefine long_t long32_t
   813                              <1> 	%idefine ulong_t ulong32_t
   814                              <1> 	%idefine wchar_t dword
   815                              <1> 	%ifdef UNICODE
   816                              <1> 		%idefine NASMX_TCHAR wchar_t
   817                              <1> 		%idefine NASMX_TEXT(x) __utf32__(x)
   818                              <1> 	%else
   819                              <1> 		%idefine NASMX_TCHAR char_t
   820                              <1> 		%idefine NASMX_TEXT(x) x
   821                              <1> 	%endif
   822                              <1> %elifidn __OUTPUT_FORMAT__,elf32
   823                              <1> 	;// gcc does NOT prepend underscores to functions
   824                              <1> 	;// declared using cdecl
   825                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_CDECL__    0x0200
   826                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_THISCALL__ 0x0410
   827                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_FASTCALL__ 0x0500
   828                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__    2
   829                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__  0
   830                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_4__ 'ECXEDX'
   831                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_2__ 'CX DX '
   832                              <1> 	%ifdef FREEBSD
   833                              <1> 		NASMX_DECLSPEC SYSTYPE, BSD	
   834                              <1> 	%elifdef NETBSD
   835                              <1> 		NASMX_DECLSPEC SYSTYPE, BSD	
   836                              <1> 	%elifdef OPENBSD
   837                              <1> 		NASMX_DECLSPEC SYSTYPE, BSD	
   838                              <1> 	%else
   839                              <1> 		NASMX_DECLSPEC SYSTYPE, LINUX
   840                              <1> 	%endif
   841                              <1> 	NASMX_DECLSPEC CALLCONV, CDECL, DEFAULT
   842                              <1> 	%idefine long_t long32_t
   843                              <1> 	%idefine ulong_t ulong32_t
   844                              <1> 	%idefine wchar_t dword
   845                              <1> 	%ifdef UNICODE
   846                              <1> 		%idefine NASMX_TCHAR wchar_t
   847                              <1> 		%idefine NASMX_TEXT(x) __utf32__(x)
   848                              <1> 	%else
   849                              <1> 		%idefine NASMX_TCHAR char_t
   850                              <1> 		%idefine NASMX_TEXT(x) x
   851                              <1> 	%endif
   852                              <1> %elifidn __OUTPUT_FORMAT__,elf64
   853                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_CDECL__    0x0200
   854                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_THISCALL__ 0x0410
   855                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_FASTCALL__ 0x0500
   856                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__    6
   857                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__  8
   858                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGFLOATARGS_8__ 'XMM0XMM1XMM2XMM3XMM4XMM5XMM6XMM7'
   859                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_8__ 'RDIRSIRDXRCXR8 R9 '
   860                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_4__ 'EDIESIEDXECXR8DR9D'
   861                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_2__ 'DI SI DX CX R8WR9W'
   862                              <1> 	%ifdef FREEBSD
   863                              <1> 		NASMX_DECLSPEC SYSTYPE, BSD	
   864                              <1> 	%elifdef NETBSD
   865                              <1> 		NASMX_DECLSPEC SYSTYPE, BSD	
   866                              <1> 	%elifdef OPENBSD
   867                              <1> 		NASMX_DECLSPEC SYSTYPE, BSD	
   868                              <1> 	%else
   869                              <1> 		NASMX_DECLSPEC SYSTYPE, LINUX
   870                              <1> 	%endif
   871                              <1> 	NASMX_DECLSPEC CALLCONV, FASTCALL, DEFAULT
   872                              <1> 	%idefine long_t long64_t
   873                              <1> 	%idefine ulong_t ulong64_t
   874                              <1> 	%idefine wchar_t dword
   875                              <1> 	%ifdef UNICODE
   876                              <1> 		%idefine NASMX_TCHAR wchar_t
   877                              <1> 		%idefine NASMX_TEXT(x) __utf32__(x)
   878                              <1> 	%else
   879                              <1> 		%idefine NASMX_TCHAR char_t
   880                              <1> 		%idefine NASMX_TEXT(x) x
   881                              <1> 	%endif
   882                              <1> %elifidn __OUTPUT_FORMAT__,macho
   883                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_CDECL__    0x0201
   884                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_THISCALL__ 0x0411
   885                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_FASTCALL__ 0x0501
   886                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__    0
   887                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__  0
   888                              <1> 	NASMX_DECLSPEC SYSTYPE, MACHOS
   889                              <1> 	NASMX_DECLSPEC CALLCONV, CDECL, DEFAULT
   890                              <1> 	%idefine long_t long32_t
   891                              <1> 	%idefine ulong_t ulong32_t
   892                              <1> 	%idefine wchar_t dword
   893                              <1> 	%ifdef UNICODE
   894                              <1> 		%idefine NASMX_TCHAR wchar_t
   895                              <1> 		%idefine NASMX_TEXT(x) __utf32__(x)
   896                              <1> 	%else
   897                              <1> 		%idefine NASMX_TCHAR char_t
   898                              <1> 		%idefine NASMX_TEXT(x) x
   899                              <1> 	%endif
   900                              <1> %elifidn __OUTPUT_FORMAT__,macho32
   901                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_CDECL__    0x0201
   902                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_THISCALL__ 0x0411
   903                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_FASTCALL__ 0x0501
   904                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__    0
   905                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__  0
   906                              <1> 	NASMX_DECLSPEC SYSTYPE, MACHOS
   907                              <1> 	NASMX_DECLSPEC CALLCONV, CDECL, DEFAULT
   908                              <1> 	%idefine long_t long32_t
   909                              <1> 	%idefine ulong_t ulong32_t
   910                              <1> 	%idefine wchar_t dword
   911                              <1> 	%ifdef UNICODE
   912                              <1> 		%idefine NASMX_TCHAR wchar_t
   913                              <1> 		%idefine NASMX_TEXT(x) __utf32__(x)
   914                              <1> 	%else
   915                              <1> 		%idefine NASMX_TCHAR char_t
   916                              <1> 		%idefine NASMX_TEXT(x) x
   917                              <1> 	%endif
   918                              <1> %elifidn __OUTPUT_FORMAT__,macho64
   919                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_CDECL__    0x0201
   920                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_THISCALL__ 0x0411
   921                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_FASTCALL__ 0x0501
   922                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__    6
   923                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__  8
   924                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGFLOATARGS_8__ 'XMM0XMM1XMM2XMM3XMM4XMM5XMM6XMM7'
   925                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_8__ 'RDIRSIRDXRCXR8 R9 '
   926                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_4__ 'EDIESIEDXECXR8dR9d'
   927                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_2__ 'DI SI DX CX R8wR9w'
   928                              <1> 	NASMX_DECLSPEC SYSTYPE, MACHOS
   929                              <1> 	NASMX_DECLSPEC CALLCONV, FASTCALL, DEFAULT
   930                              <1> 	%idefine long_t long64_t
   931                              <1> 	%idefine ulong_t ulong64_t
   932                              <1> 	%idefine wchar_t dword
   933                              <1> 	%ifdef UNICODE
   934                              <1> 		%idefine NASMX_TCHAR wchar_t
   935                              <1> 		%idefine NASMX_TEXT(x) __utf32__(x)
   936                              <1> 	%else
   937                              <1> 		%idefine NASMX_TCHAR char_t
   938                              <1> 		%idefine NASMX_TEXT(x) x
   939                              <1> 	%endif
   940                              <1> %elifidn __OUTPUT_FORMAT__,win32
   941                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_CDECL__    0x0201
   942                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_THISCALL__ 0x2423
   943                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_FASTCALL__ 0x2522
   944                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__    2
   945                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__  0
   946                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_4__ 'ECXEDX'
   947                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_2__ 'CX DX '
   948                              <1> 	NASMX_DECLSPEC SYSTYPE, WINDOWS
   949                              <1> 	NASMX_DECLSPEC CALLCONV, STDCALL, DEFAULT
   950                              <1> 	%idefine long_t long32_t
   951                              <1> 	%idefine ulong_t ulong32_t
   952                              <1> 	%idefine wchar_t word
   953                              <1> 	%ifdef UNICODE
   954                              <1> 		%idefine NASMX_TCHAR wchar_t
   955                              <1> 		%idefine NASMX_TEXT(x) __utf16__(x)
   956                              <1> 	%else
   957                              <1> 		%idefine NASMX_TCHAR char_t
   958                              <1> 		%idefine NASMX_TEXT(x) x
   959                              <1> 	%endif
   960                              <1> %elifidn __OUTPUT_FORMAT__,win64
   961                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_CDECL__    0x0201
   962                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_THISCALL__ 0x2423
   963                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_FASTCALL__ 0x0500
   964                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__    4
   965                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__  4
   966                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGFLOATARGS_8__ 'XMM0XMM1XMM2XMM3'
   967                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_8__ 'RCXRDXR8 R9 '
   968                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_4__ 'ECXEDXR8DR9D'
   969                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_REGINTARGS_2__ 'CX DX R8WR9W'
   970                              <1> 	NASMX_DECLSPEC SYSTYPE, WINDOWS
   971                              <1> 	NASMX_DECLSPEC CALLCONV, FASTCALL, DEFAULT
   972                              <1> 	%idefine long_t long32_t
   973                              <1> 	%idefine ulong_t ulong32_t
   974                              <1> 	%idefine wchar_t word
   975                              <1> 	%ifdef UNICODE
   976                              <1> 		%idefine NASMX_TCHAR wchar_t
   977                              <1> 		%idefine NASMX_TEXT(x) __utf16__(x)
   978                              <1> 	%else
   979                              <1> 		%idefine NASMX_TCHAR char_t
   980                              <1> 		%idefine NASMX_TEXT(x) x
   981                              <1> 	%endif
   982                              <1> %else
   983                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_CDECL__    0x0200
   984                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_THISCALL__ 0x0410
   985                              <1> 	%idefine __NASMX_DECLSPEC_CALLCONV_FASTCALL__ 0x0500
   986                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__    0
   987                              <1> 	%define __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__  0
   988                              <1> 	NASMX_DECLSPEC SYSTYPE, LINUX
   989                              <1> 	NASMX_DECLSPEC CALLCONV, CDECL, DEFAULT
   990                              <1> 	%if sizeof(size_t) == 32
   991                              <1> 		%idefine long_t long32_t
   992                              <1> 		%idefine ulong_t ulong32_t
   993                              <1> 	%else
   994                              <1> 		%idefine long_t long64_t
   995                              <1> 		%idefine ulong_t ulong64_t
   996                              <1> 	%endif
   997                              <1> 	%idefine wchar_t dword
   998                              <1> 	%ifdef UNICODE
   999                              <1> 		%idefine NASMX_TCHAR wchar_t
  1000                              <1> 		%idefine NASMX_TEXT(x) __utf32__(x)
  1001                              <1> 	%else
  1002                              <1> 		%idefine NASMX_TCHAR char_t
  1003                              <1> 		%idefine NASMX_TEXT(x) x
  1004                              <1> 	%endif
  1005                              <1> %endif
  1006                              <1> 
  1007                              <1> ;// pull in appropriate syscalls
  1008                              <1> %if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_BSD__
  1009                              <1>     %ifdef FREEBSD
  1010                              <1> 	%include 'nasmx/bsd/syscalls.freebsd.inc'
  1011                              <1>     %elifdef NETBSD
  1012                              <1> 	%include 'nasmx/bsd/syscalls.netbsd.inc'
  1013                              <1>     %elifdef OPENBSD
  1014                              <1> 	%include 'nasmx/bsd/syscalls.openbsd.inc'
  1015                              <1>     %endif
  1016                              <1> %elif __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_LINUX__
  1017                              <1>     %include 'nasmx/linux/syscall.inc'
     1                              <2> ;*****************************
     2                              <2> ;***** The NASMX Project *****
     3                              <2> ;*****************************
     4                              <2> 
     5                              <2> %ifndef __NASMX_SYSCALL_INC__
     6                              <2> %define __NASMX_SYSCALL_INC__
     7                              <2> 
     8                              <2> %if __BITS__ == 64
     9                              <2> 
    10                              <2> ; ---------------------------------
    11                              <2> ; SysCall Macro
    12                              <2> ; ---------------------------------
    13                              <2> 
    14                              <2> ; To work around a Nasm warning this macro is defined
    15                              <2> ; as taking 0-7 args since the opcode syscall is used
    16                              <2> ; on 64-bit linux.
    17                              <2> ; Also, use caution when checking integral values that
    18                              <2> ; can benefit from sign-extension.  For example,
    19                              <2> ; 0xFFFFFFFF can be interpreted as -1 or 4294967295.
    20                              <2> ; The adventurous among you can also add checks for
    21                              <2> ; specific cpu types and inject opcodes based on speed
    22                              <2> ; vs. size considerations.
    23                              <2> 
    24                              <2> %imacro syscall 0-7.nolist
    25                              <2>   %if %0 > 1
    26                              <2>     %if %0 > 2
    27                              <2>       %if %0 > 3
    28                              <2>         %if %0 > 4
    29                              <2>           %if %0 > 5
    30                              <2>             %if %0 > 6
    31                              <2>               %ifnum %{7}
    32                              <2>                 %if %{7} == 0
    33                              <2>                   xor r9, r9
    34                              <2>                 %elif %{7} == -1
    35                              <2>                   or  r9, -1
    36                              <2>                 %elif ((%{7} >= -2147483648) && (%{7} <= 2147483647))
    37                              <2>                   mov r9d, %{7}
    38                              <2>                 %else
    39                              <2>                   mov r9, %{7}
    40                              <2>                 %endif
    41                              <2>               %elifnidi %{7}, r9
    42                              <2>                 mov r9, %{7}
    43                              <2>               %endif
    44                              <2>             %endif
    45                              <2>             %ifnum %{6}
    46                              <2>               %if %{6} == 0
    47                              <2>                 xor r8, r8
    48                              <2>               %elif %{6} == -1
    49                              <2>                 or  r8, -1
    50                              <2>               %elif ((%{6} >= -2147483648) && (%{6} <= 2147483647))
    51                              <2>                 mov r8d, %{6}
    52                              <2>               %else
    53                              <2>                 mov r8, %{6}
    54                              <2>               %endif
    55                              <2>             %elifnidni %{6}, r8
    56                              <2>               mov r8, %{6}
    57                              <2>             %endif
    58                              <2>           %endif
    59                              <2>           %ifnum %{5}
    60                              <2>             %if %{5} == 0
    61                              <2>               xor r10, r10
    62                              <2>             %elif %{5} == -1
    63                              <2>               or  r10, -1
    64                              <2>             %elif ((%{5} >= -2147483648) && (%{5} <= 2147483647))
    65                              <2>               mov r10d, %{5}
    66                              <2>             %else
    67                              <2>               mov r10, %{5}
    68                              <2>             %endif
    69                              <2>           %elifnidni %{5}, r10
    70                              <2>             mov r10, %{5}
    71                              <2>           %endif
    72                              <2>         %endif
    73                              <2>         %ifnum %{4}
    74                              <2>           %if %{4} == 0
    75                              <2>             xor rdx, rdx
    76                              <2>           %elif %{4} == -1
    77                              <2>             or  rdx, -1
    78                              <2>           %elif ((%{4} >= -2147483648) && (%{4} <= 2147483647))
    79                              <2>             mov edx, %{4}
    80                              <2>           %else
    81                              <2>             mov rdx, %{4}
    82                              <2>           %endif
    83                              <2>         %elifnidni %{4}, rdx
    84                              <2>           mov rdx, %{4}
    85                              <2>         %endif
    86                              <2>       %endif
    87                              <2>       %ifnum %{3}
    88                              <2>         %if %{3} == 0
    89                              <2>           xor rsi, rsi
    90                              <2>         %elif %{3} == -1
    91                              <2>           or  rsi, -1
    92                              <2>         %elif ((%{3} >= -2147483648) && (%{3} <= 2147483647))
    93                              <2>           mov esi, %{3}
    94                              <2>         %else
    95                              <2>           mov rsi, %{3}
    96                              <2>         %endif
    97                              <2>       %elifnidni %{3}, rsi
    98                              <2>         mov rsi, %{3}
    99                              <2>       %endif
   100                              <2>     %endif
   101                              <2>     %ifnum %{2}
   102                              <2>       %if %{2} == 0
   103                              <2>         xor rdi, rdi
   104                              <2>       %elif %{2} == -1
   105                              <2>         or  rdi, -1
   106                              <2>       %elif ((%{2} >= -2147483648) && (%{2} <= 2147483647))
   107                              <2>         mov edi, %{2}
   108                              <2>       %else
   109                              <2>         mov rdi, %{2}
   110                              <2>       %endif
   111                              <2>     %elifnidni %{2}, rdi
   112                              <2>       mov rdi, %{2}
   113                              <2>     %endif
   114                              <2>   %endif
   115                              <2> 
   116                              <2>   ; take advantage of sign-extension
   117                              <2>   mov eax, SYS_ %+ %{1}
   118                              <2>   syscall  ; the opcode, not the macro
   119                              <2> %endmacro
   120                              <2> 
   121                              <2> ; ---------------------------------
   122                              <2> ; System Call Listing
   123                              <2> ; ---------------------------------
   124                              <2> 
   125                              <2> %define SYS_read               0
   126                              <2> %define SYS_write              1
   127                              <2> %define SYS_open               2
   128                              <2> %define SYS_close              3
   129                              <2> %define SYS_stat               4
   130                              <2> %define SYS_fstat              5
   131                              <2> %define SYS_lstat              6
   132                              <2> %define SYS_poll               7
   133                              <2> %define SYS_lseek              8
   134                              <2> %define SYS_mmap               9
   135                              <2> %define SYS_mprotect           10
   136                              <2> %define SYS_munmap             11
   137                              <2> %define SYS_brk                12
   138                              <2> %define SYS_rt_sigaction       13
   139                              <2> %define SYS_rt_sigprocmask     14
   140                              <2> %define SYS_rt_sigreturn       15
   141                              <2> %define SYS_ioctl              16
   142                              <2> %define SYS_pread64            17
   143                              <2> %define SYS_pwrite64           18
   144                              <2> %define SYS_readv              19
   145                              <2> %define SYS_writev             20
   146                              <2> %define SYS_access             21
   147                              <2> %define SYS_pipe               22
   148                              <2> %define SYS_select             23
   149                              <2> %define SYS_sched_yield        24
   150                              <2> %define SYS_mremap             25
   151                              <2> %define SYS_msync              26
   152                              <2> %define SYS_mincore            27
   153                              <2> %define SYS_madvise            28
   154                              <2> %define SYS_shmget             29
   155                              <2> %define SYS_shmat              30
   156                              <2> %define SYS_shmctl             31
   157                              <2> %define SYS_dup                32
   158                              <2> %define SYS_dup2               33
   159                              <2> %define SYS_pause              34
   160                              <2> %define SYS_nanosleep          35
   161                              <2> %define SYS_getitimer          36
   162                              <2> %define SYS_alarm              37
   163                              <2> %define SYS_setitimer          38
   164                              <2> %define SYS_getpid             39
   165                              <2> %define SYS_sendfile           40
   166                              <2> %define SYS_socket             41
   167                              <2> %define SYS_connect            42
   168                              <2> %define SYS_accept             43
   169                              <2> %define SYS_sendto             44
   170                              <2> %define SYS_recvfrom           45
   171                              <2> %define SYS_sendmsg            46
   172                              <2> %define SYS_recvmsg            47
   173                              <2> %define SYS_shutdown           48
   174                              <2> %define SYS_bind               49
   175                              <2> %define SYS_listen             50
   176                              <2> %define SYS_getsockname        51
   177                              <2> %define SYS_getpeername        52
   178                              <2> %define SYS_socketpair         53
   179                              <2> %define SYS_setsockopt         54
   180                              <2> %define SYS_getsockopt         55
   181                              <2> %define SYS_clone              56
   182                              <2> %define SYS_fork               57
   183                              <2> %define SYS_vfork              58
   184                              <2> %define SYS_execve             59
   185                              <2> %define SYS_exit               60
   186                              <2> %define SYS_wait4              61
   187                              <2> %define SYS_kill               62
   188                              <2> %define SYS_uname              63
   189                              <2> %define SYS_semget             64
   190                              <2> %define SYS_semop              65
   191                              <2> %define SYS_semctl             66
   192                              <2> %define SYS_shmdt              67
   193                              <2> %define SYS_msgget             68
   194                              <2> %define SYS_msgsnd             69
   195                              <2> %define SYS_msgrcv             70
   196                              <2> %define SYS_msgctl             71
   197                              <2> %define SYS_fcntl              72
   198                              <2> %define SYS_flock              73
   199                              <2> %define SYS_fsync              74
   200                              <2> %define SYS_fdatasync          75
   201                              <2> %define SYS_truncate           76
   202                              <2> %define SYS_ftruncate          77
   203                              <2> %define SYS_getdents           78
   204                              <2> %define SYS_getcwd             79
   205                              <2> %define SYS_chdir              80
   206                              <2> %define SYS_fchdir             81
   207                              <2> %define SYS_rename             82
   208                              <2> %define SYS_mkdir              83
   209                              <2> %define SYS_rmdir              84
   210                              <2> %define SYS_creat              85
   211                              <2> %define SYS_link               86
   212                              <2> %define SYS_unlink             87
   213                              <2> %define SYS_symlink            88
   214                              <2> %define SYS_readlink           89
   215                              <2> %define SYS_chmod              90
   216                              <2> %define SYS_fchmod             91
   217                              <2> %define SYS_chown              92
   218                              <2> %define SYS_fchown             93
   219                              <2> %define SYS_lchown             94
   220                              <2> %define SYS_umask              95
   221                              <2> %define SYS_gettimeofday       96
   222                              <2> %define SYS_getrlimit          97
   223                              <2> %define SYS_getrusage          98
   224                              <2> %define SYS_sysinfo            99
   225                              <2> %define SYS_times              100
   226                              <2> %define SYS_ptrace             101
   227                              <2> %define SYS_getuid             102
   228                              <2> %define SYS_syslog             103
   229                              <2> %define SYS_getgid             104
   230                              <2> %define SYS_setuid             105
   231                              <2> %define SYS_setgid             106
   232                              <2> %define SYS_geteuid            107
   233                              <2> %define SYS_getegid            108
   234                              <2> %define SYS_setpgid            109
   235                              <2> %define SYS_getppid            110
   236                              <2> %define SYS_getpgrp            111
   237                              <2> %define SYS_setsid             112
   238                              <2> %define SYS_setreuid           113
   239                              <2> %define SYS_setregid           114
   240                              <2> %define SYS_getgroups          115
   241                              <2> %define SYS_setgroups          116
   242                              <2> %define SYS_setresuid          117
   243                              <2> %define SYS_getresuid          118
   244                              <2> %define SYS_setresgid          119
   245                              <2> %define SYS_getresgid          120
   246                              <2> %define SYS_getpgid            121
   247                              <2> %define SYS_setfsuid           122
   248                              <2> %define SYS_setfsgid           123
   249                              <2> %define SYS_getsid             124
   250                              <2> %define SYS_capget             125
   251                              <2> %define SYS_capset             126
   252                              <2> %define SYS_rt_sigpending      127
   253                              <2> %define SYS_rt_sigtimedwait    128
   254                              <2> %define SYS_rt_sigqueueinfo    129
   255                              <2> %define SYS_rt_sigsuspend      130
   256                              <2> %define SYS_sigaltstack        131
   257                              <2> %define SYS_utime              132
   258                              <2> %define SYS_mknod              133
   259                              <2> %define SYS_uselib             134
   260                              <2> %define SYS_personality        135
   261                              <2> %define SYS_ustat              136
   262                              <2> %define SYS_statfs             137
   263                              <2> %define SYS_fstatfs            138
   264                              <2> %define SYS_sysfs              139
   265                              <2> %define SYS_getpriority        140
   266                              <2> %define SYS_setpriority        141
   267                              <2> %define SYS_sched_setparam     142
   268                              <2> %define SYS_sched_getparam     143
   269                              <2> %define SYS_sched_setscheduler 144
   270                              <2> %define SYS_sched_getscheduler 145
   271                              <2> %define SYS_sched_get_priority_max 146
   272                              <2> %define SYS_sched_get_priority_min 147
   273                              <2> %define SYS_sched_rr_get_interval  148
   274                              <2> %define SYS_mlock              149
   275                              <2> %define SYS_munlock            150
   276                              <2> %define SYS_mlockall           151
   277                              <2> %define SYS_munlockall         152
   278                              <2> %define SYS_vhangup            153
   279                              <2> %define SYS_modify_ldt         154
   280                              <2> %define SYS_pivot_root         155
   281                              <2> %define SYS__sysctl            156
   282                              <2> %define SYS_prctl              157
   283                              <2> %define SYS_arch_prctl         158
   284                              <2> %define SYS_adjtimex           159
   285                              <2> %define SYS_setrlimit          160
   286                              <2> %define SYS_chroot             161
   287                              <2> %define SYS_sync               162
   288                              <2> %define SYS_acct               163
   289                              <2> %define SYS_settimeofday       164
   290                              <2> %define SYS_mount              165
   291                              <2> %define SYS_umount2            166
   292                              <2> %define SYS_swapon             167
   293                              <2> %define SYS_swapoff            168
   294                              <2> %define SYS_reboot             169
   295                              <2> %define SYS_sethostname        170
   296                              <2> %define SYS_setdomainname      171
   297                              <2> %define SYS_iopl               172
   298                              <2> %define SYS_ioperm             173
   299                              <2> %define SYS_create_module      174
   300                              <2> %define SYS_init_module        175
   301                              <2> %define SYS_delete_module      176
   302                              <2> %define SYS_get_kernel_syms    177
   303                              <2> %define SYS_query_module       178
   304                              <2> %define SYS_quotactl           179
   305                              <2> %define SYS_nfsservctl         180
   306                              <2> %define SYS_getpmsg            181
   307                              <2> %define SYS_putpmsg            182
   308                              <2> %define SYS_afs_syscall        183
   309                              <2> %define SYS_tuxcall            184
   310                              <2> %define SYS_security           185
   311                              <2> %define SYS_gettid             186
   312                              <2> %define SYS_readahead          187
   313                              <2> %define SYS_setxattr           188
   314                              <2> %define SYS_lsetxattr          189
   315                              <2> %define SYS_fsetxattr          190
   316                              <2> %define SYS_getxattr           191
   317                              <2> %define SYS_lgetxattr          192
   318                              <2> %define SYS_fgetxattr          193
   319                              <2> %define SYS_listxattr          194
   320                              <2> %define SYS_llistxattr         195
   321                              <2> %define SYS_flistxattr         196
   322                              <2> %define SYS_removexattr        197
   323                              <2> %define SYS_lremovexattr       198
   324                              <2> %define SYS_fremovexattr       199
   325                              <2> %define SYS_tkill              200
   326                              <2> %define SYS_time               201
   327                              <2> %define SYS_futex              202
   328                              <2> %define SYS_sched_setaffinity  203
   329                              <2> %define SYS_sched_getaffinity  204
   330                              <2> %define SYS_set_thread_area    205
   331                              <2> %define SYS_io_setup           206
   332                              <2> %define SYS_io_destroy         207
   333                              <2> %define SYS_io_getevents       208
   334                              <2> %define SYS_io_submit          209
   335                              <2> %define SYS_io_cancel          210
   336                              <2> %define SYS_get_thread_area    211
   337                              <2> %define SYS_lookup_dcookie     212
   338                              <2> %define SYS_epoll_create       213
   339                              <2> %define SYS_epoll_ctl_old      214
   340                              <2> %define SYS_epoll_wait_old     215
   341                              <2> %define SYS_remap_file_pages   216
   342                              <2> %define SYS_getdents64         217
   343                              <2> %define SYS_set_tid_address    218
   344                              <2> %define SYS_restart_syscall    219
   345                              <2> %define SYS_semtimedop         220
   346                              <2> %define SYS_fadvise64          221
   347                              <2> %define SYS_timer_create       222
   348                              <2> %define SYS_timer_settime      223
   349                              <2> %define SYS_timer_gettime      224
   350                              <2> %define SYS_timer_getoverrun   225
   351                              <2> %define SYS_timer_delete       226
   352                              <2> %define SYS_clock_settime      227
   353                              <2> %define SYS_clock_gettime      228
   354                              <2> %define SYS_clock_getres       229
   355                              <2> %define SYS_clock_nanosleep    230
   356                              <2> %define SYS_exit_group         231
   357                              <2> %define SYS_epoll_wait         232
   358                              <2> %define SYS_epoll_ctl          233
   359                              <2> %define SYS_tgkill             234
   360                              <2> %define SYS_utimes             235
   361                              <2> %define SYS_vserver            236
   362                              <2> %define SYS_mbind              237
   363                              <2> %define SYS_set_mempolicy      238
   364                              <2> %define SYS_get_mempolicy      239
   365                              <2> %define SYS_mq_open            240
   366                              <2> %define SYS_mq_unlink          241
   367                              <2> %define SYS_mq_timedsend       242
   368                              <2> %define SYS_mq_timedreceive    243
   369                              <2> %define SYS_mq_notify          244
   370                              <2> %define SYS_mq_getsetattr      245
   371                              <2> %define SYS_kexec_load         246
   372                              <2> %define SYS_waitid             247
   373                              <2> %define SYS_add_key            248
   374                              <2> %define SYS_request_key        249
   375                              <2> %define SYS_keyctl             250
   376                              <2> %define SYS_ioprio_set         251
   377                              <2> %define SYS_ioprio_get         252
   378                              <2> %define SYS_inotify_init       253
   379                              <2> %define SYS_inotify_add_watch  254
   380                              <2> %define SYS_inotify_rm_watch   255
   381                              <2> %define SYS_migrate_pages      256
   382                              <2> %define SYS_openat             257
   383                              <2> %define SYS_mkdirat            258
   384                              <2> %define SYS_mknodat            259
   385                              <2> %define SYS_fchownat           260
   386                              <2> %define SYS_futimesat          261
   387                              <2> %define SYS_newfstatat         262
   388                              <2> %define SYS_unlinkat           263
   389                              <2> %define SYS_renameat           264
   390                              <2> %define SYS_linkat             265
   391                              <2> %define SYS_symlinkat          266
   392                              <2> %define SYS_readlinkat         267
   393                              <2> %define SYS_fchmodat           268
   394                              <2> %define SYS_faccessat          269
   395                              <2> %define SYS_pselect6           270
   396                              <2> %define SYS_ppoll              271
   397                              <2> %define SYS_unshare            272
   398                              <2> %define SYS_set_robust_list    273
   399                              <2> %define SYS_get_robust_list    274
   400                              <2> %define SYS_splice             275
   401                              <2> %define SYS_tee                276
   402                              <2> %define SYS_sync_file_range    277
   403                              <2> %define SYS_vmsplice           278
   404                              <2> %define SYS_move_pages         279
   405                              <2> %define SYS_utimensat          280
   406                              <2> %define SYS_epoll_pwait        281
   407                              <2> %define SYS_signalfd           282
   408                              <2> %define SYS_timerfd_create     283
   409                              <2> %define SYS_eventfd            284
   410                              <2> %define SYS_fallocate          285
   411                              <2> %define SYS_timerfd_settime    286
   412                              <2> %define SYS_timerfd_gettime    287
   413                              <2> %define SYS_accept4            288
   414                              <2> %define SYS_signalfd4          289
   415                              <2> %define SYS_eventfd2           290
   416                              <2> %define SYS_epoll_create1      291
   417                              <2> %define SYS_dup3               292
   418                              <2> %define SYS_pipe2              293
   419                              <2> %define SYS_inotify_init1      294
   420                              <2> %define SYS_preadv             295
   421                              <2> %define SYS_pwritev            296
   422                              <2> %define SYS_rt_tgsigqueueinfo  297
   423                              <2> %define SYS_perf_event_open    298
   424                              <2> %define SYS_recvmmsg           299
   425                              <2> 
   426                              <2> %else
   427                              <2> 
   428                              <2> ; ---------------------------------
   429                              <2> ; SysCall Macro
   430                              <2> ; ---------------------------------
   431                              <2> 
   432                              <2> %imacro syscall 1-6
   433                              <2>   %if %0 > 1
   434                              <2>     %if %0 > 2
   435                              <2>       %if %0 > 3
   436                              <2>         %if %0 > 4
   437                              <2>           %if %0 > 5
   438                              <2>             %ifnum %{6}
   439                              <2>               %if %{6} == 0
   440                              <2>                 xor edi, edi
   441                              <2>               %elif %{6} == -1
   442                              <2>                 or  edi, -1
   443                              <2>               %else
   444                              <2>                 mov edi, %{6}
   445                              <2>               %endif
   446                              <2>             %elifnidni %{6}, edi
   447                              <2>               mov edi, %{6}
   448                              <2>             %endif
   449                              <2>           %endif
   450                              <2>           %ifnum %{5}
   451                              <2>             %if %{5} == 0
   452                              <2>               xor esi, esi
   453                              <2>             %elif %{5} == -1
   454                              <2>               or  esi, -1
   455                              <2>             %else
   456                              <2>               mov esi, %{5}
   457                              <2>             %endif
   458                              <2>           %elifnidni %{5}, esi
   459                              <2>             mov esi, %{5}
   460                              <2>           %endif
   461                              <2>         %endif
   462                              <2>         %ifnum %{4}
   463                              <2>           %if %{4} == 0
   464                              <2>             xor edx, edx
   465                              <2>           %elif %{4} == -1
   466                              <2>             or  edx, -1
   467                              <2>           %else
   468                              <2>             mov edx, %{4}
   469                              <2>           %endif
   470                              <2>         %elifnidni %{4}, edx
   471                              <2>           mov edx, %{4}
   472                              <2>         %endif
   473                              <2>       %endif
   474                              <2>       %ifnum %{3}
   475                              <2>         %if %{3} == 0
   476                              <2>           xor ecx, ecx
   477                              <2>         %elif %{3} == -1
   478                              <2>           or  ecx, -1
   479                              <2>         %else
   480                              <2>           mov ecx, %{3}
   481                              <2>         %endif
   482                              <2>       %elifnidni %{3}, ecx
   483                              <2>         mov ecx, %{3}
   484                              <2>       %endif
   485                              <2>     %endif
   486                              <2>     %ifnum %{2}
   487                              <2>       %if %{2} == 0
   488                              <2>         xor ebx, ebx
   489                              <2>       %elif %{2} == -1
   490                              <2>         or  ebx, -1
   491                              <2>       %else
   492                              <2>         mov ebx, %{2}
   493                              <2>       %endif
   494                              <2>     %elifnidni %{2}, ebx
   495                              <2>       mov ebx, %{2}
   496                              <2>     %endif
   497                              <2>   %endif
   498                              <2>   mov eax, SYS_ %+ %{1}
   499                              <2>   int 0x80
   500                              <2> %endmacro
   501                              <2> 
   502                              <2> ; ---------------------------------
   503                              <2> ; System Call Listing
   504                              <2> ; ---------------------------------
   505                              <2> 
   506                              <2> %define SYS_restart_syscall    0           ;old setup() system call
   507                              <2> %define SYS_exit               1
   508                              <2> %define SYS_fork               2
   509                              <2> %define SYS_read               3
   510                              <2> %define SYS_write              4
   511                              <2> %define SYS_open               5
   512                              <2> %define SYS_close              6
   513                              <2> %define SYS_waitpid            7
   514                              <2> %define SYS_creat              8
   515                              <2> %define SYS_link               9
   516                              <2> %define SYS_unlink             10
   517                              <2> %define SYS_execve             11
   518                              <2> %define SYS_chdir              12
   519                              <2> %define SYS_time               13
   520                              <2> %define SYS_mknod              14
   521                              <2> %define SYS_chmod              15
   522                              <2> %define SYS_lchown16           16
   523                              <2> %define SYS_break              17          ;old break syscall holder
   524                              <2> %define SYS_stat               18
   525                              <2> %define SYS_lseek              19
   526                              <2> %define SYS_getpid             20
   527                              <2> %define SYS_mount              21
   528                              <2> %define SYS_oldumount          22
   529                              <2> %define SYS_setuid16           23
   530                              <2> %define SYS_getuid16           24
   531                              <2> %define SYS_stime              25
   532                              <2> %define SYS_ptrace             26
   533                              <2> %define SYS_alarm              27
   534                              <2> %define SYS_fstat              28
   535                              <2> %define SYS_pause              29
   536                              <2> %define SYS_utime              30
   537                              <2> %define SYS_stty               31          ;old stty syscall holder
   538                              <2> %define SYS_gtty               32          ;old gtty syscall holder
   539                              <2> %define SYS_access             33
   540                              <2> %define SYS_nice               34
   541                              <2> %define SYS_ftime              35          ;old ftime syscall holder
   542                              <2> %define SYS_sync               36
   543                              <2> %define SYS_kill               37
   544                              <2> %define SYS_rename             38
   545                              <2> %define SYS_mkdir              39
   546                              <2> %define SYS_rmdir              40
   547                              <2> %define SYS_dup                41
   548                              <2> %define SYS_pipe               42
   549                              <2> %define SYS_times              43
   550                              <2> %define SYS_prof               44          ;old prof syscall holder
   551                              <2> %define SYS_brk                45
   552                              <2> %define SYS_setgid16           46
   553                              <2> %define SYS_getgid16           47
   554                              <2> %define SYS_signal             48
   555                              <2> %define SYS_geteuid16          49
   556                              <2> %define SYS_getegid16          50
   557                              <2> %define SYS_acct               51
   558                              <2> %define SYS_umount             52          ;recycled never used phys()
   559                              <2> %define SYS_lock               53          ;old lock syscall holder
   560                              <2> %define SYS_ioctl              54
   561                              <2> %define SYS_fcntl              55
   562                              <2> %define SYS_mpx                56          ;old mpx syscall holder
   563                              <2> %define SYS_setpgid            57
   564                              <2> %define SYS_ulimit             58          ;old ulimit syscall holder
   565                              <2> %define SYS_olduname           59
   566                              <2> %define SYS_umask              60
   567                              <2> %define SYS_chroot             61
   568                              <2> %define SYS_ustat              62
   569                              <2> %define SYS_dup2               63
   570                              <2> %define SYS_getppid            64
   571                              <2> %define SYS_getpgrp            65
   572                              <2> %define SYS_setsid             66
   573                              <2> %define SYS_sigaction          67
   574                              <2> %define SYS_sgetmask           68
   575                              <2> %define SYS_ssetmask           69
   576                              <2> %define SYS_setreuid16         70
   577                              <2> %define SYS_setregid16         71
   578                              <2> %define SYS_sigsuspend         72
   579                              <2> %define SYS_sigpending         73
   580                              <2> %define SYS_sethostname        74
   581                              <2> %define SYS_setrlimit          75
   582                              <2> %define SYS_old_getrlimit      76
   583                              <2> %define SYS_getrusage          77
   584                              <2> %define SYS_gettimeofday       78
   585                              <2> %define SYS_settimeofday       79
   586                              <2> %define SYS_getgroups16        80
   587                              <2> %define SYS_setgroups16        81
   588                              <2> %define SYS_old_select         82
   589                              <2> %define SYS_symlink            83
   590                              <2> %define SYS_lstat              84
   591                              <2> %define SYS_readlink           85
   592                              <2> %define SYS_uselib             86
   593                              <2> %define SYS_swapon             87
   594                              <2> %define SYS_reboot             88
   595                              <2> %define SYS_old_readdir        89
   596                              <2> %define SYS_readdir            89
   597                              <2> %define SYS_old_mmap           90
   598                              <2> %define SYS_mmap               90
   599                              <2> %define SYS_munmap             91
   600                              <2> %define SYS_truncate           92
   601                              <2> %define SYS_ftruncate          93
   602                              <2> %define SYS_fchmod             94
   603                              <2> %define SYS_fchown16           95
   604                              <2> %define SYS_getpriority        96
   605                              <2> %define SYS_setpriority        97
   606                              <2> %define SYS_profil             98          ;old profil syscall holder
   607                              <2> %define SYS_statfs             99
   608                              <2> %define SYS_fstatfs            100
   609                              <2> %define SYS_ioperm             101
   610                              <2> %define SYS_socketcall         102
   611                              <2> %define SYS_syslog             103
   612                              <2> %define SYS_setitimer          104
   613                              <2> %define SYS_getitimer          105
   614                              <2> %define SYS_newstat            106
   615                              <2> %define SYS_newlstat           107
   616                              <2> %define SYS_newfstat           108
   617                              <2> %define SYS_uname              109
   618                              <2> %define SYS_iopl               110
   619                              <2> %define SYS_vhangup            111
   620                              <2> %define SYS_idle               112         ;old idle syscall
   621                              <2> %define SYS_vm86old            113
   622                              <2> %define SYS_wait4              114
   623                              <2> %define SYS_swapoff            115
   624                              <2> %define SYS_sysinfo            116
   625                              <2> %define SYS_ipc                117
   626                              <2> %define SYS_fsync              118
   627                              <2> %define SYS_sigreturn          119
   628                              <2> %define SYS_clone              120
   629                              <2> %define SYS_setdomainname      121
   630                              <2> %define SYS_newuname           122
   631                              <2> %define SYS_modify_ldt         123
   632                              <2> %define SYS_adjtimex           124
   633                              <2> %define SYS_mprotect           125
   634                              <2> %define SYS_sigprocmask        126
   635                              <2> %define SYS_create_module      127         ;old create_module syscall
   636                              <2> %define SYS_init_module        128
   637                              <2> %define SYS_delete_module      129
   638                              <2> %define SYS_get_kernel_syms    130         ;old get_kernel_syms
   639                              <2> %define SYS_quotactl           131
   640                              <2> %define SYS_getpgid            132
   641                              <2> %define SYS_fchdir             133
   642                              <2> %define SYS_bdflush            134
   643                              <2> %define SYS_sysfs              135
   644                              <2> %define SYS_personality        136
   645                              <2> %define SYS_afs_syscall        137         ;reserved for andrew file system syscall
   646                              <2> %define SYS_setfsuid16         138
   647                              <2> %define SYS_setfsgid16         139
   648                              <2> %define SYS_llseek             140
   649                              <2> %define SYS_getdents           141
   650                              <2> %define SYS_select             142
   651                              <2> %define SYS_flock              143
   652                              <2> %define SYS_msync              144
   653                              <2> %define SYS_readv              145
   654                              <2> %define SYS_writev             146
   655                              <2> %define SYS_getsid             147
   656                              <2> %define SYS_fdatasync          148
   657                              <2> %define SYS_sysctl             149
   658                              <2> %define SYS_mlock              150
   659                              <2> %define SYS_munlock            151
   660                              <2> %define SYS_mlockall           152
   661                              <2> %define SYS_munlockall         153
   662                              <2> %define SYS_sched_setparam     154
   663                              <2> %define SYS_sched_getparam     155
   664                              <2> %define SYS_sched_setscheduler 156
   665                              <2> %define SYS_sched_getscheduler 157
   666                              <2> %define SYS_sched_yield        158
   667                              <2> %define SYS_sched_get_priority_max 159
   668                              <2> %define SYS_sched_get_priority_min 160
   669                              <2> %define SYS_sched_rr_get_interval  161
   670                              <2> %define SYS_nanosleep          162
   671                              <2> %define SYS_mremap             163
   672                              <2> %define SYS_setresuid16        164
   673                              <2> %define SYS_getresuid16        165
   674                              <2> %define SYS_vm86               166
   675                              <2> %define SYS_query_module       167         ;old SYS_query_module
   676                              <2> %define SYS_poll               168
   677                              <2> %define SYS_nfsservctl         169
   678                              <2> %define SYS_setresgid16        170
   679                              <2> %define SYS_getresgid16        171
   680                              <2> %define SYS_prctl              172
   681                              <2> %define SYS_rt_sigreturn       173
   682                              <2> %define SYS_rt_sigaction       174
   683                              <2> %define SYS_rt_sigprocmask     175
   684                              <2> %define SYS_rt_sigpending      176
   685                              <2> %define SYS_rt_sigtimedwait    177
   686                              <2> %define SYS_rt_sigqueueinfo    178
   687                              <2> %define SYS_rt_sigsuspend      179
   688                              <2> %define SYS_pread64            180
   689                              <2> %define SYS_pwrite64           181
   690                              <2> %define SYS_chown16            182
   691                              <2> %define SYS_getcwd             183
   692                              <2> %define SYS_capget             184
   693                              <2> %define SYS_capset             185
   694                              <2> %define SYS_sigalstack         186
   695                              <2> %define SYS_sendfile           187
   696                              <2> %define SYS_getpmsg            188         ;reserved for streams1
   697                              <2> %define SYS_putpmsg            189         ;reserved for streams2
   698                              <2> %define SYS_vfork              190
   699                              <2> %define SYS_getrlimit          191
   700                              <2> %define SYS_mmap_pgoff         192
   701                              <2> %define SYS_truncate64         193
   702                              <2> %define SYS_ftruncate64        194
   703                              <2> %define SYS_stat64             195
   704                              <2> %define SYS_lstat64            196
   705                              <2> %define SYS_fstat64            197
   706                              <2> %define SYS_lchown             198
   707                              <2> %define SYS_getuid             199
   708                              <2> %define SYS_getgid             200
   709                              <2> %define SYS_geteuid            201
   710                              <2> %define SYS_getegid            202
   711                              <2> %define SYS_setreuid           203
   712                              <2> %define SYS_setregid           204
   713                              <2> %define SYS_getgroups          205
   714                              <2> %define SYS_setgroups          206
   715                              <2> %define SYS_fchown             207
   716                              <2> %define SYS_setresuid          208
   717                              <2> %define SYS_getresuid          209
   718                              <2> %define SYS_setresgid          210
   719                              <2> %define SYS_getresgid          211
   720                              <2> %define SYS_chown              212
   721                              <2> %define SYS_setuid             213
   722                              <2> %define SYS_setgid             214
   723                              <2> %define SYS_setfsuid           215
   724                              <2> %define SYS_setfsgid           216
   725                              <2> %define SYS_pivot_root         217
   726                              <2> %define SYS_mincore            218
   727                              <2> %define SYS_madvise            219
   728                              <2> %define SYS_getdents64         220
   729                              <2> %define SYS_fcntl64            221
   730                              <2> ; SYS_ni_syscall        222         ;reserved for TUX
   731                              <2> ; SYS_ni_syscall        223
   732                              <2> %define SYS_gettid             224
   733                              <2> %define SYS_readahead          225
   734                              <2> %define SYS_setxattr           226
   735                              <2> %define SYS_lsetxattr          227
   736                              <2> %define SYS_fsetxattr          228
   737                              <2> %define SYS_getxattr           229
   738                              <2> %define SYS_lgetxattr          230
   739                              <2> %define SYS_fgetxattr          231
   740                              <2> %define SYS_listxattr          232
   741                              <2> %define SYS_llistxattr         233
   742                              <2> %define SYS_flistxattr         234
   743                              <2> %define SYS_removexattr        235
   744                              <2> %define SYS_lremovexattr       236
   745                              <2> %define SYS_fremovexattr       237
   746                              <2> %define SYS_tkill              238
   747                              <2> %define SYS_sendfile64         239
   748                              <2> %define SYS_futex              240
   749                              <2> %define SYS_sched_set_affinity 241
   750                              <2> %define SYS_sched_get_affinity 242
   751                              <2> %define SYS_set_thread_area    243
   752                              <2> %define SYS_get_thread_area    244
   753                              <2> %define SYS_io_setup           245
   754                              <2> %define SYS_io_destroy         246
   755                              <2> %define SYS_io_getevents       247
   756                              <2> %define SYS_io_submit          248
   757                              <2> %define SYS_io_cancel          249
   758                              <2> %define SYS_fadvise64          250
   759                              <2> ; SYS_ni_syscall        251
   760                              <2> %define SYS_exit_group         252
   761                              <2> %define SYS_lookup_dcookie     253
   762                              <2> %define SYS_epoll_create       254
   763                              <2> %define SYS_epoll_ctl          255
   764                              <2> %define SYS_epoll_wait         256
   765                              <2> %define SYS_remap_file_pages   257
   766                              <2> %define SYS_set_tid_address    258
   767                              <2> %define SYS_timer_create       259
   768                              <2> %define SYS_timer_settime      260
   769                              <2> %define SYS_timer_gettime      261
   770                              <2> %define SYS_timer_getoverrun   262
   771                              <2> %define SYS_timer_delete       263
   772                              <2> %define SYS_clock_settime      264
   773                              <2> %define SYS_clock_gettime      265
   774                              <2> %define SYS_clock_getres       266
   775                              <2> %define SYS_clock_nanosleep    267
   776                              <2> %define SYS_statfs64           268
   777                              <2> %define SYS_fstatfs64          269
   778                              <2> %define SYS_tgkill             270
   779                              <2> %define SYS_utimes             271
   780                              <2> %define SYS_fadvise64_64       272
   781                              <2> %define SYS_vserver            273
   782                              <2> %define SYS_mbind              274
   783                              <2> %define SYS_get_mempolicy      275
   784                              <2> %define SYS_set_mempolicy      276
   785                              <2> %define SYS_mq_open            277
   786                              <2> %define SYS_mq_unlink          278
   787                              <2> %define SYS_mq_timedsend       279
   788                              <2> %define SYS_mq_timedreceive    280
   789                              <2> %define SYS_mq_notify          281
   790                              <2> %define SYS_mq_getsetattr      282
   791                              <2> %define SYS_kexec_load         283
   792                              <2> %define SYS_waitid             284
   793                              <2> ; SYS_ni_syscall        285         ;available
   794                              <2> %define SYS_add_key            286
   795                              <2> %define SYS_request_key        287
   796                              <2> %define SYS_keyctl             288
   797                              <2> %define SYS_ioprio_set         289
   798                              <2> %define SYS_ioprio_get         290
   799                              <2> %define SYS_inotify_init       291
   800                              <2> %define SYS_inotify_add_watch  292
   801                              <2> %define SYS_inotify_rm_watch   293
   802                              <2> %define SYS_migrate_pages      294
   803                              <2> %define SYS_openat             295
   804                              <2> %define SYS_mkdirat            296
   805                              <2> %define SYS_mknodat            297
   806                              <2> %define SYS_fchownat           298
   807                              <2> %define SYS_futimesat          299
   808                              <2> %define SYS_fstatat64          300
   809                              <2> %define SYS_unlinkat           301
   810                              <2> %define SYS_renameat           302
   811                              <2> %define SYS_linkat             303
   812                              <2> %define SYS_symlinkat          304
   813                              <2> %define SYS_readlinkat         305
   814                              <2> %define SYS_fchmodat           306
   815                              <2> %define SYS_faccessat          307
   816                              <2> %define SYS_pselect6           308
   817                              <2> %define SYS_ppoll              309
   818                              <2> %define SYS_unshare            310
   819                              <2> %define SYS_set_robust_list    311
   820                              <2> %define SYS_get_robust_list    312
   821                              <2> %define SYS_splice             313
   822                              <2> %define SYS_sync_file_range    314
   823                              <2> %define SYS_tee                315
   824                              <2> %define SYS_vmsplice           316
   825                              <2> %define SYS_move_pages         317
   826                              <2> %define SYS_getcpu             318
   827                              <2> %define SYS_epoll_pwait        319
   828                              <2> %define SYS_utimensat          320
   829                              <2> %define SYS_signalfd           321
   830                              <2> %define SYS_timerfd_create     322
   831                              <2> %define SYS_eventfd            323
   832                              <2> %define SYS_fallocate          324
   833                              <2> %define SYS_timerfd_settime    325
   834                              <2> %define SYS_timerfd_gettime    326
   835                              <2> %define SYS_signalfd4          327
   836                              <2> %define SYS_eventfd2           328
   837                              <2> %define SYS_epoll_create1      329
   838                              <2> %define SYS_dup3               330
   839                              <2> %define SYS_pipe2              331
   840                              <2> %define SYS_inotify_init1      332
   841                              <2> %define SYS_preadv             333
   842                              <2> %define SYS_pwritev            334
   843                              <2> %define SYS_rt_tgsigqueueinfo  335
   844                              <2> %define SYS_perf_event_open    336
   845                              <2> %define SYS_recvmmsg           337
   846                              <2> %define SYS_fanotify_event     338
   847                              <2> %define SYS_fanotify_mark      339
   848                              <2> %define SYS_prlimit64          340
   849                              <2> 
   850                              <2> %endif
   851                              <2> 
   852                              <2> %endif ; __NASMX_SYSCALL_INC__
  1018                              <1> %endif
  1019                              <1> 
  1020                              <1> 
  1021                              <1> ;//////////////////////////////////////////////////////////////
  1022                              <1> ;// This internal macro creates the class/struc or union
  1023                              <1> ;// member offsets.  It expects the final member count to
  1024                              <1> ;// be passed as a parameter.  It must only be called when
  1025                              <1> ;// there is no parent container during nasmx_endproc.
  1026                              <1> ;// This macro is required due to the fact we can't know, at
  1027                              <1> ;// time of definition, what the alignment of the union must
  1028                              <1> ;// be until AFTER all union members have been processed.
  1029                              <1> ;// Subsequently, we can't perform offset equate processing
  1030                              <1> ;// from within nasmx_reserve.  See: winsock.inc SOCKADDR_IN
  1031                              <1> %macro __nx_finalize_equates 1.nolist
  1032                              <1> %push __NX_CTX_FINALIZE
  1033                              <1> 	%assign %%__max_align ( __BITS__ / 4 )
  1034                              <1> 	%assign %$__nx_usize 0
  1035                              <1> 	%assign %$__nx_offset 0
  1036                              <1> 	%assign %%__idx 1
  1037                              <1> 	%rep %1
  1038                              <1> 		;// obtain the name for equating, checking for sentinal
  1039                              <1> 		%xdefine %%__name %[__NX_EQUATE_NAME_%+ %%__idx]
  1040                              <1> 
  1041                              <1> 		%ifidn %%__name, __NX_CTX_POP
  1042                              <1> 			;// Get the size of the current container
  1043                              <1> 			%assign %%__size %$__nx_usize
  1044                              <1> 
  1045                              <1> 			; %ifdef __NX_DEBUG_STRUC
  1046                              <1> 			;	%warning popping context, container size: %%__size
  1047                              <1> 			; %endif
  1048                              <1> 
  1049                              <1> 			%pop
  1050                              <1> 			%ifnctx __NX_CTX_UNION
  1051                              <1> 				%assign %$__nx_offset ( %$__nx_offset + %%__size )
  1052                              <1> 			%endif
  1053                              <1> 		%else
  1054                              <1> 			;// obtain the type and size of the equate to build
  1055                              <1> 			%xdefine %%__type %[%%__name %+ __nx_type]
  1056                              <1> 			%assign %%__size %[%%__name %+ _size]
  1057                              <1> 
  1058                              <1> 			;// In order to properly align the offset we need
  1059                              <1> 			;// to determine if we're pointing at a container
  1060                              <1> 			;// or one of it's members.
  1061                              <1> 			%assign %%__is_container nx_is_typeof_container(%%__name)
  1062                              <1> 			%if ( %%__is_container != 0 )
  1063                              <1> 				;// struc/union alignment has conveniently
  1064                              <1> 				;// already been established, thus we simply
  1065                              <1> 				;// simply obtain that value.
  1066                              <1> 				;// %assign %%__align %[%%__name %+ _align]
  1067                              <1> 				%assign %%__align (0x0001 << (%%__type & 0x000F))
  1068                              <1> 
  1069                              <1> 				;// each child container gets it's own ctx and
  1070                              <1> 				;// offset in order to prevent nested strucs that
  1071                              <1> 				;// are contained within the parent union from
  1072                              <1> 				;// modifying other union members offsets.
  1073                              <1> 				%assign %%__ofst %$__nx_offset
  1074                              <1>  				%if ( is_typeof_union(%%__name) != 0 )
  1075                              <1> 					; %ifdef __NX_DEBUG_STRUC
  1076                              <1> 					;	%warning pushing union %%__name
  1077                              <1> 					; %endif
  1078                              <1>  					%push __NX_CTX_UNION
  1079                              <1> 				%else
  1080                              <1> 					;// assert: struc/class
  1081                              <1> 					; %ifdef __NX_DEBUG_STRUC
  1082                              <1> 					;	%warning pushing struct %%__name
  1083                              <1> 					; %endif
  1084                              <1>  					%push __NX_CTX_STRUC
  1085                              <1>  				%endif
  1086                              <1> 				%assign %$__nx_usize %%__size
  1087                              <1> 				%assign %$__nx_offset %%__ofst
  1088                              <1> 			%else
  1089                              <1> 				;// Obtain the alignment requirement
  1090                              <1> 				;// from the base type of this member.
  1091                              <1> 				%assign %%__align ( %%__type & 0x00FF )
  1092                              <1> 			%endif
  1093                              <1> 
  1094                              <1> 			;// If the alignment requirement for the current 
  1095                              <1> 			;// member being defined is greater than the max
  1096                              <1> 			;// alignment size then clamp to max.
  1097                              <1> 			%ifdef __NX_STACK_IDX_PACK
  1098                              <1> 				%assign %%idx __NX_STACK_IDX_PACK
  1099                              <1> 				%assign %%__pack __NX_STACK_PACK_%[%%idx]
  1100                              <1> 				;// if the alignment of the member exceeds the
  1101                              <1> 				;// packing alignment then use packing.
  1102                              <1> 				%if ( %%__align > %%__pack )
  1103                              <1> 					%assign %%__align %%__pack
  1104                              <1> 				%endif
  1105                              <1> 			%elif ( %%__align > %%__max_align )
  1106                              <1> 				%assign %%__align %%__max_align
  1107                              <1> 			%endif
  1108                              <1> 
  1109                              <1> 			%if ( %%__align > 1 )
  1110                              <1> 				%assign %%__off (((%$__nx_offset + %%__align) / %%__align) * %%__align)
  1111                              <1> 				%assign %%__tmp (%$__nx_offset + %%__align)
  1112                              <1> 				%if ( %%__off != %%__tmp )
  1113                              <1> 					%assign %$__nx_offset %%__off
  1114                              <1> 				%endif
  1115                              <1> 			%endif
  1116                              <1> 
  1117                              <1> 			;// Do not equate the outermost parent!
  1118                              <1> 			%if ( %%__idx > 1 )
  1119                              <1> 				%[%%__name] equ %$__nx_offset
  1120                              <1> 				; %ifdef __NX_DEBUG_STRUC
  1121                              <1> 				;	%assign %%toff %[%%__name]
  1122                              <1> 				;	%warning name: %%__name type: %%__type size: %%__size align: %%__align off: %%toff
  1123                              <1> 				; %endif
  1124                              <1> 
  1125                              <1> 				%if ( %%__is_container == 0 )
  1126                              <1> 					%ifnctx __NX_CTX_UNION
  1127                              <1> 						%assign %$__nx_offset %$__nx_offset + %%__size
  1128                              <1> 					%endif
  1129                              <1> 				%endif
  1130                              <1> 			%endif
  1131                              <1> 
  1132                              <1> 		%endif  ;// if __NX_CTX_POP
  1133                              <1> 
  1134                              <1> 		%assign %%__idx ( 1 + %%__idx )
  1135                              <1> 
  1136                              <1> 	%endrep
  1137                              <1> 
  1138                              <1> 	%ifctx __NX_CTX_FINALIZE
  1139                              <1> 		; %ifdef __NX_DEBUG_STRUC
  1140                              <1> 		;	%assign %%tsize %$__nx_offset
  1141                              <1> 		;	%warning ctx ok, final offset: %%tsize , undefining equated names
  1142                              <1> 		; %endif
  1143                              <1> 		%assign %%__idx 1
  1144                              <1> 		%rep %1
  1145                              <1> 			%undef __NX_EQUATE_NAME_%[%%__idx]
  1146                              <1> 			%assign %%__idx ( %%__idx + 1 )
  1147                              <1> 		%endrep
  1148                              <1> 		%pop
  1149                              <1> 	%else
  1150                              <1> 		%fatal internal ctx error
  1151                              <1> 	%endif
  1152                              <1> %endmacro
  1153                              <1> 
  1154                              <1> ;//////////////////////////////////////////////////////////////
  1155                              <1> ;//
  1156                              <1> ;// NASMX_STRUC
  1157                              <1> ;//
  1158                              <1> %imacro NASMX_STRUC 1-3.nolist __NX_ROOT, __NX_CTX_STRUC
  1159                              <1> 	%ifnidni %3,__NX_CTX_STRUC
  1160                              <1> 		%ifnidni %3,__NX_CTX_UNION
  1161                              <1> 			%ifnidni %3,__NX_CTX_CLASS
  1162                              <1> 				%fatal unknown arg: %{3}
  1163                              <1> 			%endif
  1164                              <1> 		%endif
  1165                              <1> 	%endif
  1166                              <1> 
  1167                              <1> 	;// NASMX 1.3 - all strucs/unions must be named in order
  1168                              <1> 	;// to ensure proper member alignment and offset equates
  1169                              <1> 	;// regardless of nesting depth
  1170                              <1> 	%ifidni %1, __NX_ROOT
  1171                              <1> 		%fatal struc or union requires name
  1172                              <1> 	%endif
  1173                              <1> 
  1174                              <1> 	%ifctx __NX_CTX_STRUC
  1175                              <1> 		%define %%__is_nested 1
  1176                              <1> 		%assign %%__equcount %$__nx_equcount
  1177                              <1> 	%elifctx __NX_CTX_UNION
  1178                              <1> 		%define %%__is_nested 1
  1179                              <1> 		%assign %%__equcount %$__nx_equcount
  1180                              <1> 	%elifctx __NX_CTX_CLASS
  1181                              <1> 		%define %%__is_nested 1
  1182                              <1> 		%assign %%__equcount %$__nx_equcount
  1183                              <1> 	%else
  1184                              <1> 		%define %%__is_nested 0
  1185                              <1> 		%assign %%__equcount 0
  1186                              <1> 	%endif
  1187                              <1> 	
  1188                              <1> 
  1189                              <1> 	%if ( %%__is_nested == 0 )
  1190                              <1> 		%xdefine %%__tname %1
  1191                              <1> 	%else
  1192                              <1> 		%xdefine %%__tname %{$__nx_name}.%1
  1193                              <1> 	%endif
  1194                              <1> 	%assign %%__equcount ( %%__equcount + 1 )
  1195                              <1> 	%xdefine __NX_EQUATE_NAME_%[%%__equcount] %%__tname
  1196                              <1> 
  1197                              <1> 	;// create new ctx and initialize
  1198                              <1> 	%push %3
  1199                              <1> 	%xdefine %$__nx_name %%__tname
  1200                              <1> 	%define %$__nx_isnested %%__is_nested
  1201                              <1> 		
  1202                              <1> 	;// __nx_align contains the largest base type defined by a struc member
  1203                              <1> 	;// and is used to calculate final union/struc size.
  1204                              <1> 	%assign %$__nx_align 1
  1205                              <1> 
  1206                              <1> 	;// __nx_usize contains the number of bytes for the current union/struc.
  1207                              <1> 	%assign %$__nx_usize 0
  1208                              <1> 	%assign %$__nx_offset 0
  1209                              <1> 	%assign %$__nx_equcount %%__equcount
  1210                              <1> 
  1211                              <1> 	%xdefine %{$__nx_name}__nx_reserve byte__nx_reserve
  1212                              <1> 	%xdefine %{$__nx_name}__nx_storage byte__nx_storage
  1213                              <1> %endmacro
  1214                              <1> 
  1215                              <1> %imacro NASMX_UNION 1-2.nolist __NX_ROOT
  1216                              <1> 	NASMX_STRUC %1, %2, __NX_CTX_UNION
  1217                              <1> %endmacro
  1218                              <1> 
  1219                              <1> %imacro NASMX_CLASS 1-2.nolist __NX_ROOT
  1220                              <1> 	NASMX_STRUC %1, %2, __NX_CTX_CLASS
  1221                              <1> %endmacro
  1222                              <1> 
  1223                              <1> %imacro NASMX_ALIGN 1.nolist
  1224                              <1> 	%ifnctx __NX_CTX_STRUC
  1225                              <1> 		%ifnctx __NX_CTX_UNION
  1226                              <1> 			%fatal corrupt context
  1227                              <1> 		%endif
  1228                              <1> 	%endif
  1229                              <1> 	%if (%1 > 0)
  1230                              <1> 		%assign %%__off (((%$__nx_size + %1) / %1) * %1)
  1231                              <1> 		%assign %%__tmp (%$__nx_size + %1)
  1232                              <1> 		%if (%%__off != %%__tmp)
  1233                              <1> 			%assign %$__nx_size %%__off
  1234                              <1> 		%endif
  1235                              <1> 	%endif
  1236                              <1> %endmacro
  1237                              <1> 
  1238                              <1> ;// usage:
  1239                              <1> ;//   NASMX_RESERVE hWnd, NASMX_PTR, 1
  1240                              <1> %imacro NASMX_RESERVE 2-3.nolist 1
  1241                              <1> 	%ifnctx __NX_CTX_STRUC
  1242                              <1> 		%ifnctx __NX_CTX_UNION
  1243                              <1> 			%ifnctx __NX_CTX_CLASS
  1244                              <1> 				%fatal corrupt context
  1245                              <1> 			%endif
  1246                              <1> 		%endif
  1247                              <1> 	%endif
  1248                              <1> 	%iftoken %{2}_size
  1249                              <1> 		%assign %%__argsize %{2}_size
  1250                              <1> 		%if (%%__argsize < 1)
  1251                              <1> 			%fatal invalid size for %{$__nx_name}.%{1}: %{2}
  1252                              <1> 		%endif
  1253                              <1> 	%else
  1254                              <1> 		%fatal unknown size for %{$__nx_name}.%{1}: %{2}
  1255                              <1> 	%endif
  1256                              <1> 
  1257                              <1> 	%ifndef %{2}__nx_type
  1258                              <1> 		%fatal unknown type tag for %{$__nx_name}.%{1}
  1259                              <1> 	%endif
  1260                              <1> 
  1261                              <1> 	%ifndef %{2}__nx_storage
  1262                              <1> 		%fatal unknown storage tag for %{$__nx_name}.%{1}
  1263                              <1> 	%endif
  1264                              <1> 
  1265                              <1> 	%assign %%__qty %{3}
  1266                              <1> 	%if (%%__qty < 1)
  1267                              <1> 		%fatal invalid arg qty  for %{$__nx_name}.%{1}: %{3}
  1268                              <1> 	%endif
  1269                              <1> 
  1270                              <1> 	%if ( nx_is_typeof_container(%[%{2}]) != 0 )
  1271                              <1> 		;// support array of strucs
  1272                              <1> 		%assign %%size sizeof(%{2})
  1273                              <1> 		%assign %%__amt (%%size * %%__qty)
  1274                              <1> 		%xdefine %[%{$__nx_name}.%{1}]_size %%__amt
  1275                              <1> 		;// use struc alignment as type
  1276                              <1> 		%assign %%typ %[%{2}__nx_type]
  1277                              <1> 		%assign %%__align (0x0001 << (%%typ & 0x000F))
  1278                              <1> 		%xdefine %[%{$__nx_name}.%{1}]__nx_type %%__align
  1279                              <1> 		%xdefine %[%{$__nx_name}.%{1}]__nx_reserve byte__nx_reserve
  1280                              <1> 		%xdefine %[%{$__nx_name}.%{1}]__nx_storage byte__nx_storage
  1281                              <1> 	%else
  1282                              <1> 		%assign %%__amt (%%__argsize * %%__qty)
  1283                              <1> 		%xdefine %[%{$__nx_name}.%{1}]_size %%__amt
  1284                              <1> 		%xdefine %[%{$__nx_name}.%{1}]__nx_type %[%{2}]__nx_type
  1285                              <1> 		%xdefine %[%{$__nx_name}.%{1}]__nx_reserve %[%{2}]__nx_reserve
  1286                              <1> 		%xdefine %[%{$__nx_name}.%{1}]__nx_storage %[%{2}]__nx_storage
  1287                              <1> 	%endif
  1288                              <1> 
  1289                              <1> 	;// create the equate names for offset processing
  1290                              <1> 	%assign %$__nx_equcount ( %$__nx_equcount + 1 )
  1291                              <1> 	%xdefine __NX_EQUATE_NAME_%[%$__nx_equcount] %[%{$__nx_name}.%{1}]
  1292                              <1> 
  1293                              <1> 	%assign %%__is_container nx_is_typeof_container(%{2})
  1294                              <1> 	%if ( %%__is_container != 0 )
  1295                              <1> 		;// struc/union alignment has conveniently
  1296                              <1> 		;// already been established, thus we simply
  1297                              <1> 		;// simply obtain that value.  Remember,
  1298                              <1> 		;// container alignment is in exponent form!
  1299                              <1> 		%assign %%typ %[%{2}__nx_type]
  1300                              <1> 		%assign %%__align (0x0001 << (%%typ & 0x000F))
  1301                              <1> 	%else
  1302                              <1> 		;// if the size of the base type for the current
  1303                              <1> 		;// member being defined is greater than the max
  1304                              <1> 		;// alignment size then clamp to max.
  1305                              <1> 		%assign %%__align __NASMX_ABI_BITS__ / 4
  1306                              <1> 		%if ( %%__argsize > %%__align )
  1307                              <1> 			%assign %%__argsize %%__align
  1308                              <1> 		%endif
  1309                              <1> 		%assign %%__align %%__argsize
  1310                              <1> 	%endif
  1311                              <1> 
  1312                              <1> 	%ifdef __NX_STACK_IDX_PACK
  1313                              <1> 		%assign %%idx __NX_STACK_IDX_PACK
  1314                              <1> 		%assign %%__pack __NX_STACK_PACK_%[%%idx]
  1315                              <1> 		;// if the alignment of the member exceeds the
  1316                              <1> 		;// packing alignment then use packing.
  1317                              <1> 		%if ( %%__align > %%__pack )
  1318                              <1> 			%assign %%__align %%__pack
  1319                              <1> 		%endif
  1320                              <1> 	%endif
  1321                              <1> 
  1322                              <1> 	;// if the alignment requirement for this member is the
  1323                              <1> 	;// largest observed thus far then save it for later.
  1324                              <1> 	%if ( %%__align > %$__nx_align )
  1325                              <1> 		%assign %$__nx_align %%__align
  1326                              <1> 	%endif
  1327                              <1> 
  1328                              <1> 	%ifctx __NX_CTX_UNION
  1329                              <1> 		;// update current union size
  1330                              <1> 		%if (%%__amt > %$__nx_usize)
  1331                              <1> 			%assign %$__nx_usize %%__amt
  1332                              <1> 		%endif
  1333                              <1> 	%else
  1334                              <1> 		;// ensure struct/class member offset naturally alignment
  1335                              <1> 		%if ( %%__align > 1 )
  1336                              <1> 			%assign %%__off (((%$__nx_offset + %%__align) / %%__align) * %%__align)
  1337                              <1> 			%assign %%__tmp (%$__nx_offset + %%__align)
  1338                              <1> 			%if ( %%__off != %%__tmp )
  1339                              <1> 				%assign %$__nx_usize (%$__nx_usize + %%__off - %$__nx_offset)
  1340                              <1> 				%assign %$__nx_offset %%__off
  1341                              <1> 			%endif
  1342                              <1> 		%endif
  1343                              <1> 
  1344                              <1> 		;// update running size and offset
  1345                              <1> 		%assign %$__nx_usize (%$__nx_usize + %%__amt)
  1346                              <1> 		%assign %$__nx_offset (%$__nx_offset + %%__amt)
  1347                              <1> 	%endif
  1348                              <1> 
  1349                              <1> %endmacro
  1350                              <1> 
  1351                              <1> %imacro NASMX_ENDSTRUC 0.nolist
  1352                              <1> 	%ifnctx __NX_CTX_STRUC
  1353                              <1> 		%ifnctx __NX_CTX_UNION
  1354                              <1> 			%ifnctx __NX_CTX_CLASS
  1355                              <1> 				%fatal corrupt context
  1356                              <1> 			%endif
  1357                              <1> 		%endif
  1358                              <1> 	%endif
  1359                              <1> 
  1360                              <1> 	;// adjust size of container using largest alignment value observed
  1361                              <1> 	%if ( %$__nx_align > 1 )
  1362                              <1> 		%assign %%__align %$__nx_align
  1363                              <1> 		%assign %%__off (((%$__nx_usize + %%__align) / %%__align) * %%__align)
  1364                              <1> 		%assign %%__tmp (%$__nx_usize + %%__align)
  1365                              <1> 		%if (%%__off != %%__tmp)
  1366                              <1> 			%assign %$__nx_usize (%$__nx_usize + %%__off - %$__nx_usize)
  1367                              <1> 		%endif
  1368                              <1> 	%endif
  1369                              <1> 
  1370                              <1> 	;// Create the container size tag
  1371                              <1> 	%[%{$__nx_name}]_size EQU %$__nx_usize
  1372                              <1> 
  1373                              <1> 	;// Create the container type tag
  1374                              <1> 	%assign %%exp 0
  1375                              <1> 	%assign %%align %$__nx_align
  1376                              <1> 	%assign %%count %%align
  1377                              <1> 	%rep %%count
  1378                              <1> 		%if ((%%align & 0x0001) == 0 )
  1379                              <1> 			%assign %%exp ( %%exp + 1 )
  1380                              <1> 			%assign %%align ( %%align >> 1 )
  1381                              <1> 		%else
  1382                              <1> 			%exitrep
  1383                              <1> 		%endif
  1384                              <1> 	%endrep
  1385                              <1> 	%ifctx __NX_CTX_STRUC
  1386                              <1> 		%assign %%type __NX_STRUC_TYPE
  1387                              <1> 	%elifctx __NX_CTX_UNION
  1388                              <1> 		%assign %%type __NX_UNION_TYPE
  1389                              <1> 	%else
  1390                              <1> 		%assign %%type __NX_CLASS_TYPE
  1391                              <1> 	%endif
  1392                              <1> 	%assign %%type (%%type | %%exp)
  1393                              <1> 
  1394                              <1> 	%xdefine %[%{$__nx_name}]__nx_type %%type
  1395                              <1> 	
  1396                              <1> 	;// save ctx data and pop stack
  1397                              <1> 	%xdefine %%__tname %$__nx_name 
  1398                              <1> 	%assign %%__align %$__nx_align
  1399                              <1> 	%assign %%__usize %$__nx_usize
  1400                              <1> 	%assign %%__equcount ( %$__nx_equcount + 1 )
  1401                              <1> 	%pop
  1402                              <1> 
  1403                              <1> 	%xdefine __NX_EQUATE_NAME_%[%%__equcount] __NX_CTX_POP
  1404                              <1> 
  1405                              <1> 	%ifctx __NX_CTX_UNION
  1406                              <1> 		%assign %%__was_nested 1
  1407                              <1> 	%elifctx __NX_CTX_STRUC
  1408                              <1> 		%assign %%__was_nested 1
  1409                              <1> 	%elifctx __NX_CTX_CLASS
  1410                              <1> 		%assign %%__was_nested 1
  1411                              <1> 	%else
  1412                              <1> 		%assign %%__was_nested 0
  1413                              <1> 	%endif
  1414                              <1> 
  1415                              <1> 	%if ( %%__was_nested != 0 )
  1416                              <1> 		%assign %$__nx_equcount %%__equcount
  1417                              <1> 		;// adjust the current container size and offset since we
  1418                              <1> 		;// now know the alignment requirement of the sub-container.
  1419                              <1> 		%if ( %%__align > %$__nx_align )
  1420                              <1> 			%assign %$__nx_align %%__align
  1421                              <1> 		%endif
  1422                              <1> 		%ifctx __NX_CTX_UNION
  1423                              <1> 			%if ( %%__usize > %$__nx_usize )
  1424                              <1> 				%assign %$__nx_usize %%__usize
  1425                              <1> 			%endif
  1426                              <1> 		%else
  1427                              <1> 			%if ( %%__align > 1 )
  1428                              <1> 				%assign %%__off (((%$__nx_offset + %%__align) / %%__align) * %%__align)
  1429                              <1> 				%assign %%__tmp (%$__nx_offset + %%__align)
  1430                              <1> 				%if ( %%__off != %%__tmp )
  1431                              <1> 					%assign %$__nx_usize (%$__nx_usize + %%__off - %$__nx_offset)
  1432                              <1> 					%assign %$__nx_offset %%__off
  1433                              <1> 				%endif
  1434                              <1> 			%endif
  1435                              <1> 			%assign %$__nx_usize ( %$__nx_usize + %%__usize )
  1436                              <1> 			%assign %$__nx_offset ( %$__nx_offset + %%__usize )
  1437                              <1> 		%endif
  1438                              <1> 	%else
  1439                              <1> 		;// Create all container and member equates.
  1440                              <1> 		__nx_finalize_equates %%__equcount
  1441                              <1> 	%endif
  1442                              <1> 	
  1443                              <1> %endmacro
  1444                              <1> 
  1445                              <1> %idefine NASMX_ENDUNION NASMX_ENDSTRUC
  1446                              <1> %idefine NASMX_ENDCLASS NASMX_ENDSTRUC
  1447                              <1> 
  1448                              <1> %imacro NASMX_ISTRUC 0-*.nolist __NX_ROOT, __NX_ROOT, __NX_CTX_ISTRUC
  1449                              <1> 	%ifnidni %{3},__NX_CTX_ISTRUC
  1450                              <1> 		%ifnidni %{3},__NX_CTX_IUNION
  1451                              <1> 			%ifnidni %{3},__NX_CTX_ICLASS
  1452                              <1> 				%fatal unknown arg: %{3}
  1453                              <1> 			%endif
  1454                              <1> 		%endif
  1455                              <1> 	%endif
  1456                              <1> 	%ifctx __NX_CTX_ISTRUC
  1457                              <1> 		%define %%__is_nested 1
  1458                              <1> 	%elifctx __NX_CTX_IUNION
  1459                              <1> 		%define %%__is_nested 1
  1460                              <1> 	%else
  1461                              <1> 		%define %%__is_nested 0
  1462                              <1> 	%endif
  1463                              <1> 	%ifnidni %{1},__NX_ROOT
  1464                              <1> 		%define %%__is_named 1
  1465                              <1> 	%else
  1466                              <1> 		%define %%__is_named 0
  1467                              <1> 	%endif
  1468                              <1> 	%if (%%__is_nested == 0)
  1469                              <1> 		%if (%%__is_named == 0)
  1470                              <1> 			%fatal root structure or union requires name
  1471                              <1> 		%endif
  1472                              <1> 		%ifidni %2, __NX_ROOT
  1473                              <1> 			%fatal root structure or union requires base type
  1474                              <1> 		%endif
  1475                              <1> 		%push %3
  1476                              <1> 		%xdefine %$__nx_istrucstart %{1}
  1477                              <1> 		%xdefine %$__nx_name %{2}
  1478                              <1> 		%[%$__nx_istrucstart]:
  1479                              <1> 	%else
  1480                              <1> 		%if (%%__is_named == 0)
  1481                              <1> 			%xdefine %%__tname %{$__nx_name}
  1482                              <1> 		%else
  1483                              <1> 			%xdefine %%__tname %{$__nx_name}.%{1}
  1484                              <1> 			%assign %%__off %%__tname
  1485                              <1> 			%assign %%__times %%__off-($-%[%$__nx_istrucstart])
  1486                              <1> 			%if (%%__times > 0)
  1487                              <1> 				times %%__times db 0
  1488                              <1> 			%endif
  1489                              <1> 		%endif
  1490                              <1> 		%push  %3
  1491                              <1> 		%xdefine %$__nx_istrucstart %[%$$__nx_istrucstart]
  1492                              <1> 		%xdefine %$__nx_name %%__tname
  1493                              <1> 	%endif
  1494                              <1> 	%define %$__nx_isnamed %%__is_named
  1495                              <1> %endmacro
  1496                              <1> 
  1497                              <1> %idefine NASMX_IUNION NASMX_ISTRUC
  1498                              <1> 
  1499                              <1> %imacro NASMX_AT 1-2+.nolist
  1500                              <1> 	%assign %%__ofs %{$__nx_name}.%{1}
  1501                              <1> 	%assign %%__count %%__ofs-($-%$__nx_istrucstart)
  1502                              <1> 	%if (%%__count > 0)
  1503                              <1> 		times %%__count db 0
  1504                              <1> 	%endif
  1505                              <1> 	%{$__nx_name}.%{1}__nx_storage %2
  1506                              <1> %endmacro
  1507                              <1> 
  1508                              <1> %imacro NASMX_IENDSTRUC 0.nolist
  1509                              <1> 	;// assert: finish up struc if needed
  1510                              <1> 	%if (%$__nx_isnamed == 1)
  1511                              <1> 		%assign %%__times %{$__nx_name}_size-($-%$__nx_istrucstart)
  1512                              <1> 		%if (%%__times > 0)
  1513                              <1> 			times %%__times db 0
  1514                              <1> 		%endif
  1515                              <1> 	%endif
  1516                              <1> 	%pop
  1517                              <1> %endmacro
  1518                              <1> 
  1519                              <1> %idefine NASMX_IENDUNION NASMX_IENDSTRUC
  1520                              <1> 
  1521                              <1> 
  1522                              <1> ;//////////////////////////////////////////////////////////////
  1523                              <1> ;// MACRO nx_isalnum
  1524                              <1> ;//
  1525                              <1> ;// Purpose
  1526                              <1> ;//    This macro is designed to return in the current context
  1527                              <1> ;//    stack variable %$__nx_isalnum_bool if the parameter is
  1528                              <1> ;//    alphanumeric.
  1529                              <1> ;//
  1530                              <1> ;// Usage:
  1531                              <1> ;//    nx_isalnum chr
  1532                              <1> ;//    nx_isalnum 'x'
  1533                              <1> ;//
  1534                              <1> %macro nx_isalnum 1.nolist
  1535                              <1>     %ifstr %1
  1536                              <1>         %define %%__arg_chr %1
  1537                              <1>     %else
  1538                              <1>         %defstr %%__arg_chr %1
  1539                              <1>     %endif
  1540                              <1>     %assign %%__count 62
  1541                              <1>     %assign %%__idx 3
  1542                              <1>     %assign %$__nx_isalnum_bool 0
  1543                              <1>     %rep %%__count
  1544                              <1>         %assign %%__idx %%__idx + 1
  1545                              <1>         %substr %%__chr __NASMX_NUMALPHATOKEN__ %%__idx, 1
  1546                              <1>         %ifidn %%__chr, %%__arg_chr
  1547                              <1>             %assign %$__nx_isalnum_bool %%__idx
  1548                              <1>             %exitrep
  1549                              <1>         %endif
  1550                              <1>     %endrep
  1551                              <1> %endmacro
  1552                              <1> 
  1553                              <1> ;//////////////////////////////////////////////////////////////
  1554                              <1> ;// MACRO nx_ishexchr
  1555                              <1> ;//
  1556                              <1> ;// Purpose
  1557                              <1> ;//    This macro is designed to return in the current context
  1558                              <1> ;//    stack variable %$__nx_ishexnum_bool if the parameter is
  1559                              <1> ;//    hexadecimal.
  1560                              <1> ;//
  1561                              <1> ;// Usage:
  1562                              <1> ;//    nx_ishexchr chr
  1563                              <1> ;//    nx_ishexchr 'f'
  1564                              <1> ;//
  1565                              <1> %macro nx_ishexchr 1.nolist
  1566                              <1>     %ifstr %1
  1567                              <1>         %define %%__arg_chr %1
  1568                              <1>     %else
  1569                              <1>         %defstr %%__arg_chr %1
  1570                              <1>     %endif
  1571                              <1>     %assign %%__count 22
  1572                              <1>     %assign %%__idx 3
  1573                              <1>     %assign %$__nx_ishexchr_bool 0
  1574                              <1>     %rep %%__count
  1575                              <1>         %assign %%__idx %%__idx + 1
  1576                              <1>         %substr %%__chr __NASMX_NUMALPHATOKEN__ %%__idx, 1
  1577                              <1>         %ifidn %%__chr, %%__arg_chr
  1578                              <1>             %assign %$__nx_ishexchr_bool %%__idx
  1579                              <1>             %exitrep
  1580                              <1>         %endif
  1581                              <1>     %endrep
  1582                              <1> %endmacro
  1583                              <1> 
  1584                              <1> ;//////////////////////////////////////////////////////////////
  1585                              <1> ;// MACRO nx_isfloattok
  1586                              <1> ;//
  1587                              <1> ;// Purpose
  1588                              <1> ;//    This macro is designed to return in the current context
  1589                              <1> ;//    stack variable %$__nx_isfloattok_bool if the parameter is
  1590                              <1> ;//    a float token and %$__nx_isfloattok_num returns the number.
  1591                              <1> ;//
  1592                              <1> ;// Usage:
  1593                              <1> ;//    %define PI 3.14159
  1594                              <1> ;//    nx_isfloattok PI
  1595                              <1> ;//    nx_isfloattok __float(2.0)
  1596                              <1> ;//    nx_isfloattok string
  1597                              <1> ;//
  1598                              <1> %macro nx_isfloattok 1-2.nolist 0
  1599                              <1>     %assign %$__nx_isfloattok_num 0
  1600                              <1>     %ifnum %1
  1601                              <1>         %assign %$__nx_isfloattok_bool 0
  1602                              <1>     %else
  1603                              <1>         %ifstr %1
  1604                              <1>             %define %%__arg_str %1
  1605                              <1>         %else
  1606                              <1>             %defstr %%__arg_str %1
  1607                              <1>         %endif
  1608                              <1>         nx_strstr %{1}, '__float'
  1609                              <1>         %if %$__nx_strstr_pos != 0
  1610                              <1>             %assign %$__nx_isfloattok_bool 1
  1611                              <1>             %substr %%__fpnum %%__arg_str %$__nx_strstr_pos,-1
  1612                              <1>             %deftok %%__fptok %%__fpnum
  1613                              <1>             %assign %$__nx_isfloattok_num %%__fptok
  1614                              <1>             %undef  %%__fpnum
  1615                              <1>             %undef  %%__fptok
  1616                              <1>         %else
  1617                              <1>             %assign %%__found 0
  1618                              <1>             %assign %%__arg_idx 0
  1619                              <1>             %strlen %%__arg_len %%__arg_str
  1620                              <1>             %rep %%__arg_len
  1621                              <1>                 %assign %%__arg_idx %%__arg_idx + 1
  1622                              <1>                 %substr %%__arg_chr %%__arg_str %%__arg_idx, 1
  1623                              <1>                 %assign %%__found 0
  1624                              <1>                 %assign %%__idx 0
  1625                              <1>                 %rep 15
  1626                              <1>                     %assign %%__idx %%__idx + 1
  1627                              <1>                     %substr %%__chr __NASMX_NUMALPHATOKEN__ %%__idx, 1
  1628                              <1>                     %ifidn %%__chr, %%__arg_chr
  1629                              <1>                         %assign %%__found %%__idx
  1630                              <1>                         %exitrep
  1631                              <1>                     %endif
  1632                              <1>                 %endrep
  1633                              <1>                 %if %%__found == 0
  1634                              <1>                     %exitrep
  1635                              <1>                 %endif
  1636                              <1>             %endrep
  1637                              <1>             %assign %$__nx_isfloattok_bool %%__found
  1638                              <1>             %if %%__found
  1639                              <1>                 %if %2 == 0
  1640                              <1>                     ;// we can only assume the number provided
  1641                              <1>                     ;// fits in the bits defined
  1642                              <1>                     %if __NASMX_ABI_BITS__ > 32
  1643                              <1>                         %assign %$__nx_isfloattok_num __float64__(%1)
  1644                              <1>                     %else
  1645                              <1>                         %assign %$__nx_isfloattok_num __float32__(%1)
  1646                              <1>                     %endif
  1647                              <1>                 %elif %2 == 4
  1648                              <1>                     %assign %$__nx_isfloattok_num __float32__(%1)
  1649                              <1>                 %else
  1650                              <1>                     %assign %$__nx_isfloattok_num __float64__(%1)
  1651                              <1>                 %endif
  1652                              <1>             %endif
  1653                              <1>             %undef %%__arg_str
  1654                              <1>         %endif
  1655                              <1>     %endif
  1656                              <1> %endmacro
  1657                              <1> 
  1658                              <1> ;//////////////////////////////////////////////////////////////
  1659                              <1> ;// MACRO nx_ishextok
  1660                              <1> ;//
  1661                              <1> ;// Purpose
  1662                              <1> ;//    This macro is designed to return in the current context
  1663                              <1> ;//    stack variable %$__nx_ishextok_bool if the parameter is
  1664                              <1> ;//    a hex token.  Note that this macro also returns true if
  1665                              <1> ;//    arg is an integer making it rather useful when we need
  1666                              <1> ;//    to move the number to a register
  1667                              <1> ;//
  1668                              <1> ;// Usage:
  1669                              <1> ;//    nx_ishextok token
  1670                              <1> ;//    nx_ishextok 0xFFF0
  1671                              <1> ;//
  1672                              <1> %macro nx_ishextok 1.nolist
  1673                              <1>     %ifstr %1
  1674                              <1>         %define %%__arg_str %1
  1675                              <1>     %else
  1676                              <1>         %defstr %%__arg_str %1
  1677                              <1>     %endif
  1678                              <1>     %strlen %%__arg_len %%__arg_str
  1679                              <1>     %assign %%__arg_idx 0
  1680                              <1>     %assign %%__has_x 0
  1681                              <1>     %rep %%__arg_len
  1682                              <1>         %assign %%__arg_idx %%__arg_idx + 1
  1683                              <1>         %substr %%__arg_chr %%__arg_str %%__arg_idx, 1
  1684                              <1>         %assign %%__found 0
  1685                              <1>         %ifidni %%__arg_chr, 'x'
  1686                              <1>             %if %%__has_x == 0
  1687                              <1>                 %if %%__arg_idx < %%__arg_len
  1688                              <1>                     %assign %%__has_x 1
  1689                              <1>                     %assign %%__found 1
  1690                              <1>                 %else
  1691                              <1>                     %exitrep
  1692                              <1>                 %endif
  1693                              <1>             %else
  1694                              <1>                 %exitrep
  1695                              <1>             %endif
  1696                              <1>         %else
  1697                              <1>             %assign %%__idx 1
  1698                              <1>             %rep 24
  1699                              <1>                 %assign %%__idx %%__idx + 1
  1700                              <1>                 %substr %%__chr __NASMX_NUMALPHATOKEN__ %%__idx, 1
  1701                              <1>                 %ifidn %%__chr, %%__arg_chr
  1702                              <1>                     %assign %%__found %%__idx
  1703                              <1>                     %exitrep
  1704                              <1>                 %endif
  1705                              <1>             %endrep
  1706                              <1>         %endif
  1707                              <1>         %if %%__found == 0
  1708                              <1>             %exitrep
  1709                              <1>         %endif
  1710                              <1>     %endrep
  1711                              <1>     %assign %$__nx_ishextok_bool %%__found
  1712                              <1> %endmacro
  1713                              <1> 
  1714                              <1> ;//////////////////////////////////////////////////////////////
  1715                              <1> ;// MACRO nx_strtok
  1716                              <1> ;//
  1717                              <1> ;// Purpose
  1718                              <1> ;//    To parse a string and return delimited tokens
  1719                              <1> ;//    Functionality is similar to the C strtok function
  1720                              <1> ;//
  1721                              <1> ;// Usage:                        ; After call:
  1722                              <1> ;//    nx_strtok two tokens, ' '  ; %$__nx_token = two   , %$__nx_token_len = 3
  1723                              <1> ;//    nx_strtok NULL, ' :?;'     ; %$__nx_token = tokens, %$__nx_token_len = 6
  1724                              <1> ;//    nx_strtok NULL, ' :?;'     ; %$__nx_token = ''    , %$__nx_token_len = 0
  1725                              <1> ;//
  1726                              <1> ;// Notes:
  1727                              <1> ;//    The return value is stored on the context stack as
  1728                              <1> ;//    %$__nx_token thus it must only be called within a valid context.
  1729                              <1> ;//    The length is also returned as %$__nx_token_len.  Check this value
  1730                              <1> ;//    for 0 after call this macro before processing the return value.
  1731                              <1> ;//
  1732                              <1> ;//    Call more than once to get the next token in the sequence, if any.
  1733                              <1> ;//    This function must be called at least once with a valid string
  1734                              <1> ;//    or token to parse before passing in NULL (0) in subsequent calls.
  1735                              <1> ;//
  1736                              <1> ;//    Unfortunately, a side effect of using macros is that a comma which
  1737                              <1> ;//    appears in a token actually causes the single token to split into 2
  1738                              <1> ;//    tokens making it impossible to use this macro like:
  1739                              <1> ;//         %define mytoken $32,000
  1740                              <1> ;//         nx_strtok mytoken, ','
  1741                              <1> %imacro nx_strtok 2.nolist
  1742                              <1> 	%ifstr %2
  1743                              <1> 		%define %%__sep_str %2
  1744                              <1> 	%else
  1745                              <1> 		%defstr %%__sep_str %2
  1746                              <1> 	%endif
  1747                              <1> 	%strlen %%__sep_len %%__sep_str
  1748                              <1> 	%ifnum %1
  1749                              <1> 		%assign %%__nx_null %1
  1750                              <1> 		%if %%__nx_null == 0
  1751                              <1> 			%define %%__arg_str %$__nxtok_next
  1752                              <1> 			%assign %%__arg_len %$__nxtok_len
  1753                              <1> 		%else
  1754                              <1> 			%defstr %%__arg_str %1
  1755                              <1> 			%strlen %%__arg_len %%__arg_str
  1756                              <1> 		%endif
  1757                              <1> 	%else
  1758                              <1> 		%ifstr %1
  1759                              <1> 			%define %%__tmp_str %1
  1760                              <1> 		%else
  1761                              <1> 			%defstr %%__tmp_str %1
  1762                              <1> 		%endif
  1763                              <1> 		%strlen %%__arg_len %%__tmp_str
  1764                              <1> 		;// ignore leading separator tokens
  1765                              <1> 		%assign %$__nx_token_len 0
  1766                              <1> 		%assign %%__arg_idx 1
  1767                              <1> 		%rep %%__arg_len
  1768                              <1> 			%substr %%__arg_chr %%__tmp_str %%__arg_idx
  1769                              <1> 			%assign %%__sep_idx 1
  1770                              <1> 			%rep %%__sep_len
  1771                              <1> 				%substr %%__sep_chr %%__sep_str %%__sep_idx
  1772                              <1> 				%ifidn %%__arg_chr, %%__sep_chr
  1773                              <1> 					%assign %$__nx_token_len %%__arg_idx
  1774                              <1> 					%exitrep
  1775                              <1> 				%else
  1776                              <1> 					%assign %%__sep_idx %%__sep_idx + 1
  1777                              <1> 				%endif
  1778                              <1> 			%endrep
  1779                              <1> 			%if %$__nx_token_len != 0
  1780                              <1> 				%assign %%__arg_idx %%__arg_idx + 1
  1781                              <1> 				%assign %$__nx_token_len 0
  1782                              <1> 			%else
  1783                              <1> 				%exitrep
  1784                              <1> 			%endif
  1785                              <1> 		%endrep
  1786                              <1> 
  1787                              <1> 		%if %%__arg_idx > 1
  1788                              <1> 			%if %%__arg_idx <= %%__arg_len
  1789                              <1> 				%assign %%__sublen %%__arg_len - %%__arg_idx + 1
  1790                              <1> 				%substr %%__arg_str %%__tmp_str %%__arg_idx, %%__sublen
  1791                              <1> 				%strlen %%__arg_len %%__arg_str
  1792                              <1> 			%else
  1793                              <1> 				%assign %%__arg_len 0
  1794                              <1> 			%endif
  1795                              <1> 		%else
  1796                              <1> 			%xdefine %%__arg_str %%__tmp_str
  1797                              <1> 			%strlen %%__arg_len %%__arg_str
  1798                              <1> 		%endif
  1799                              <1> 	%endif
  1800                              <1> 
  1801                              <1> 	%assign %$__nx_token_len 0
  1802                              <1> 	%if %%__arg_len == 0
  1803                              <1> 		%define %$__nxtok_next ''
  1804                              <1> 		%assign %$__nxtok_len 0
  1805                              <1> 		%define %$__nx_token ''
  1806                              <1> 	%else
  1807                              <1> 		%assign %%__arg_idx 1
  1808                              <1> 		%rep %%__arg_len
  1809                              <1> 			%substr %%__arg_chr %%__arg_str %%__arg_idx
  1810                              <1> 			%assign %%__sep_idx 1
  1811                              <1> 			%rep %%__sep_len
  1812                              <1> 				%substr %%__sep_chr %%__sep_str %%__sep_idx
  1813                              <1> 				%ifidn %%__arg_chr, %%__sep_chr
  1814                              <1> 					%assign %$__nx_token_len %%__arg_idx-1
  1815                              <1> 					%exitrep
  1816                              <1> 				%else
  1817                              <1> 					%assign %%__sep_idx %%__sep_idx + 1
  1818                              <1> 				%endif
  1819                              <1> 			%endrep
  1820                              <1> 			%if %$__nx_token_len != 0
  1821                              <1> 				%exitrep
  1822                              <1> 			%else
  1823                              <1> 				%assign %%__arg_idx %%__arg_idx + 1
  1824                              <1> 			%endif
  1825                              <1> 		%endrep
  1826                              <1> 		%if %$__nx_token_len == 0
  1827                              <1> 			%deftok %$__nx_token %%__arg_str
  1828                              <1> 			%assign %$__nx_token_len %%__arg_len
  1829                              <1> 			%define %$__nxtok_next ''
  1830                              <1> 			%assign %$__nxtok_len 0
  1831                              <1> 		%else
  1832                              <1> 			%substr %%__tokstr %%__arg_str 1,%$__nx_token_len
  1833                              <1> 			%deftok %$__nx_token %%__tokstr
  1834                              <1> 			%if %$__nx_token_len < %%__arg_len
  1835                              <1> 				%rep %%__arg_len - %$__nx_token_len
  1836                              <1> 					%substr %%__arg_chr %%__arg_str %%__arg_idx
  1837                              <1> 					%assign %%__nx_found 0
  1838                              <1> 					%assign %%__sep_idx 1
  1839                              <1> 					%rep %%__sep_len
  1840                              <1> 						%substr %%__sep_chr %%__sep_str %%__sep_idx
  1841                              <1> 						%ifidn %%__arg_chr, %%__sep_chr
  1842                              <1> 							%assign %%__nx_found 1
  1843                              <1> 							%exitrep
  1844                              <1> 						%else
  1845                              <1> 							%assign %%__sep_idx 1+%%__sep_idx
  1846                              <1> 						%endif
  1847                              <1> 					%endrep
  1848                              <1> 					%if %%__nx_found == 0
  1849                              <1> 						%exitrep
  1850                              <1> 					%else
  1851                              <1> 						%assign %%__arg_idx 1+%%__arg_idx
  1852                              <1> 					%endif
  1853                              <1> 				%endrep
  1854                              <1> 				%if %%__arg_idx <= %%__arg_len
  1855                              <1> 					%assign %$__nxtok_len %%__arg_len-%%__arg_idx+1
  1856                              <1> 					%substr %$__nxtok_next %%__arg_str %%__arg_idx,%$__nxtok_len
  1857                              <1> 				%else
  1858                              <1> 					%define %$__nxtok_next ''
  1859                              <1> 					%assign %$__nxtok_len 0
  1860                              <1> 				%endif
  1861                              <1> 			%else
  1862                              <1> 				%define %$__nxtok_next ''
  1863                              <1> 				%assign %$__nxtok_len 0
  1864                              <1> 			%endif
  1865                              <1> 		%endif
  1866                              <1> 	%endif
  1867                              <1> 
  1868                              <1> %endmacro
  1869                              <1> 
  1870                              <1> 
  1871                              <1> ;//////////////////////////////////////////////////////////////
  1872                              <1> ;// MACRO nx_strchr
  1873                              <1> ;//
  1874                              <1> ;// Purpose
  1875                              <1> ;//    This macro is designed to find position of char within string.
  1876                              <1> ;//    It will update the current context stack variable %$__nx_strchr_pos
  1877                              <1> ;//    with the index position of the chr or 0 if chr not found
  1878                              <1> ;// Usage:
  1879                              <1> ;//    nx_strchr string, chr
  1880                              <1> ;//    nx_strchr [wc + hInstance], 'x'
  1881                              <1> ;//
  1882                              <1> %macro nx_strchr 2.nolist
  1883                              <1> 	%ifdef %$__nx_strchr_string
  1884                              <1> 		%undef %$__nx_strchr_string
  1885                              <1> 	%endif
  1886                              <1> 	%ifstr %1
  1887                              <1> 		%xdefine %$__nx_strchr_string %{1}
  1888                              <1> 	%else
  1889                              <1> 		%defstr %$__nx_strchr_string %{1}
  1890                              <1> 	%endif
  1891                              <1> 	%strlen %%__count %[%$__nx_strchr_string]
  1892                              <1> 	%assign %%__idx 0
  1893                              <1> 	%assign %%__found 0
  1894                              <1> 	%rep %%__count
  1895                              <1> 		%assign %%__idx %%__idx + 1
  1896                              <1> 		%substr %%__chr %[%$__nx_strchr_string] %%__idx
  1897                              <1> 		%ifidn %%__chr,%{2}
  1898                              <1> 			%assign %%__found %%__idx
  1899                              <1> 			%exitrep
  1900                              <1> 		%endif
  1901                              <1> 	%endrep
  1902                              <1> 	%assign %$__nx_strchr_pos %%__found
  1903                              <1> %endmacro
  1904                              <1> 
  1905                              <1> 
  1906                              <1> ;//////////////////////////////////////////////////////////////
  1907                              <1> ;// MACRO nx_strstr
  1908                              <1> ;//
  1909                              <1> ;// Purpose
  1910                              <1> ;//    This macro is designed to find position of substr within string.
  1911                              <1> ;//    It will update the current context stack variable %$__nx_strstr_pos
  1912                              <1> ;//    with the index position of the substr or 0 if not found
  1913                              <1> ;// Usage:
  1914                              <1> ;//    nx_strstr string, substr
  1915                              <1> ;//    nx_strstr [rpb + hInstance], rbp
  1916                              <1> ;//
  1917                              <1> %macro nx_strstr 2.nolist
  1918                              <1> 	%ifdef %$__nx_strstr_string
  1919                              <1> 		%undef %$__nx_strstr_string
  1920                              <1> 	%endif
  1921                              <1> 	%ifstr %1
  1922                              <1> 		%xdefine %$__nx_strstr_string %{1}
  1923                              <1> 	%else
  1924                              <1> 		%defstr %$__nx_strstr_string %{1}
  1925                              <1> 	%endif
  1926                              <1> 	%ifstr %2
  1927                              <1> 		%xdefine %$__nx_strstr_substring %{2}
  1928                              <1> 	%else
  1929                              <1> 		%defstr %$__nx_strstr_substring %{2}
  1930                              <1> 	%endif
  1931                              <1> 	%strlen %%__count %[%$__nx_strstr_string]
  1932                              <1> 	%substr %%__subchr %[%$__nx_strstr_substring] 1
  1933                              <1> 	%strlen %%__sublen %[%$__nx_strstr_substring]
  1934                              <1> 	%assign %%__idx 0
  1935                              <1> 	%assign %%__found 0
  1936                              <1> 	%rep %%__count
  1937                              <1> 		%assign %%__idx %%__idx + 1
  1938                              <1> 		%if ((%%__count - %%__idx + 1) < %%__sublen)
  1939                              <1> 			%exitrep
  1940                              <1> 		%else
  1941                              <1> 			%substr %%__chr %[%$__nx_strstr_string] %%__idx
  1942                              <1> 			%ifidni %%__chr,%%__subchr
  1943                              <1> 				%substr %%__tmpstr %$__nx_strstr_string %%__idx, %%__sublen
  1944                              <1> 				%ifidni %%__tmpstr, %$__nx_strstr_substring
  1945                              <1> 					%assign %%__found %%__idx
  1946                              <1> 					%exitrep
  1947                              <1> 				%endif
  1948                              <1> 			%endif
  1949                              <1> 		%endif
  1950                              <1> 	%endrep
  1951                              <1> 	%assign %$__nx_strstr_pos %%__found
  1952                              <1> 	%undef %$__nx_strstr_string
  1953                              <1> 	%undef %$__nx_strstr_substring
  1954                              <1> %endmacro
  1955                              <1> 
  1956                              <1> 
  1957                              <1> ;// small helper macro used to parse __nxsig@@ defines
  1958                              <1> %macro nx_parse_tokens 1-100.nolist
  1959                              <1> 	%ifdef __nx_token_0
  1960                              <1> 		%undef __nx_token_0
  1961                              <1> 	%endif
  1962                              <1> 	%xdefine __nx_token_0 %0
  1963                              <1> 	%assign %%__ctr 1
  1964                              <1> 	%rep %0
  1965                              <1> 		%ifdef __nx_token_%[%%__ctr]
  1966                              <1> 			%undef __nx_token_%[%%__ctr]
  1967                              <1> 		%endif
  1968                              <1> 		%xdefine __nx_token_%[%%__ctr] %1
  1969                              <1> 		%assign %%__ctr 1 + %%__ctr
  1970                              <1> 		%rotate 1
  1971                              <1> 	%endrep
  1972                              <1> %endmacro
  1973                              <1> 
  1974                              <1> 
  1975                              <1> ;//////////////////////////////////////////////////////////////
  1976                              <1> ;// MACRO IMPORT
  1977                              <1> ;//
  1978                              <1> ;// Purpose
  1979                              <1> ;//    To define the signature and required syntax for
  1980                              <1> ;//    an external function
  1981                              <1> ;//
  1982                              <1> ;// usage:
  1983                              <1> ;//    IMPORT printf
  1984                              <1> ;//    IMPORT GetSystemWindowsDirectoryA, 8
  1985                              <1> ;//    IMPORT cdecl, myfunc, ptrdiff_t, dword, float_t
  1986                              <1> ;//
  1987                              <1> %imacro IMPORT 1-100.nolist
  1988                              <1> 	%push __NX_CTX_IMPORT__
  1989                              <1> 
  1990                              <1> 	%assign %$__bytecount 0
  1991                              <1> 	%ifndef __NASMX_DECLSPEC_CALLCONV_%[%1]__
  1992                              <1> 		%assign %$__callconv __NASMX_DECLSPEC_CALLCONV_DEFAULT__
  1993                              <1> 		%define %$__nx_proc %1
  1994                              <1> 		%if %0 > 1
  1995                              <1> 			%ifnum %2
  1996                              <1> 				%ifidn __OUTPUT_FORMAT__,win32
  1997                              <1> 					%assign %$__bytecount %2
  1998                              <1> 				%endif
  1999                              <1> 				%assign %$__repargs 0
  2000                              <1> 			%else
  2001                              <1> 				%assign %$__repargs %0-1
  2002                              <1> 			%endif
  2003                              <1> 		%else
  2004                              <1> 			%assign %%__cc_enum nx_declspec_cc_enum(__NASMX_DECLSPEC_CALLCONV_DEFAULT__)
  2005                              <1> 			%if %%__cc_enum == __NASMX_DECLSPEC_CC_ENUM_STDCALL__
  2006                              <1> 				;// assert: no bytecount in import implies cdecl for win32
  2007                              <1> 				%assign %$__callconv __NASMX_DECLSPEC_CALLCONV_CDECL__
  2008                              <1> ;			%elif %%__cc_enum == __NASMX_DECLSPEC_CC_ENUM_FASTCALL__
  2009                              <1> ;				;// assert: no bytecount in import implies cdecl for win32/win64 fastcall
  2010                              <1> ;				%assign %$__callconv __NASMX_DECLSPEC_CALLCONV_CDECL__
  2011                              <1> 			%endif
  2012                              <1> 			%assign %$__repargs 0
  2013                              <1> 		%endif
  2014                              <1> 	%else
  2015                              <1> 		%if %0 < 2
  2016                              <1> 			%fatal usage: IMPORT [CALLCONV, ] FUNCNAME [,ARG1,ARG2,...]
  2017                              <1> 		%endif
  2018                              <1> 		%assign %$__callconv __NASMX_DECLSPEC_CALLCONV_%[%1]__
  2019                              <1> 		%define %$__nx_proc %2
  2020                              <1> 		%assign %$__repargs %0-2
  2021                              <1> 	%endif
  2022                              <1> 
  2023                              <1> 	%ifdef __nx_import_param_list
  2024                              <1> 		%undef __nx_import_param_list
  2025                              <1> 	%endif
  2026                              <1> 	%assign %%__cc_enum nx_declspec_cc_enum(%[%$__callconv])
  2027                              <1> 	%if %%__cc_enum != __NASMX_DECLSPEC_CC_ENUM_NAKED__
  2028                              <1> 		;// assert: calc byte count for sig check
  2029                              <1> 		%rep %$__repargs
  2030                              <1> 			%rotate -1
  2031                              <1> 			%ifnum %1
  2032                              <1> 				%assign %$__bytecount %1
  2033                              <1> 				%exitrep
  2034                              <1> 			%else
  2035                              <1> 				nx_strtok %1, ' '
  2036                              <1> 				%assign %%__param_size sizeof(%$__nx_token)
  2037                              <1> 				%if %%__param_size < sizeof(size_t)
  2038                              <1> 					%assign %%__param_size sizeof(size_t)
  2039                              <1> 				%endif
  2040                              <1> 				%if %%__param_size > (sizeof(size_t) * 2)
  2041                              <1> 					%error %1 exceeds allowable parameter size
  2042                              <1> 				%endif
  2043                              <1> 				%assign %$__bytecount %$__bytecount + %%__param_size
  2044                              <1> 				%xdefine __nx_import_argtype %$__nx_token %+ __nx_type
  2045                              <1> 				%ifndef __nx_import_param_list
  2046                              <1> 					%defstr __nx_import_param_list __nx_import_argtype
  2047                              <1> 				%else
  2048                              <1> 					%defstr __nx_import_argstr __nx_import_argtype
  2049                              <1> 					%strcat __nx_import_param_list __nx_import_argstr,',',__nx_import_param_list
  2050                              <1> 					%undef __nx_import_argstr
  2051                              <1> 				%endif
  2052                              <1> 				%undef __nx_import_argtype
  2053                              <1> 			%endif
  2054                              <1> 		%endrep
  2055                              <1> 	%endif
  2056                              <1> 	nx_callconv_decorate %$__callconv,%$__nx_proc,%$__bytecount
  2057                              <1> 	%ifdef __nxsig@@%[%$__nxtok_decorated_name]
  2058                              <1> 		%warning redefining import symbol %$__nx_proc as %[%$__nxtok_decorated_name]
  2059                              <1> 	%endif
  2060                              <1> 
  2061                              <1> 	%ifndef __nx_import_param_list
  2062                              <1> 		%xdefine __nxsig@@%[%$__nxtok_decorated_name] %[%$__callconv],%[%$__bytecount]
  2063                              <1> 	%else
  2064                              <1> 		%deftok __nx_import_params __nx_import_param_list
  2065                              <1> 		%xdefine __nxsig@@%[%$__nxtok_decorated_name] %[%$__callconv],%[%$__bytecount],__nx_import_params
  2066                              <1> 		%undef __nx_import_params
  2067                              <1> 		%undef __nx_import_param_list
  2068                              <1> 	%endif
  2069                              <1> 	%ifnidn %$__nx_proc,%$__nxtok_decorated_name
  2070                              <1> 		%xdefine %[%$__nx_proc] %[%$__nxtok_decorated_name]
  2071                              <1> 	%endif
  2072                              <1> 
  2073                              <1> 	%pop
  2074                              <1> %endmacro
  2075                              <1> 
  2076                              <1> 
  2077                              <1> ;//////////////////////////////////////////////////////////////
  2078                              <1> ;// MACRO PROTO
  2079                              <1> ;//
  2080                              <1> ;// usage:
  2081                              <1> ;//    PROTO [CALLCONV,] FUNCNAME [,ARGS...]
  2082                              <1> ;//
  2083                              <1> ;// examples:
  2084                              <1> ;// Using default calling convention:
  2085                              <1> ;//    PROTO WndProc, ptrdiff_t, dword, size_t, size_t
  2086                              <1> ;// Specifying a calling convention
  2087                              <1> ;//    PROTO cdecl, myfunc, ptrdiff_t, dword, float_t
  2088                              <1> ;//
  2089                              <1> ;// notes:
  2090                              <1> ;//    This macro must be used when defining procedures
  2091                              <1> ;//    that will be callable from other modules via
  2092                              <1> ;//    the import macro as the function name is made
  2093                              <1> ;//    global here.
  2094                              <1> ;//
  2095                              <1> %imacro PROTO 1-100.nolist
  2096                              <1> 	%push __NX_CTX_PROTO__
  2097                              <1> 	%ifndef __NASMX_DECLSPEC_CALLCONV_%[%1]__
  2098                              <1> 		%assign %$__callconv __NASMX_DECLSPEC_CALLCONV_DEFAULT__
  2099                              <1> 		%define %$__proc %1
  2100                              <1> 		%assign %$__repcnt %0-1
  2101                              <1> 	%else
  2102                              <1> 		%if %0 < 2
  2103                              <1> 			%fatal usage: PROTO [CALLCONV, ] FUNCNAME [,ARG1,ARG2,...]
  2104                              <1> 		%endif
  2105                              <1> 		%assign %$__callconv __NASMX_DECLSPEC_CALLCONV_%[%1]__
  2106                              <1> 		%define %$__proc %2
  2107                              <1> 		%assign %$__repcnt %0-2
  2108                              <1> 	%endif
  2109                              <1> 	%ifdef __nx_proto_param_list
  2110                              <1> 		%undef __nx_proto_param_list
  2111                              <1> 	%endif
  2112                              <1> 	%assign %$__bytecount 0
  2113                              <1> 	%assign %%__cc_enum nx_declspec_cc_enum(%$__callconv)
  2114                              <1> 	%if %%__cc_enum != __NASMX_DECLSPEC_CC_ENUM_NAKED__
  2115                              <1> 		;// assert: calc byte count for sig check during invoke 
  2116                              <1> 		%rep %$__repcnt
  2117                              <1> 			%rotate -1
  2118                              <1> 			%ifnum %1
  2119                              <1> 				%assign %$__bytecount %1
  2120                              <1> 				%exitrep
  2121                              <1> 			%else
  2122                              <1> 				nx_strtok %1, ' '
  2123                              <1> 				%assign %%__param_size %[%$__nx_token]_size
  2124                              <1> 				%if %%__param_size < sizeof(size_t)
  2125                              <1> 					%assign %%__param_size sizeof(size_t)
  2126                              <1> 				%endif
  2127                              <1> 				%if %%__param_size > (sizeof(size_t) * 2)
  2128                              <1> 					%error %1 exceeds allowable parameter size
  2129                              <1> 				%endif
  2130                              <1> 				%assign %$__bytecount %$__bytecount + %%__param_size
  2131                              <1> 				%xdefine __nx_proto_argtype %$__nx_token %+ __nx_type
  2132                              <1> 				%ifndef __nx_proto_param_list
  2133                              <1> 					%defstr __nx_proto_param_list __nx_proto_argtype
  2134                              <1> 				%else
  2135                              <1> 					%defstr __nx_proto_argstr __nx_proto_argtype
  2136                              <1> 					%strcat __nx_proto_param_list __nx_proto_argstr,',',__nx_proto_param_list
  2137                              <1> 					%undef __nx_proto_argstr
  2138                              <1> 				%endif
  2139                              <1> 				%undef __nx_proto_argtype
  2140                              <1> 			%endif
  2141                              <1> 		%endrep
  2142                              <1> 	%endif
  2143                              <1> 
  2144                              <1> 	%ifndef %[%$__proc]
  2145                              <1> 		%ifdef __nxsig@@%[%$__proc]
  2146                              <1> 			%fatal global symbol %[%$__proc] already defined
  2147                              <1> 		%endif
  2148                              <1> 		nx_callconv_decorate %$__callconv,%$__proc,%$__bytecount
  2149                              <1> 		%ifndef __nx_proto_param_list
  2150                              <1> 			%xdefine __nxsig@@%[%$__nxtok_decorated_name] %[%$__callconv],%[%$__bytecount]
  2151                              <1> 		%else
  2152                              <1> 			%deftok __nx_proto_params __nx_proto_param_list
  2153                              <1> 			%xdefine __nxsig@@%[%$__nxtok_decorated_name] %[%$__callconv],%[%$__bytecount],__nx_proto_params
  2154                              <1> 			%undef __nx_proto_params
  2155                              <1> 			%undef __nx_proto_param_list
  2156                              <1> 		%endif
  2157                              <1> 		%ifnidn %$__proc,%$__nxtok_decorated_name
  2158                              <1> 			%xdefine %[%$__proc] %[%$__nxtok_decorated_name]
  2159                              <1> 		%endif
  2160                              <1> 	%endif
  2161                              <1> 
  2162                              <1> 	%ifndef __nxsig_declared_%[%$__proc]
  2163                              <1> 		global %[%$__proc]
  2164                              <1> 		%xdefine __nxsig_declared_%[%$__proc] global
  2165                              <1> 	%endif
  2166                              <1> 
  2167                              <1> 	%pop
  2168                              <1> %endmacro
  2169                              <1> 
  2170                              <1> 
  2171                              <1> ;//////////////////////////////////////////////////////////////
  2172                              <1> ;// MACRO ENTRY
  2173                              <1> ;//
  2174                              <1> ;// usage:
  2175                              <1> ;//    ENTRY progname
  2176                              <1> ;//
  2177                              <1> ;// examples:
  2178                              <1> ;//    ENTRY Demo1
  2179                              <1> ;//
  2180                              <1> ;// notes:
  2181                              <1> ;//    program entry is assumed to be cdecl unless system default
  2182                              <1> ;//    callconv specification is pascal.
  2183                              <1> ;//    When building on Win64 or using pascal callconv you must
  2184                              <1> ;//    change the makefile by removing the leading underscore
  2185                              <1> ;//    from the linker /entry line
  2186                              <1> %imacro ENTRY 1.nolist
  2187                              <1> 	%assign %%__cc_enum nx_declspec_cc_enum(__NASMX_DECLSPEC_CALLCONV_DEFAULT__)
  2188                              <1> 	%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  2189                              <1> 		;// main(argc, argv)
  2190                              <1> 		%assign %%__bytecount __NASMX_ABI_BITS__ / 4
  2191                              <1> 	%else
  2192                              <1> 		;// main(argc, argv, envp)
  2193                              <1> 		%assign %%__bytecount (( __NASMX_ABI_BITS__ / 8 ) * 3)
  2194                              <1> 	%endif
  2195                              <1> 	
  2196                              <1> 	%if %%__cc_enum > __NASMX_DECLSPEC_CC_ENUM_PASCAL__
  2197                              <1> 		%assign %%__cc_prefix nx_declspec_cc_prefix(__NASMX_DECLSPEC_CALLCONV_DEFAULT__)
  2198                              <1> 		%if %%__cc_prefix > 0
  2199                              <1> 			%xdefine %[%1] _main
  2200                              <1> 			%xdefine __nxsig@@_main  __NASMX_DECLSPEC_CALLCONV_CDECL__, %%__bytecount
  2201                              <1> 		%else
  2202                              <1> 			%xdefine %[%1] main
  2203                              <1> 			%xdefine __nxsig@@main  __NASMX_DECLSPEC_CALLCONV_DEFAULT__, %%__bytecount
  2204                              <1> 		%endif
  2205                              <1> 	%else
  2206                              <1> 		%xdefine %[%1] main
  2207                              <1> 		%xdefine __nxsig@@main  __NASMX_DECLSPEC_CALLCONV_DEFAULT__, %%__bytecount
  2208                              <1> 	%endif
  2209                              <1> 	%xdefine __nxsig_declared_%[%1] global
  2210                              <1> 	global %[%1]
  2211                              <1> %endmacro
  2212                              <1> 
  2213                              <1> ;////////////////////////////////////////////////////////////////////////
  2214                              <1> ;//
  2215                              <1> ;// Internal macro used by invoke to detect argv addressing mode
  2216                              <1> ;// The context variable %$__nx_argv_mode_indirect will be set to
  2217                              <1> ;// the string index where '[' is found and is also used as a flag
  2218                              <1> ;// indicating retrieve the variable contents, not it's address.
  2219                              <1> ;// The context variable %$__nx_argv_mode_bp will be set to the
  2220                              <1> ;// the string index where the sign ( + or - ) is found and will
  2221                              <1> ;// be used as a flag indicating that argv mode is used.
  2222                              <1> ;// The context variables %$__nx_argv_mode_param_type, %$__nx_argv_mode_param_isfloat,
  2223                              <1> ;// %$__nx_argv_mode_param_size, and %$__nx_argv_mode_param_castsize are set according
  2224                              <1> ;// to the parameter list index supplied as the second argument to this macro.
  2225                              <1> %xdefine __NX_ARGV_MODE_SIGN_ADD__ 1
  2226                              <1> %xdefine __NX_ARGV_MODE_SIGN_SUB__ 2
  2227                              <1> %macro nx_analyze_argv_mode 2
  2228                              <1> 	%ifnum %2
  2229                              <1> 		%ifdef __nx_token_%[%2]
  2230                              <1> 			%assign %$__nx_argv_mode_param_type __nx_token_%[%2]
  2231                              <1> 			%assign %$__nx_argv_mode_param_isfloat ((%$__nx_argv_mode_param_type >> 15) & 0x01)
  2232                              <1> 			%assign %$__nx_argv_mode_param_size %$__nx_argv_mode_param_type & 0x7F
  2233                              <1> 		%else
  2234                              <1> 			%assign %$__nx_argv_mode_param_type sizeof(size_t)
  2235                              <1> 			%assign %$__nx_argv_mode_param_isfloat 0
  2236                              <1> 			%assign %$__nx_argv_mode_param_size sizeof(size_t)
  2237                              <1> 		%endif
  2238                              <1> 	%else
  2239                              <1> 		%fatal internal error - unknown parameter
  2240                              <1> 	%endif
  2241                              <1> 
  2242                              <1> 	%assign %$__nx_argv_mode_bp 0
  2243                              <1> 	%assign %$__nx_argv_mode_sign 0
  2244                              <1> 	%assign %$__nx_argv_mode_castsize sizeof(size_t)
  2245                              <1> 	%assign %$__nx_argv_mode_fp_isnum 0
  2246                              <1> 	%assign %$__nx_argv_mode_fp_num 0
  2247                              <1> 	nx_strchr %{1}, '['
  2248                              <1> 	%assign %$__nx_argv_mode_indirect %$__nx_strchr_pos
  2249                              <1> 	%if %$__nx_argv_mode_indirect == 0
  2250                              <1> 		nx_strstr %{1}, __BP
  2251                              <1> 		%if %$__nx_strstr_pos > 0
  2252                              <1> 			;// assert: potentially loading variable address offset from reg bp
  2253                              <1> 			;// quick check to help ensure that bp is a token
  2254                              <1> 			%assign %$__nx_isalnum_bool 0
  2255                              <1> 			%defstr %%__str %[%1]
  2256                              <1> 			%if %$__nx_strstr_pos > 1
  2257                              <1> 				%substr %%__sub %%__str %$__nx_strstr_pos-1, 1
  2258                              <1> 				nx_isalnum %%__sub
  2259                              <1> 			%endif
  2260                              <1> 			%if %$__nx_isalnum_bool == 0
  2261                              <1> 				%strlen %%__len %%__str
  2262                              <1> 				%if %%__len > %$__nx_strchr_pos + 2
  2263                              <1> 					%substr %%__sub %%__str %$__nx_strstr_pos+3, 1
  2264                              <1> 					nx_isalnum %%__sub
  2265                              <1> 				%endif
  2266                              <1> 			%endif
  2267                              <1> 			%if %$__nx_isalnum_bool == 0
  2268                              <1> 				;// we must be given a positive or negative offset in order to 
  2269                              <1> 				;// generate code for local variable addressing
  2270                              <1> 				nx_strchr %{1}, '+'
  2271                              <1> 				%if %$__nx_strchr_pos == 0
  2272                              <1> 					nx_strchr %{1}, '-'
  2273                              <1> 					%if %$__nx_strchr_pos > 0
  2274                              <1> 						%assign %$__nx_argv_mode_sign __NX_ARGV_MODE_SIGN_SUB__
  2275                              <1> 					%endif
  2276                              <1> 				%else
  2277                              <1> 					%assign %$__nx_argv_mode_sign __NX_ARGV_MODE_SIGN_ADD__
  2278                              <1> 				%endif
  2279                              <1> 				%assign %$__nx_argv_mode_bp %$__nx_strchr_pos
  2280                              <1> 			%endif
  2281                              <1> 			%substr %%__off %%__str %$__nx_argv_mode_bp+1, -1
  2282                              <1> 			%deftok %$__nx_argv_mode_bp_offset %%__off
  2283                              <1> 		%elif %$__nx_argv_mode_param_isfloat > 0
  2284                              <1> 			;// assert: check for float type and process
  2285                              <1> 			nx_isfloattok %1, %$__nx_argv_mode_param_size
  2286                              <1> 			%if %$__nx_isfloattok_bool != 0
  2287                              <1> 				%assign %$__nx_argv_mode_fp_isnum 1
  2288                              <1> 				%assign %$__nx_argv_mode_fp_num %$__nx_isfloattok_num
  2289                              <1> 			%else
  2290                              <1> 				nx_strtok %1, ' '
  2291                              <1> 				%ifndef __nx_reg_%[%$__nx_token]
  2292                              <1> 					%assign %$__nx_strstr_pos 0
  2293                              <1> 					%if __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__ > 0
  2294                              <1> 						nx_strstr __NASMX_DECLSPEC_FASTCALL_REGFLOATARGS_%[%$__nx_argv_mode_castsize]__,%$__nx_token
  2295                              <1> 					%endif
  2296                              <1> 					%if %$__nx_strstr_pos == 0
  2297                              <1> 						%iftoken %1
  2298                              <1> 							%fatal expected floating point at arg %1
  2299                              <1> 						%endif
  2300                              <1> 						;// must check for casts which indicate
  2301                              <1> 						;// __float() or __double() may have been used
  2302                              <1> 						%ifdef %[%$__nx_token]_size
  2303                              <1> 							%assign %%__size %[%$__nx_token]_size
  2304                              <1> 							nx_strtok 0, ';'
  2305                              <1> 						%else
  2306                              <1> 							%assign %%__size %$__nx_argv_mode_param_size
  2307                              <1> 							nx_strtok %1, ';'
  2308                              <1> 						%endif
  2309                              <1> 						%if %%__size > %$__nx_argv_mode_param_size
  2310                              <1> 							%warning potential loss of precision from double to float for arg %1
  2311                              <1> 						%endif
  2312                              <1> 						%assign %$__nx_argv_mode_fp_isnum 1
  2313                              <1> 						%assign %$__nx_argv_mode_fp_num %$__nx_token
  2314                              <1> 					%endif
  2315                              <1> 				%endif
  2316                              <1> 			%endif
  2317                              <1> 		%endif
  2318                              <1> 	%elif %$__nx_argv_mode_indirect > 3
  2319                              <1> 		;// check for cast ( eg: dword[rbp+4] )
  2320                              <1> 		%defstr %%__str %[%1]
  2321                              <1> 		%substr %%__sub %%__str 1, %$__nx_argv_mode_indirect-1
  2322                              <1> 		%deftok %%__tok %%__sub
  2323                              <1> 		%ifdef %[%%__tok]_size
  2324                              <1> 			%assign %$__nx_argv_mode_castsize %[%%__tok]_size
  2325                              <1> 		%endif
  2326                              <1> 	%endif
  2327                              <1> %endmacro
  2328                              <1> 
  2329                              <1> ;//////////////////////////////////////////////////////////////
  2330                              <1> ;// MACRO INVOKE
  2331                              <1> ;//
  2332                              <1> ;// usage:
  2333                              <1> ;//    INVOKE func [, arg1] [,arg2]
  2334                              <1> ;//
  2335                              <1> ;// examples:
  2336                              <1> ;//    invoke malloc, 64
  2337                              <1> ;//
  2338                              <1> ;// notes:
  2339                              <1> ;//    when using bp offsets you should use qualifiers to ensure
  2340                              <1> ;//    they are passed properly, ie: invoke malloc, dword [argv(.x)]
  2341                              <1> ;//
  2342                              <1> %imacro INVOKE 1-100.nolist
  2343                              <1> 	%ifndef NASMX_ENDPROC
  2344                              <1> 		;// assert: we cannot check for context in case we are in a switch
  2345                              <1> 		;// so we use nasmx_endproc
  2346                              <1> 		%fatal 'invoke must be contained within proc/endproc directives.'
  2347                              <1> 	%endif
  2348                              <1> 	%ifndef __NX_LOCALS_PRESENT__
  2349                              <1> 		;// require locals directive to ensure stack
  2350                              <1> 		;// frame initialized properly prior to invoke.
  2351                              <1> 		%fatal 'missing locals directive'
  2352                              <1> 	%endif
  2353                              <1> 
  2354                              <1> 	%push _NX_CTX_INVOKE
  2355                              <1> 	%assign %$args 0
  2356                              <1> 	%assign %$__nx_intargs 0           ;// init int args counter
  2357                              <1> 	%assign %$__nx_floatargs 0         ;// init float args counter
  2358                              <1> 
  2359                              <1> 	;// Fix for v1.0rc2: an imported definition may be zero (0)
  2360                              <1> 	;// for CDECL varargs or not properly defined, thus we must
  2361                              <1> 	;// calculate a valid bytecount based upon given parameters
  2362                              <1> 	;// in order to get a proper stack frame built if callstack
  2363                              <1> 	;// not defined.
  2364                              <1> 	%ifdef __nxsig@@%[%1]
  2365                              <1> 		nx_parse_tokens __nxsig@@%[%1]
  2366                              <1> 		%assign %$__nx_callconv __nx_token_1
  2367                              <1> 		%assign %$__nx_protobytecount __nx_token_2
  2368                              <1> 		%ifndef __nxsig_declared_%[%1]
  2369                              <1> 			%ifndef __nxsig_defined_%[%1]
  2370                              <1> 				EXTERN	%[%1]
  2371                              <1> 				%xdefine __nxsig_declared_%[%1] extern
  2372                              <1> 			%endif
  2373                              <1> 		%endif
  2374                              <1> 	%else
  2375                              <1> 		%assign %$__nx_callconv __NASMX_DECLSPEC_CALLCONV_DEFAULT__
  2376                              <1> 		%assign %$__nx_protobytecount 0
  2377                              <1> 	%endif
  2378                              <1> 
  2379                              <1> 	%assign %%__nx_argrotate nx_declspec_cc_argrotate(%$__nx_callconv)
  2380                              <1> 	%if %%__nx_argrotate > 0
  2381                              <1> 		%assign %$__nx_argrotate 1
  2382                              <1> 	%else
  2383                              <1> 		%assign %$__nx_argrotate -1
  2384                              <1> 	%endif
  2385                              <1> 
  2386                              <1> 	%assign %$__nx_retpopsargs nx_declspec_cc_retpopsargs(%$__nx_callconv)
  2387                              <1> 	%assign %%__cc_enum nx_declspec_cc_enum(%$__nx_callconv)
  2388                              <1> 	%xdefine %$__nx_proc %1
  2389                              <1> 
  2390                              <1> 	;// NASMX 1.4 - The following was added to compensate for the fact
  2391                              <1> 	;// that the user may pass __AX in an argument and thus we may need
  2392                              <1> 	;// to save/restore __AX as it is used to spill arguments to the stack.
  2393                              <1> 	%assign %$__reg_ax_used 0
  2394                              <1> 	%assign %$__reg_ax_saved 0
  2395                              <1> 	%assign %%__repcnt 0   ; assume no reg ax checking
  2396                              <1> 	%if %0 > 1
  2397                              <1> 		%assign %%__repcnt %0 - 1
  2398                              <1> 		%if %%__cc_enum == __NASMX_DECLSPEC_CC_ENUM_FASTCALL__
  2399                              <1> 			%assign %%__arg_rotate 1
  2400                              <1> 			%assign %%__maxregs __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__
  2401                              <1> 			%if %%__repcnt > %%__maxregs
  2402                              <1> 				%assign %%__repcnt %%__maxregs
  2403                              <1> 			%endif
  2404                              <1> 			%rep %%__repcnt
  2405                              <1> 				%rotate %%__arg_rotate
  2406                              <1> 				;// assert: must check for float tokens since
  2407                              <1> 				;// __AX will be used to load stack
  2408                              <1> 				nx_isfloattok %{1}
  2409                              <1> 				%if %$__nx_isfloattok_bool != 0
  2410                              <1> 					%if %$__reg_ax_used != 0
  2411                              <1> 						%assign %$__reg_ax_saved 1
  2412                              <1> 					%endif
  2413                              <1> 					%assign %$__reg_ax_used %$__reg_ax_used + 1
  2414                              <1> 				%elifidni %{1},__AX
  2415                              <1> 					%if %$__reg_ax_used != 0
  2416                              <1> 						%assign %$__reg_ax_saved 1
  2417                              <1> 					%endif
  2418                              <1> 				%endif
  2419                              <1> 			%endrep
  2420                              <1> 			%rotate %%__arg_rotate
  2421                              <1> 			%assign %%__repcnt %0 - 1
  2422                              <1> 			%if %%__repcnt > %%__maxregs
  2423                              <1> 				%assign %%__repcnt %%__repcnt - %%__maxregs
  2424                              <1> 			%else
  2425                              <1> 				%assign %%__repcnt 0
  2426                              <1> 			%endif
  2427                              <1> 		%else
  2428                              <1> 			%assign %%__arg_rotate %$__nx_argrotate
  2429                              <1> 			%rotate %%__arg_rotate
  2430                              <1> 		%endif
  2431                              <1> 	%endif
  2432                              <1> 	%if %%__repcnt != 0
  2433                              <1> 		%rep %%__repcnt
  2434                              <1> 			%assign %$__nx_strchr_pos 0
  2435                              <1> 			%assign %%__parse_arg 0
  2436                              <1> 			%ifnum %{1}
  2437                              <1> 				%if __NASMX_ABI_BITS__ > 32
  2438                              <1> 					%assign %$__reg_ax_used %$__reg_ax_used + 1
  2439                              <1> 				%endif
  2440                              <1> 			%elifstr %{1}
  2441                              <1> 				%if __NASMX_ABI_BITS__ > 32
  2442                              <1> 					%assign %$__reg_ax_used %$__reg_ax_used + 1
  2443                              <1> 				%endif
  2444                              <1> 			%elifidni %{1},__AX
  2445                              <1> 				%if %$__reg_ax_used != 0
  2446                              <1> 					%assign %$__reg_ax_saved 1
  2447                              <1> 				%endif
  2448                              <1> 			%else
  2449                              <1> 				nx_strchr %{1},'['
  2450                              <1> 				%if %$__nx_strchr_pos != 0
  2451                              <1> 					%if %$__reg_ax_used != 0
  2452                              <1> 						%assign %$__reg_ax_saved 1
  2453                              <1> 					%endif
  2454                              <1> 					%assign %$__reg_ax_used %$__reg_ax_used + 1
  2455                              <1> 				%else
  2456                              <1> 					nx_isfloattok %{1}
  2457                              <1> 					%if %$__nx_isfloattok_bool != 0
  2458                              <1> 						%if __NASMX_ABI_BITS__ > 32
  2459                              <1> 							%if %$__reg_ax_used != 0
  2460                              <1> 								%assign %$__reg_ax_saved 1
  2461                              <1> 							%endif
  2462                              <1> 							%assign %$__reg_ax_used %$__reg_ax_used + 1
  2463                              <1> 						%endif
  2464                              <1> 					%else
  2465                              <1> 						%assign %%__parse_arg 1
  2466                              <1> 					%endif
  2467                              <1> 				%endif
  2468                              <1> 			%endif
  2469                              <1> 
  2470                              <1> 			%if %%__parse_arg != 0
  2471                              <1> 				;// parse this argument looking for __AX
  2472                              <1> 				%assign %%__tokctr 0
  2473                              <1> 				%assign %%__saw_ax 0
  2474                              <1> 				%assign %%__saw_reg 0
  2475                              <1> 				nx_strtok %{1},' -+*/%'
  2476                              <1> 				%rep 8
  2477                              <1> 					%if %$__nx_token_len == 0
  2478                              <1> 						%exitrep
  2479                              <1> 					%else
  2480                              <1> 						%assign %%__tokctr %%__tokctr + 1
  2481                              <1> 						%if %$__nx_token_len == 3
  2482                              <1> 							nx_strstr %$__nx_token,__AX
  2483                              <1> 							%if %$__nx_strstr_pos != 0
  2484                              <1> 								%assign %%__saw_ax 1
  2485                              <1> 								%if %$__reg_ax_used != 0
  2486                              <1> 									%assign %$__reg_ax_saved 1
  2487                              <1> 								%endif
  2488                              <1> 							%elifdef __nx_reg_%[%$__nx_token]
  2489                              <1> 								%assign %%__saw_reg 1
  2490                              <1> 							%endif
  2491                              <1> 						%endif
  2492                              <1> 						nx_strtok 0,' -+*/%'
  2493                              <1> 					%endif
  2494                              <1> 				%endrep
  2495                              <1> 				%if %%__saw_reg != 0
  2496                              <1> 					;// we don't support the combination of
  2497                              <1> 					;// REG and AX for calculating offset.
  2498                              <1> 					%if %%__saw_ax != 0
  2499                              <1> 						%fatal loading __AX with invalid arg: %1
  2500                              <1> 					%endif
  2501                              <1> 					%if %%__tokctr > 1
  2502                              <1> 						%assign %$__reg_ax_used %$__reg_ax_used + 1
  2503                              <1> 					%endif
  2504                              <1> 				%endif
  2505                              <1> 			%endif
  2506                              <1> 			%rotate %%__arg_rotate
  2507                              <1> 		%endrep
  2508                              <1> 	%endif
  2509                              <1> 
  2510                              <1> 	%assign %%__repcnt %0 - 1
  2511                              <1> 	%assign %$__nx_bytecount (( __NASMX_ABI_BITS__ / 8 ) * %%__repcnt)
  2512                              <1> 	%if %$__nx_bytecount < %$__nx_protobytecount
  2513                              <1> 		;// assert: possibly due to double param in
  2514                              <1> 		;// 32bit mode or int128 in 64bit mode
  2515                              <1> 		%assign %$__nx_bytecount %$__nx_protobytecount
  2516                              <1> 	%endif
  2517                              <1> 
  2518                              <1> 	%if %%__cc_enum == __NASMX_DECLSPEC_CC_ENUM_FASTCALL__
  2519                              <1> 		;// for fastcall, whenever CALLSTACK optimization is enabled,
  2520                              <1> 		;// we use the stack built previously during locals/endlocals directive.
  2521                              <1> 		%assign %$__nx_callstack_adjust 0
  2522                              <1> 		%assign %$__nx_invoke_callstack_adjust %$__nx_bytecount
  2523                              <1> 		%ifdef __NX_PROLOGUE_CALLSTACK_ADJUST__
  2524                              <1> 			;// Verify that the CALLSTACK is sufficient for the
  2525                              <1> 			;// number of parameter arguments we have been given.
  2526                              <1> 			%assign %$__nx_callstack_adjust __NX_PROLOGUE_CALLSTACK_ADJUST__
  2527                              <1> 			%if __NASMX_ABI_BITS__ < 64
  2528                              <1> 				%if %$__nx_callstack_adjust < %$__nx_bytecount
  2529                              <1> 					%assign %$__nx_callstack_adjust 0
  2530                              <1> 					%warning insufficient callstack size for procedure %[%$__nx_proc], generating inefficient code...
  2531                              <1> 				%endif
  2532                              <1> 			%else
  2533                              <1> 				%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  2534                              <1> 					%if %$__nx_callstack_adjust < %$__nx_bytecount
  2535                              <1> 						;// Windows: always requires a stack adjustment
  2536                              <1> 						%assign %$__nx_callstack_adjust 0
  2537                              <1> 						%warning insufficient callstack size for procedure %[%$__nx_proc], generating inefficient code...
  2538                              <1> 					%else
  2539                              <1> 						;// A callstack defined for Win64 must be at least 32 bytes
  2540                              <1> 						%if %$__nx_callstack_adjust < 32
  2541                              <1> 							%assign %$__nx_callstack_adjust 0
  2542                              <1> 							%warning insufficient callstack size for procedure %[%$__nx_proc], generating inefficient code...
  2543                              <1> 						%else
  2544                              <1> 							%assign %$__nx_invoke_callstack_adjust 0
  2545                              <1> 						%endif
  2546                              <1> 					%endif
  2547                              <1> 				%else
  2548                              <1> 					;// Linux: required when register allocation exhausted
  2549                              <1> 					%if %%__repcnt > 6
  2550                              <1> 						%assign %$__nx_invoke_callstack_adjust (( %%__repcnt - 6 ) * ( __NASMX_ABI_BITS__ / 8 ))
  2551                              <1> 						%if %$__nx_invoke_callstack_adjust > %$__nx_callstack_adjust
  2552                              <1> 							%assign %$__nx_callstack_adjust 0
  2553                              <1> 							%warning insufficient callstack size for procedure %[%$__nx_proc], generating inefficient code...
  2554                              <1> 						%else
  2555                              <1> 							%assign %$__nx_invoke_callstack_adjust 0
  2556                              <1> 						%endif
  2557                              <1> 					%else
  2558                              <1> 						%assign %$__nx_invoke_callstack_adjust 0
  2559                              <1> 					%endif
  2560                              <1> 				%endif
  2561                              <1> 			%endif
  2562                              <1> 		%else
  2563                              <1> 			%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ != __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  2564                              <1> 				%if __NASMX_ABI_BITS__ > 32
  2565                              <1> 					;// Make space for x64 args that could possibly get placed onto the stack
  2566                              <1> 					%if %%__repcnt > 6
  2567                              <1> 						;// TODO: Make more efficient by examining param types ( non-trivial ).
  2568                              <1> 						%assign %$__nx_invoke_callstack_adjust (( %%__repcnt - 6 ) * ( __NASMX_ABI_BITS__ / 8 ))
  2569                              <1> 					%else
  2570                              <1> 						%assign %$__nx_invoke_callstack_adjust 0
  2571                              <1> 					%endif
  2572                              <1> 				%endif
  2573                              <1> 			%endif
  2574                              <1> 		%endif
  2575                              <1> 
  2576                              <1> 		%assign %$__align 0
  2577                              <1> 		%if %$__nx_invoke_callstack_adjust > 0
  2578                              <1> 			;// assert: callstack not defined or insufficient, build it here
  2579                              <1> 			%if __NASMX_ABI_BITS__ > 32
  2580                              <1> 				%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  2581                              <1> 					;// Windows requires at least 32 bytes of shadow storage
  2582                              <1> 					%if %$__nx_invoke_callstack_adjust < 32
  2583                              <1> 						%assign %$__nx_invoke_callstack_adjust 32
  2584                              <1> 					%endif
  2585                              <1> 				%endif
  2586                              <1> 			%endif
  2587                              <1> 			;// first determine if an alignment adjustment is needed
  2588                              <1> 			%assign %$__align __NASMX_ABI_BITS__ / 4
  2589                              <1> 			%assign %%__off (((%$__nx_invoke_callstack_adjust + %$__align) / %$__align) * %$__align)
  2590                              <1> 			%assign %%__tmp (%$__nx_invoke_callstack_adjust + %$__align)
  2591                              <1> 			%if (%%__off != %%__tmp)
  2592                              <1> 				;// for fastcalls that retpopsargs we need to account
  2593                              <1> 				;// for the extra space when stack restored later on
  2594                              <1> 				%assign %$__align __NASMX_ABI_BITS__ / 8
  2595                              <1> 				%assign %$__nx_invoke_callstack_adjust %%__off
  2596                              <1> 			%else
  2597                              <1> 				%assign %$__align 0
  2598                              <1> 			%endif
  2599                              <1> 			sub __SP, %$__nx_invoke_callstack_adjust
  2600                              <1> 		%endif
  2601                              <1> 
  2602                              <1> 		%if %$__reg_ax_saved != 0
  2603                              <1> 			mov size_t [__SP - __NASMX_ABI_BITS__ / 8], __AX
  2604                              <1> 		%endif
  2605                              <1> 
  2606                              <1> 		%assign %$__param_type_ctr 2    ; arg types follow cconv,bytecount
  2607                              <1> 		%assign %$args 0
  2608                              <1> 		%assign %%targ 1
  2609                              <1> 		%rep %%__repcnt
  2610                              <1> 			%rotate 1
  2611                              <1> 			%assign %%targ (%%targ + 1)
  2612                              <1> 
  2613                              <1> 			;// set up internal vars used to determine if argv address mode used
  2614                              <1> 			%assign %$__param_type_ctr %$__param_type_ctr + 1
  2615                              <1> 			nx_analyze_argv_mode %1, %$__param_type_ctr
  2616                              <1> 
  2617                              <1> 			%assign %%__argtostack 1  ;// assume we need to store on stack
  2618                              <1> 			%if %$__nx_argv_mode_param_isfloat == 0
  2619                              <1> 				%if %$__nx_intargs < __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__
  2620                              <1> 					%assign %%__argtostack 0
  2621                              <1> 					%substr %%__regstr __NASMX_DECLSPEC_FASTCALL_REGINTARGS_%[%$__nx_argv_mode_castsize]__ (%$__nx_intargs * 3 + 1), 3
  2622                              <1> 					%deftok %$arg_cur %%__regstr
  2623                              <1> 					%undef %%__regstr
  2624                              <1> 					%ifnum %1
  2625                              <1> 						%if %1 == -1
  2626                              <1> 							or %$arg_cur, %1
  2627                              <1> 						%elif %1 == 0
  2628                              <1> 							xor %$arg_cur, %$arg_cur
  2629                              <1> 						%else
  2630                              <1> 							mov %$arg_cur, %1
  2631                              <1> 						%endif
  2632                              <1> 					%elifstr %1
  2633                              <1> 						jmp %%endstr_%$args
  2634                              <1> 						%%str_%$args: declare(NASMX_TCHAR) NASMX_TEXT(%1), 0
  2635                              <1> 						%%endstr_%$args:
  2636                              <1> 						lea %$arg_cur,[rel %%str_%$args]
  2637                              <1> 					%else
  2638                              <1> 						%if %$__nx_argv_mode_indirect > 0
  2639                              <1> 							mov  %$arg_cur, %1
  2640                              <1> 						%elif %$__nx_argv_mode_bp > 0
  2641                              <1> 							mov  %$arg_cur, __BP
  2642                              <1> 							%if %$__nx_argv_mode_sign == __NX_ARGV_MODE_SIGN_ADD__
  2643                              <1> 								add %$arg_cur, %$__nx_argv_mode_bp_offset
  2644                              <1> 							%elif %$__nx_argv_mode_sign == __NX_ARGV_MODE_SIGN_SUB__
  2645                              <1> 								sub %$arg_cur, %$__nx_argv_mode_bp_offset
  2646                              <1> 							%else
  2647                              <1> 								%fatal Unknown addressing mode for %{1}
  2648                              <1> 							%endif
  2649                              <1> 						%elifnidni %$arg_cur, %1
  2650                              <1> 							;// if register parameter then guard against
  2651                              <1> 							;// invalid register to register moves
  2652                              <1> 							%ifdef __nx_reg_%[%1]
  2653                              <1> 								%if %[%1]_size != __NASMX_ABI_BITS__ / 8
  2654                              <1> 									%fatal %1 cannot be used as parameter for __NASMX_ABI_BITS__ bit mode
  2655                              <1> 								%endif
  2656                              <1> 							%endif
  2657                              <1> 							mov  %$arg_cur, %1
  2658                              <1> 						%endif
  2659                              <1> 					%endif
  2660                              <1> 					%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  2661                              <1> 						;// Windows fastcall uses one index for param count which
  2662                              <1> 						;// indexes either int or float for purpose of preloading regs
  2663                              <1> 						%assign %$__nx_floatargs 1 + %$__nx_floatargs
  2664                              <1> 
  2665                              <1> 						;// Only spill registers if user specifies
  2666                              <1> 						%ifdef ENABLE_INVOKE_FASTCALL_STACK_PRELOAD
  2667                              <1> 							mov [__SP + %$args], %$arg_cur
  2668                              <1> 						%endif
  2669                              <1> 
  2670                              <1> 						;// Unlike Linux/BSD x64 all current 32-bit and 64-bit versions
  2671                              <1> 						;// of Windows increase arg stack offset.
  2672                              <1> 						%assign %$args %$args + sizeof(size_t)
  2673                              <1> 					%else
  2674                              <1> 						;// increase arg stack offset only for 32-bit non-Windows systems.
  2675                              <1> 						%if __NASMX_ABI_BITS__ < 64
  2676                              <1> 							%assign %$args %$args + sizeof(size_t)
  2677                              <1> 						%endif
  2678                              <1> 					%endif
  2679                              <1> 					%assign %$__nx_intargs 1 + %$__nx_intargs
  2680                              <1> 					%undef %$arg_cur
  2681                              <1> 				%endif
  2682                              <1> 			%elif %$__nx_floatargs < __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__
  2683                              <1> 				%assign %%__argtostack 0
  2684                              <1> 				%if __NASMX_ABI_BITS__ > 32
  2685                              <1> 					%substr %%__regstr __NASMX_DECLSPEC_FASTCALL_REGFLOATARGS_8__ (%$__nx_floatargs * 4 + 1), 4
  2686                              <1> 					%deftok %$arg_cur %%__regstr
  2687                              <1> 					%undef %%__regstr
  2688                              <1> 
  2689                              <1> 					%ifnum %1
  2690                              <1> 						mov __AX, %1
  2691                              <1> 						mov size_t [__SP - __NASMX_ABI_BITS__ / 4 ], __AX
  2692                              <1> 						movsd %$arg_cur, size_t [__SP - __NASMX_ABI_BITS__ / 4 ]
  2693                              <1> 						%if %$__reg_ax_saved != 0
  2694                              <1> 							mov __AX, size_t [__SP - __NASMX_ABI_BITS__ / 8]
  2695                              <1> 						%endif
  2696                              <1> 					%elif %$__nx_argv_mode_indirect > 0
  2697                              <1> 						nx_strtok %1, ' '
  2698                              <1> 						%ifdef %[%$__nx_token]_size
  2699                              <1> 							nx_strtok 0, ';'
  2700                              <1> 							movsd %$arg_cur, %$__nx_token
  2701                              <1> 						%else
  2702                              <1> 							movsd %$arg_cur, %1
  2703                              <1> 						%endif
  2704                              <1> 					%elif %$__nx_argv_mode_bp > 0
  2705                              <1> 						nx_strtok %1, ' '
  2706                              <1> 						%ifdef __nx_reg_%[%$__nx_token]
  2707                              <1> 							movsd %$arg_cur, [%1]
  2708                              <1> 						%elifdef %[%$__nx_token]_size
  2709                              <1> 							nx_strtok 0, ';'
  2710                              <1> 							movsd %$arg_cur, [ %[%$__nx_token] ]
  2711                              <1> 						%else
  2712                              <1> 							movsd %$arg_cur, [%1]
  2713                              <1> 						%endif
  2714                              <1> 					%else
  2715                              <1> 						nx_strtok %1, ' '
  2716                              <1> 						%ifdef __nx_reg_%[%$__nx_token]
  2717                              <1> 							mov size_t [__SP - __NASMX_ABI_BITS__ / 4 ], %1
  2718                              <1> 							movsd %$arg_cur, size_t [__SP - __NASMX_ABI_BITS__ / 4 ]
  2719                              <1> 						%elif %$__nx_argv_mode_fp_isnum != 0
  2720                              <1> 							mov __AX, %1
  2721                              <1> 							mov size_t [__SP - __NASMX_ABI_BITS__ / 4 ], __AX
  2722                              <1> 							movsd %$arg_cur, size_t [__SP - __NASMX_ABI_BITS__ / 4 ]
  2723                              <1> 							%if %$__reg_ax_saved != 0
  2724                              <1> 								mov __AX, size_t [__SP - __NASMX_ABI_BITS__ / 8]
  2725                              <1> 							%endif
  2726                              <1> 						%else
  2727                              <1> 							nx_strstr __NASMX_DECLSPEC_FASTCALL_REGFLOATARGS_8__,%1
  2728                              <1> 							%if %$__nx_strstr_pos != 0
  2729                              <1> 								%ifnidni %$arg_cur,%1
  2730                              <1> 									movq %$arg_cur,%1
  2731                              <1> 								%endif
  2732                              <1> 							%else
  2733                              <1> 								movsd %$arg_cur, %1
  2734                              <1> 							%endif
  2735                              <1> 						%endif
  2736                              <1> 					%endif
  2737                              <1> 
  2738                              <1> 					%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  2739                              <1> 						;// Only spill Win64 float register if user specifies
  2740                              <1> 						%ifdef ENABLE_INVOKE_FASTCALL_STACK_PRELOAD
  2741                              <1> 							movsd [__SP + %$args], %$arg_cur
  2742                              <1> 						%endif
  2743                              <1> 
  2744                              <1> 						;// Unlike Linux/BSD x64 all current 32-bit and 64-bit versions
  2745                              <1> 						;// of Windows increase arg stack offset.
  2746                              <1> 						%assign %$args %$args + sizeof(size_t)
  2747                              <1> 					%endif
  2748                              <1> 				%else
  2749                              <1> 					;// 32-bit fastcall float param
  2750                              <1> 					%if %$__nx_argv_mode_param_size > 4
  2751                              <1> 						;// assert: callee expecting double type which
  2752                              <1> 						;// is always maintained on the stack
  2753                              <1> 						%if %$__nx_argv_mode_fp_isnum != 0
  2754                              <1> 							%assign %%__tmp (%$__nx_argv_mode_fp_num & 0x00000000FFFFFFFF)
  2755                              <1> 							mov dword [__SP + %$args], %%__tmp
  2756                              <1> 							%assign %%__tmp ((%$__nx_argv_mode_fp_num >> 32) & 0x00000000FFFFFFFF)
  2757                              <1> 							mov dword [__SP+%$args+4], %%__tmp
  2758                              <1> 						%else
  2759                              <1> 							fld %1
  2760                              <1> 							fstp qword [esp]
  2761                              <1> 						%endif
  2762                              <1> 						%assign %$args %$args + 8
  2763                              <1> 					%else
  2764                              <1> 						%assign %%__reg_eax_used 0
  2765                              <1> 						%if   %$args == 0
  2766                              <1> 							%xdefine %$arg_cur ecx
  2767                              <1> 						%elif %$args == 4
  2768                              <1> 							%xdefine %$arg_cur edx
  2769                              <1> 						%else
  2770                              <1> 							%xdefine %$arg_cur eax
  2771                              <1> 							%assign %%__reg_eax_used 1
  2772                              <1> 						%endif
  2773                              <1> 						%if %$__nx_argv_mode_fp_isnum != 0
  2774                              <1> 							mov %$arg_cur, %$__nx_argv_mode_fp_num
  2775                              <1> 						%else
  2776                              <1> 							mov %$arg_cur, %1
  2777                              <1> 						%endif
  2778                              <1> 						mov [__SP + %$args], %$arg_cur
  2779                              <1> 						%if %%__reg_eax_used != 0
  2780                              <1> 							%if %$__reg_ax_saved != 0
  2781                              <1> 								mov eax, dword [esp - 4]
  2782                              <1> 							%endif
  2783                              <1> 						%endif
  2784                              <1> 						%assign %$args %$args + 4
  2785                              <1> 					%endif
  2786                              <1> 				%endif
  2787                              <1> 				%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  2788                              <1> 					;// Windows fastcall uses one index for either
  2789                              <1> 					;// int or float params for purpose of preloading regs
  2790                              <1> 					%assign %$__nx_intargs 1 + %$__nx_intargs
  2791                              <1> 				%endif
  2792                              <1> 				%assign %$__nx_floatargs 1 + %$__nx_floatargs
  2793                              <1> 				%undef %$arg_cur
  2794                              <1> 			%endif
  2795                              <1> 			%if %%__argtostack != 0
  2796                              <1> 				;// assert: no available registers
  2797                              <1> 				%if %$__nx_argv_mode_param_isfloat == 0
  2798                              <1> 					%ifnum %1
  2799                              <1> 						%if __NASMX_ABI_BITS__ > 32
  2800                              <1> 							mov __AX, %{1}
  2801                              <1> 							mov size_t [__SP + %$args], __AX
  2802                              <1> 							%if %$__reg_ax_saved != 0
  2803                              <1> 								mov __AX, size_t [__SP - __NASMX_ABI_BITS__ / 8]
  2804                              <1> 							%endif
  2805                              <1> 						%else
  2806                              <1> 							mov size_t [__SP + %$args], %{1}
  2807                              <1> 						%endif
  2808                              <1> 					%elifstr %1
  2809                              <1> 						jmp %%endstr_%$args
  2810                              <1> 						%%str_%$args: declare(NASMX_TCHAR) NASMX_TEXT(%1), 0
  2811                              <1> 						%%endstr_%$args:
  2812                              <1> 						lea __AX,[rel %%str_%$args]
  2813                              <1> 						mov [__SP + %$args], __AX
  2814                              <1> 						%if %$__reg_ax_saved != 0
  2815                              <1> 							mov __AX, size_t [__SP - __NASMX_ABI_BITS__ / 8]
  2816                              <1> 						%endif
  2817                              <1> 					%else
  2818                              <1> 						%if %$__nx_argv_mode_indirect > 0
  2819                              <1> 							%if %$__nx_argv_mode_castsize < 4
  2820                              <1> 								%xdefine %$arg_cur AX
  2821                              <1> 							%elif %$__nx_argv_mode_castsize < 8
  2822                              <1> 								%xdefine %$arg_cur EAX
  2823                              <1> 							%else
  2824                              <1> 								%xdefine %$arg_cur RAX
  2825                              <1> 							%endif
  2826                              <1> 							mov %$arg_cur, %{1}
  2827                              <1> 							mov [__SP + %$args], __AX
  2828                              <1> 							%undef %$arg_cur
  2829                              <1> 							%if %$__reg_ax_saved != 0
  2830                              <1> 								mov __AX, size_t [__SP - __NASMX_ABI_BITS__ / 8]
  2831                              <1> 							%endif
  2832                              <1> 						%elif %$__nx_argv_mode_bp > 0
  2833                              <1> 							mov  __AX, __BP
  2834                              <1> 							%if %$__nx_argv_mode_sign == __NX_ARGV_MODE_SIGN_ADD__
  2835                              <1> 								add __AX, %$__nx_argv_mode_bp_offset
  2836                              <1> 							%elif %$__nx_argv_mode_sign == __NX_ARGV_MODE_SIGN_SUB__
  2837                              <1> 								sub __AX, %$__nx_argv_mode_bp_offset
  2838                              <1> 							%else
  2839                              <1> 								%fatal Unknown addressing mode for %{1}
  2840                              <1> 							%endif
  2841                              <1> 							mov [__SP + %$args], __AX
  2842                              <1> 							%if %$__reg_ax_saved != 0
  2843                              <1> 								mov __AX, size_t [__SP - __NASMX_ABI_BITS__ / 8]
  2844                              <1> 							%endif
  2845                              <1> 						%else
  2846                              <1> 							mov size_t [__SP + %$args], %{1}
  2847                              <1> 						%endif
  2848                              <1> 					%endif
  2849                              <1> 				%else
  2850                              <1> 					;// assert: processing float param
  2851                              <1> 					%if %$__nx_argv_mode_indirect > 0
  2852                              <1> 						%if %$__nx_argv_mode_castsize > %$__nx_argv_mode_param_size
  2853                              <1> 							%warning potential loss of precision during conversion of double to float for %[%1]
  2854                              <1> 						%endif
  2855                              <1> 						fld __nx_error_token_size_%[%$__nx_argv_mode_castsize] %1
  2856                              <1> 						fstp __nx_error_token_size_%[%$__nx_argv_mode_param_size] [__SP + %$args]
  2857                              <1> 					%elif %$__nx_argv_mode_bp > 0
  2858                              <1> 						fld __nx_error_token_size_%[%$__nx_argv_mode_param_size] [%1]
  2859                              <1> 						fstp __nx_error_token_size_%[%$__nx_argv_mode_param_size] [__SP + %$args]
  2860                              <1> 					%else
  2861                              <1> 						%if %$__nx_argv_mode_fp_isnum != 0
  2862                              <1> 							;// assert: arg is floating point constant
  2863                              <1> 							%if %$__nx_argv_mode_param_size == 4
  2864                              <1> 								;// assert: callee expecting float type
  2865                              <1> 								mov  eax, %$__nx_argv_mode_fp_num
  2866                              <1> 								mov  size_t [__SP + %$args], __AX
  2867                              <1> 							%else
  2868                              <1> 								;// assert: callee expecting double type
  2869                              <1> 								%if __NASMX_ABI_BITS__ > 32
  2870                              <1> 									mov  __AX, %1
  2871                              <1> 									mov  qword [__SP + %$args], __AX
  2872                              <1> 									%if %$__reg_ax_saved != 0
  2873                              <1> 										mov __AX, size_t [__SP - __NASMX_ABI_BITS__ / 8]
  2874                              <1> 									%endif
  2875                              <1> 								%else
  2876                              <1> 									%assign %%__tmp (%$__nx_argv_mode_fp_num & 0x00000000FFFFFFFF)
  2877                              <1> 									mov dword [__SP + %$args], %%__tmp
  2878                              <1> 									%assign %%__tmp ((%$__nx_argv_mode_fp_num >> 32) & 0x00000000FFFFFFFF)
  2879                              <1> 									mov dword [__SP+%$args+4], %%__tmp
  2880                              <1> 								%endif
  2881                              <1> 							%endif
  2882                              <1> 						%else
  2883                              <1> 							mov __nx_error_token_size_%[%$__nx_argv_mode_param_size] [__SP + %$args], %1
  2884                              <1> 						%endif
  2885                              <1> 					%endif
  2886                              <1> 				%endif
  2887                              <1> 				%if __NASMX_ABI_BITS__ > 32
  2888                              <1> 					;// assert: we must increase stack offset by size_t regardless
  2889                              <1> 					;// of whether we're storing a float or a double
  2890                              <1> 					%assign %$args %$args + sizeof(size_t)
  2891                              <1> 				%else
  2892                              <1> 					%if %$__nx_argv_mode_param_size <= sizeof(size_t)
  2893                              <1> 						%assign %$args %$args + sizeof(size_t)
  2894                              <1> 					%else
  2895                              <1> 						%assign %$args %$args + %$__nx_argv_mode_param_size
  2896                              <1> 					%endif
  2897                              <1> 				%endif
  2898                              <1> 			%endif
  2899                              <1> 		%endrep
  2900                              <1> 		;// stack is set up, call the proc
  2901                              <1> 		call	%$__nx_proc
  2902                              <1> 		%if %$__nx_bytecount > 0
  2903                              <1> 			%if %$__nx_callstack_adjust == 0
  2904                              <1> 				%if %$__nx_retpopsargs == 0
  2905                              <1> 					%if %$__nx_invoke_callstack_adjust > 0
  2906                              <1> 						add	__SP, %$__nx_invoke_callstack_adjust
  2907                              <1> 					%endif
  2908                              <1> 				%elif %$__align > 0
  2909                              <1> 					add	__SP, %$__align
  2910                              <1> 				%endif
  2911                              <1> 			%endif
  2912                              <1> 		%endif
  2913                              <1> 	%else
  2914                              <1> 		;// arg types follow cconv,bytecount when defined
  2915                              <1> 		%if %$__nx_argrotate > 0
  2916                              <1> 			%assign %$__param_type_ctr 2    
  2917                              <1> 		%else
  2918                              <1> 			%assign %$__param_type_ctr %0+2
  2919                              <1> 		%endif
  2920                              <1> 
  2921                              <1> 		%rep %%__repcnt
  2922                              <1> 			%rotate %$__nx_argrotate
  2923                              <1> 
  2924                              <1> 			;// set up internal vars used to determine if argv address mode used
  2925                              <1> 			%assign %$__param_type_ctr %$__param_type_ctr + %$__nx_argrotate
  2926                              <1> 			nx_analyze_argv_mode %{1}, %$__param_type_ctr
  2927                              <1> 
  2928                              <1> 			%if %$__nx_argv_mode_param_isfloat == 0
  2929                              <1> 				%ifstr	%1
  2930                              <1> 					jmp	%%endstr_%$args
  2931                              <1> 					%%str_%$args: declare(NASMX_TCHAR) NASMX_TEXT(%{1}), 0
  2932                              <1> 					%%endstr_%$args:
  2933                              <1> 					push size_t %%str_%$args
  2934                              <1> 				%elifnum %1
  2935                              <1> 					push size_t %1
  2936                              <1> 				%elif %$__nx_argv_mode_indirect > 0
  2937                              <1> 					push size_t %1
  2938                              <1> 				%elif %$__nx_argv_mode_bp > 0
  2939                              <1> 					%if %$__reg_ax_saved != 0
  2940                              <1> 						mov size_t [__SP - __NASMX_ABI_BITS__ / 8 * 2], __AX
  2941                              <1> 					%endif
  2942                              <1> 					mov  __AX, __BP
  2943                              <1> 					%if %$__nx_argv_mode_sign == __NX_ARGV_MODE_SIGN_ADD__
  2944                              <1> 						add __AX, %$__nx_argv_mode_bp_offset
  2945                              <1> 					%elif %$__nx_argv_mode_sign == __NX_ARGV_MODE_SIGN_SUB__
  2946                              <1> 						sub __AX, %$__nx_argv_mode_bp_offset
  2947                              <1> 					%else
  2948                              <1> 						%fatal Unknown addressing mode for %{1}
  2949                              <1> 					%endif
  2950                              <1> 					push __AX
  2951                              <1> 					%if %$__reg_ax_saved != 0
  2952                              <1> 						mov __AX, size_t [__SP - __NASMX_ABI_BITS__ / 8]
  2953                              <1> 					%endif
  2954                              <1> 				%else
  2955                              <1> 					push size_t %1
  2956                              <1> 				%endif
  2957                              <1> 				%assign %$args %$args + __BITS__ / 8
  2958                              <1> 			%else
  2959                              <1> 				;// process float param
  2960                              <1> 				%if %$__nx_argv_mode_param_size < sizeof(size_t)
  2961                              <1> 					;// if passing a float in 64-bit mode
  2962                              <1> 					sub __SP, sizeof(size_t)
  2963                              <1> 					%assign %$args %$args + sizeof(size_t)
  2964                              <1> 				%else
  2965                              <1> 					;// may be passing double in 32-bit mode
  2966                              <1> 					sub  __SP, %$__nx_argv_mode_param_size
  2967                              <1> 					%assign %$args %$args + %$__nx_argv_mode_param_size
  2968                              <1> 				%endif
  2969                              <1> 				%if %$__nx_argv_mode_indirect > 0
  2970                              <1> 					%if %$__nx_argv_mode_castsize > %$__nx_argv_mode_param_size
  2971                              <1> 						%warning potential loss of precision during conversion of double to float for %[%1]
  2972                              <1> 					%endif
  2973                              <1> 					fld __nx_error_token_size_%[%$__nx_argv_mode_castsize] %1
  2974                              <1> 					fstp __nx_error_token_size_%[%$__nx_argv_mode_param_size] [__SP]
  2975                              <1> 				%elif %$__nx_argv_mode_bp > 0
  2976                              <1> 					fld __nx_error_token_size_%[%$__nx_argv_mode_param_size] [%1]
  2977                              <1> 					fstp __nx_error_token_size_%[%$__nx_argv_mode_param_size] [__SP]
  2978                              <1> 				%else
  2979                              <1> 					%if %$__nx_argv_mode_fp_isnum != 0
  2980                              <1> 						%if %$__nx_argv_mode_param_size == 4
  2981                              <1> 							;// assert: callee expecting float type
  2982                              <1> 							mov dword [__SP], %$__nx_argv_mode_fp_num
  2983                              <1> 						%else
  2984                              <1> 							;// assert: callee expecting double type
  2985                              <1> 							%assign %%__tmp (%$__nx_argv_mode_fp_num & 0x00000000FFFFFFFF)
  2986                              <1> 							mov dword [__SP], %%__tmp
  2987                              <1> 							%assign %%__tmp ((%$__nx_argv_mode_fp_num >> 32) & 0x00000000FFFFFFFF)
  2988                              <1> 							mov dword [__SP+4], %%__tmp
  2989                              <1> 						%endif
  2990                              <1> 					%else
  2991                              <1> 						mov [__SP], %1
  2992                              <1> 					%endif
  2993                              <1> 				%endif
  2994                              <1> 			%endif
  2995                              <1> 		%endrep
  2996                              <1> 		call %$__nx_proc
  2997                              <1> 		%if %$args > 0
  2998                              <1> 			%if %$__nx_retpopsargs == 0
  2999                              <1> 				add	__SP, %$args
  3000                              <1> 			%endif
  3001                              <1> 		%endif
  3002                              <1> 	%endif
  3003                              <1> 
  3004                              <1> 	;// cleanup global arg token defs
  3005                              <1> 	%assign %%__ctr 1
  3006                              <1> 	%rep 16
  3007                              <1> 		%ifdef __nx_token_%[%%__ctr]
  3008                              <1> 			%undef __nx_token_%[%%__ctr]
  3009                              <1> 		%endif
  3010                              <1> 		%assign %%__ctr %%__ctr + 1
  3011                              <1> 	%endrep
  3012                              <1> 
  3013                              <1> 	;// restore context stack
  3014                              <1> 	%pop
  3015                              <1> %endmacro
  3016                              <1> 
  3017                              <1> 
  3018                              <1> ;//////////////////////////////////////////////////////////////
  3019                              <1> ;// MACRO PROC
  3020                              <1> ;//
  3021                              <1> ;// usage:
  3022                              <1> ;//    PROC [CALLCONV,] funcname [ arg, arg, ...]
  3023                              <1> ;//
  3024                              <1> ;// examples:
  3025                              <1> ;//    Using default calling convention:
  3026                              <1> ;//       proc funcname, arg1, arg2
  3027                              <1> ;//    Specifying calling convention:
  3028                              <1> ;//       proc cdecl, fprintf
  3029                              <1> ;//
  3030                              <1> ;// notes:
  3031                              <1> ;//   The calling convention, if specified, must match either
  3032                              <1> ;//   the prototype or import specification.
  3033                              <1> ;//   Also remember that, when invoked during a fastcall, the
  3034                              <1> ;//   register parameters are not automatically spilled, only
  3035                              <1> ;//   the space assigned on the stack is allocated.
  3036                              <1> ;//   This allows the user to determine whether or not to use
  3037                              <1> ;//   the spill area if needed.
  3038                              <1> ;//
  3039                              <1> %imacro PROC 1-100.nolist
  3040                              <1> 	%ifdef NASMX_ENDPROC
  3041                              <1> 		%fatal 'missing endproc directive.'
  3042                              <1> 	%endif
  3043                              <1> 	%push __NX_CTX_PROC__
  3044                              <1> 	%assign %$__nx_locnt 0             ;// init locals offset
  3045                              <1> 	%assign %$__nx_intargs 0           ;// init int args counter
  3046                              <1> 	%assign %$__nx_floatargs 0         ;// init float args counter
  3047                              <1> 	%assign %$__nx_bytecount 0         ;// init total args byte count
  3048                              <1> 	%assign %$__nx_protobytecount -1   ;// >= 0 if defined
  3049                              <1> 	%ifndef __NASMX_DECLSPEC_CALLCONV_%[%1]__
  3050                              <1> 		;// check for prototyped func
  3051                              <1> 		%ifdef __nxsig@@%[%1]
  3052                              <1> 			nx_parse_tokens __nxsig@@%[%1]
  3053                              <1> 			%assign %$__nx_callconv __nx_token_1
  3054                              <1> 			%assign %$__nx_protobytecount __nx_token_2
  3055                              <1> 		%else
  3056                              <1> 			%assign %$__nx_callconv __NASMX_DECLSPEC_CALLCONV_DEFAULT__
  3057                              <1> 		%endif
  3058                              <1> 		%define %$__nx_proc %1
  3059                              <1> 		%assign %$__nx_repcnt %0 - 1
  3060                              <1> 	%else
  3061                              <1> 		%if %0 < 2
  3062                              <1> 			%fatal 'usage: PROC [CALLCONV, ] FUNCNAME [,ARG1,ARG2,...]'
  3063                              <1> 		%endif
  3064                              <1> 		%assign %$__nx_callconv __NASMX_DECLSPEC_CALLCONV_%[%1]__
  3065                              <1> 		%define %$__nx_proc %2
  3066                              <1> 		%assign %$__nx_repcnt %0-2
  3067                              <1> 		;// check for prototyped func
  3068                              <1> 		%ifdef __nxsig@@%[%2]
  3069                              <1> 			nx_parse_tokens __nxsig@@%[%2]
  3070                              <1> 			%if %$__nx_callconv != __nx_token_1
  3071                              <1> 				%fatal calling convention mismatch for %$__nx_proc
  3072                              <1> 			%endif
  3073                              <1> 			%assign %$__nx_protobytecount __nx_token_2
  3074                              <1> 		%endif
  3075                              <1> 	%endif
  3076                              <1> 
  3077                              <1> 	;// init proc args counter and get callconv enum
  3078                              <1> 	%assign %$__nx_argv_count %$__nx_repcnt
  3079                              <1> 	%assign %$__nx_cc_enum nx_declspec_cc_enum(%[%$__nx_callconv])
  3080                              <1> 	
  3081                              <1> 	;// v1.0rc2 - we must always calculate a true bytecount such that
  3082                              <1> 	;// the implementation of main(), or imported functions that are
  3083                              <1> 	;// defined with a 0 bytecount, are defined properly
  3084                              <1> 	%ifdef __nx_proto_param_list
  3085                              <1> 		%undef __nx_proto_param_list
  3086                              <1> 	%endif
  3087                              <1> 	%rep %0-%$__nx_repcnt
  3088                              <1> 		%rotate 1
  3089                              <1> 	%endrep
  3090                              <1> 	;// The signature must be defined in full before use because once the
  3091                              <1> 	;// procedure has been defined we are not able to easily redefine it.
  3092                              <1> 	;// Due to dependency on the X64_SPILL_OFFSET we cannot simply use one
  3093                              <1> 	;// rep loop to generate equate offsets
  3094                              <1> 	;// Thus the rep loop is required twice:
  3095                              <1> 	;//     First, to build the parameter type list and x64 spill area size
  3096                              <1> 	;//     Then, later on, to build the parameter offset equates.
  3097                              <1> 	%rep %$__nx_repcnt
  3098                              <1> 		nx_strtok %1, ' '
  3099                              <1> 		;// assert: calculate bytecount in this loop to account
  3100                              <1> 		;// for param types double/int128 rather than the simple logic of
  3101                              <1> 		;// %assign %$__nx_bytecount %$__nx_repcnt * sizeof(size_t)
  3102                              <1> 		;// Also build the parameter type list here in case the procedure
  3103                              <1> 		;// has not been prototyped or imported.
  3104                              <1> 		%xdefine __nx_proto_argtype %$__nx_token %+ __nx_type
  3105                              <1> 		%assign %%__param_type __nx_proto_argtype
  3106                              <1> 		%assign %%__param_size (%%__param_type & 0x7F)
  3107                              <1> 		%if %%__param_size < sizeof(size_t)
  3108                              <1> 			%assign %$__nx_bytecount %$__nx_bytecount + sizeof(size_t)
  3109                              <1> 		%elif %%__param_size <= __NASMX_ABI_BITS__ / 4
  3110                              <1> 			%assign %$__nx_bytecount %$__nx_bytecount + %%__param_size
  3111                              <1> 		%else
  3112                              <1> 			%error parameter exceeds allowable size: %1
  3113                              <1> 		%endif
  3114                              <1> 		%ifndef __nx_proto_param_list
  3115                              <1> 			%defstr __nx_proto_param_list __nx_proto_argtype
  3116                              <1> 		%else
  3117                              <1> 			%defstr __nx_proto_argstr __nx_proto_argtype
  3118                              <1> 			%strcat __nx_proto_param_list __nx_proto_param_list,',',__nx_proto_argstr
  3119                              <1> 			%undef __nx_proto_argstr
  3120                              <1> 		%endif
  3121                              <1> 		%undef __nx_proto_argtype
  3122                              <1> 
  3123                              <1> 		;// NASMX 1.4 - New behavior: auto-spill register args if not disabled
  3124                              <1> 		%if %$__nx_cc_enum == __NASMX_DECLSPEC_CC_ENUM_FASTCALL__
  3125                              <1> 			%ifndef DISABLE_PROC_FASTCALL_STACK_PRELOAD
  3126                              <1> 				%assign %$__reg_size __NASMX_ABI_BITS__ / 8
  3127                              <1> 				%assign %%__isfloat is_typeof_float(%[%$__nx_token])
  3128                              <1> 				%if %%__isfloat == 0
  3129                              <1> 					%if %$__nx_intargs < __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__
  3130                              <1> 						%substr %%__regstr __NASMX_DECLSPEC_FASTCALL_REGINTARGS_%[%$__reg_size]__ (%$__nx_intargs * 3 + 1), 3
  3131                              <1> 						%deftok %$arg_cur %%__regstr
  3132                              <1> 						__nx_stack_push NASMX_SPILL_REG_NAME, %[%$arg_cur]
  3133                              <1> 						__nx_stack_push NASMX_SPILL_REG_TYPE, %[%$__nx_token]
  3134                              <1> 						%undef %%__regstr
  3135                              <1> 					%endif
  3136                              <1> 					%assign %$__nx_intargs %$__nx_intargs + 1
  3137                              <1> 					%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  3138                              <1> 						;// Windows fastcall uses one index for either
  3139                              <1> 						;// int or float params for purpose of preloading regs
  3140                              <1> 						%assign %$__nx_floatargs %$__nx_floatargs + 1
  3141                              <1> 					%endif
  3142                              <1> 				%else
  3143                              <1> 					%if %$__nx_floatargs < __NASMX_DECLSPEC_FASTCALL_MAXFLOATREGS__
  3144                              <1> 						%substr %%__regstr __NASMX_DECLSPEC_FASTCALL_REGFLOATARGS_%[%$__reg_size]__ (%$__nx_floatargs * 4 + 1), 4
  3145                              <1> 						%deftok %$arg_cur %%__regstr
  3146                              <1> 						__nx_stack_push NASMX_SPILL_REG_NAME, %[%$arg_cur]
  3147                              <1> 						__nx_stack_push NASMX_SPILL_REG_TYPE, %[%$__nx_token]
  3148                              <1> 						%undef %%__regstr
  3149                              <1> 					%endif
  3150                              <1> 					%assign %$__nx_floatargs %$__nx_floatargs + 1
  3151                              <1> 					%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  3152                              <1> 						;// Windows fastcall uses one index for either
  3153                              <1> 						;// int or float params for purpose of preloading regs
  3154                              <1> 						%assign %$__nx_intargs 1 + %$__nx_intargs
  3155                              <1> 					%endif
  3156                              <1> 				%endif
  3157                              <1> 			%endif
  3158                              <1> 		%endif
  3159                              <1> 
  3160                              <1> 		%rotate 1
  3161                              <1> 	%endrep
  3162                              <1> 
  3163                              <1> 	%ifndef __nxsig@@%[%$__nx_proc]
  3164                              <1> 		;// assert: we must generate an appropriate label for the function call
  3165                              <1> 		;// here in order for the parameters to be equated properly
  3166                              <1> 		nx_callconv_decorate %$__nx_callconv,%$__nx_proc,%$__nx_bytecount
  3167                              <1> 		%ifdef __nx_proto_param_list
  3168                              <1> 			%deftok __nx_proto_params __nx_proto_param_list
  3169                              <1> 			%xdefine __nxsig@@%[%$__nxtok_decorated_name] %[%$__nx_callconv],%[%$__nx_bytecount],__nx_proto_params
  3170                              <1> 		%else
  3171                              <1> 			%xdefine __nxsig@@%[%$__nxtok_decorated_name] %[%$__nx_callconv],%[%$__nx_bytecount]
  3172                              <1> 		%endif
  3173                              <1> 		%ifnidn %$__nx_proc,%$__nxtok_decorated_name
  3174                              <1> 			%xdefine %[%$__nx_proc] %[%$__nxtok_decorated_name]
  3175                              <1> 		%endif
  3176                              <1> 	%endif
  3177                              <1> 
  3178                              <1> 	%ifdef __nxsig_defined_%[%$__nx_proc]
  3179                              <1> 		%fatal procedure %[%$__nx_proc] already defined
  3180                              <1> 	%else
  3181                              <1> 		%xdefine __nxsig_defined_%[%$__nx_proc]
  3182                              <1> 	%endif
  3183                              <1> 
  3184                              <1> 	;// emit the procedure entry point
  3185                              <1> 	%[%$__nx_proc]:
  3186                              <1> 
  3187                              <1> 	;// The following define can/should be used by the user to properly
  3188                              <1> 	;// return from a function ( ie: jmp NASMX_ENDPROC ) or via use of
  3189                              <1> 	;// the RETURN macro
  3190                              <1> 	%xdefine NASMX_ENDPROC __nx_endproc@@%[%$__nx_proc]
  3191                              <1> 
  3192                              <1> 	%if %$__nx_cc_enum != __NASMX_DECLSPEC_CC_ENUM_NAKED__
  3193                              <1> 		%assign %$__nx_intargs 0
  3194                              <1> 		%assign %$__nx_floatargs 0
  3195                              <1> 		%assign %$__nx_argv __NASMX_ABI_BITS__ / 4
  3196                              <1> 
  3197                              <1> 		;// assert: calc byte count for sig check and argv() offsets
  3198                              <1> 		;// we must reverse arg push logic to get correct results
  3199                              <1> 		%assign %$__nx_bytecount 0
  3200                              <1> 		%assign %$__cc_argrotate nx_declspec_cc_argrotate(%[%$__nx_callconv])
  3201                              <1> 		%if %$__cc_argrotate != 0
  3202                              <1> 			%assign %$__nx_argrotate -1
  3203                              <1> 			%rotate -1
  3204                              <1> 		%else
  3205                              <1> 			%assign %$__nx_argrotate 1
  3206                              <1> 			%rep %0-%$__nx_repcnt
  3207                              <1> 				%rotate 1
  3208                              <1> 			%endrep
  3209                              <1> 		%endif
  3210                              <1> 
  3211                              <1> 		%rep %$__nx_repcnt
  3212                              <1> 			;// obtain param type and size and validate against current ABI
  3213                              <1> 			nx_strtok %1, ' '
  3214                              <1> 			%assign %%__isfloat is_typeof_float(%[%$__nx_token])
  3215                              <1> 			%assign %%__param_size sizeof(%[%$__nx_token]) ; _size
  3216                              <1> 			nx_strtok 0, ' '
  3217                              <1> 			;// only allow exceeding of size_t for type double
  3218                              <1> 			;// in 32-bit mode and 128-bit params in 64-bit mode
  3219                              <1> 			%if %%__param_size > (sizeof(size_t) * 2)
  3220                              <1> 			    %fatal %[%$__nx_token] invalid parameter size: %%__param_size
  3221                              <1> 			%endif
  3222                              <1> 			%if %%__param_size < sizeof(size_t)
  3223                              <1> 				%assign %%__param_size sizeof(size_t)
  3224                              <1> 			%endif
  3225                              <1> 			%assign %$__nx_bytecount %$__nx_bytecount + %%__param_size
  3226                              <1> 
  3227                              <1> 			%if __NASMX_ABI_BITS__ > 32
  3228                              <1> 				%if %$__nx_cc_enum == __NASMX_DECLSPEC_CC_ENUM_FASTCALL__
  3229                              <1> 					%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  3230                              <1> 						;// assert: Windows 64-bit register spill area
  3231                              <1> 						;// located above return address, thus bias
  3232                              <1> 						;// not affected
  3233                              <1> 						%assign %$__nx_intargs 1 + %$__nx_intargs
  3234                              <1> 						%if %%__isfloat == 0
  3235                              <1> 							%if %%__param_size > sizeof(size_t)
  3236                              <1> 								%if %$__nx_intargs == __NASMX_DECLSPEC_FASTCALL_MAXINTREGS__
  3237                              <1> 									%error in procedure %$__nx_proc %$__nx_token exceeds available registers
  3238                              <1> 								%endif
  3239                              <1> 							%endif
  3240                              <1> 						%endif
  3241                              <1> 						.%[%$__nx_token] EQU %[%$__nx_argv]
  3242                              <1> 						%assign %$__nx_argv %%__param_size + %$__nx_argv
  3243                              <1> 					%else
  3244                              <1> 						;// assert: Linux 64-bit register spill area located
  3245                              <1> 						;// below frame pointer, defer equating until later.
  3246                              <1> 						__nx_stack_push PROLOGUE_X64_PARAM_NAME, %[%$__nx_token]
  3247                              <1> 					%endif
  3248                              <1> 				%else
  3249                              <1> 					.%[%$__nx_token] EQU %[%$__nx_argv]
  3250                              <1> 					%assign %$__nx_argv %$__nx_argv + %%__param_size
  3251                              <1> 				%endif
  3252                              <1> 			%else
  3253                              <1> 				.%[%$__nx_token] EQU %[%$__nx_argv]
  3254                              <1> 				%assign %$__nx_argv %$__nx_argv + %%__param_size
  3255                              <1> 			%endif
  3256                              <1> 			%rotate %$__nx_argrotate
  3257                              <1> 		%endrep
  3258                              <1> 
  3259                              <1> 		%if %$__nx_protobytecount > 0
  3260                              <1> 			;// assert: we can only validate against prototypes that
  3261                              <1> 			;// have a byte count since vararg functions can only be
  3262                              <1> 			;// defined with zero (0) bytecount
  3263                              <1> 			%if %$__nx_bytecount != %$__nx_protobytecount
  3264                              <1> 				;// In the program entry main procedure the user may, or may not,
  3265                              <1> 				;// be using command line or environment params.
  3266                              <1> 				%ifnidni %$__nx_proc, main
  3267                              <1> 					;// unfortunately we must check callconv for cdecl on win32
  3268                              <1> 					;// and fastcall on win64 as currently the import files do
  3269                              <1> 					;// not contain bytecounts to verify against.
  3270                              <1> 					;// TODO: When import files are updated in the future we can
  3271                              <1> 					;// revisit this code.
  3272                              <1> 					%ifidni __OUTPUT_FORMAT__,win32
  3273                              <1> 						%if %$__nx_cc_enum != __NASMX_DECLSPEC_CC_ENUM_CDECL__
  3274                              <1> 							%warning prototype arg mismatch for %$__nx_proc
  3275                              <1> 						%endif
  3276                              <1> 					%elifidni __OUTPUT_FORMAT__,win64
  3277                              <1> 						%if %$__nx_cc_enum != __NASMX_DECLSPEC_CC_ENUM_FASTCALL__
  3278                              <1> 							%warning prototype arg mismatch for %$__nx_proc
  3279                              <1> 						%endif
  3280                              <1> 					%else
  3281                              <1> 						%warning prototype arg mismatch for %$__nx_proc
  3282                              <1> 					%endif
  3283                              <1> 				%endif
  3284                              <1> 			%endif
  3285                              <1> 		%endif
  3286                              <1> 
  3287                              <1> 		%ifidni %$__nx_proc, main
  3288                              <1> 			;// assert: always push __BP to get an aligned stack
  3289                              <1> 			%define __NX_PROLOGUE_PRESENT__
  3290                              <1> 			push __BP
  3291                              <1> 			mov  __BP, __SP
  3292                              <1> 
  3293                              <1> 			;// assert: ensure we start out with an aligned stack
  3294                              <1> 			%assign %%__nx_align ((__NASMX_ABI_BITS__ / 4 ) - 1)
  3295                              <1> 			mov   __AX, __SP
  3296                              <1> 			and   __AX, %%__nx_align
  3297                              <1> 			jz    .nx_main_aligned
  3298                              <1> 			sub   __SP, (__NASMX_ABI_BITS__ / 4 )
  3299                              <1> 			%if __NASMX_ABI_BITS__ > 32
  3300                              <1> 				and spl,BYTE 0xF0
  3301                              <1> 			%else
  3302                              <1> 				and   __SP, -8
  3303                              <1> 			%endif
  3304                              <1> 			.nx_main_aligned:
  3305                              <1> 		%endif
  3306                              <1> 	%endif
  3307                              <1> %endmacro
  3308                              <1> 
  3309                              <1> 
  3310                              <1> ;//////////////////////////////////////////////////////////////
  3311                              <1> ;// MACRO USES
  3312                              <1> ;//
  3313                              <1> ;// usage:
  3314                              <1> ;//    USES reg [,reg ,reg, ...]
  3315                              <1> ;//
  3316                              <1> ;// examples:
  3317                              <1> ;//    USES rbx, r15
  3318                              <1> ;//
  3319                              <1> ;// notes:
  3320                              <1> ;//    This macro can only be used within the proc prologue
  3321                              <1> ;//    Fatals are used rather than errors as this macro is
  3322                              <1> ;//    extremely critical to proper function definition and
  3323                              <1> ;//    stack alignment if used.
  3324                              <1> ;//
  3325                              <1> %imacro USES 1-16.nolist
  3326                              <1> 	%ifndef NASMX_ENDPROC
  3327                              <1> 		%fatal 'missing proc directive.'
  3328                              <1> 	%endif
  3329                              <1> 	%ifnctx __NX_CTX_PROC__
  3330                              <1> 		%fatal 'current context unknown.'
  3331                              <1> 	%endif
  3332                              <1> 	%ifdef __NX_LOCALS_PRESENT__
  3333                              <1> 		%fatal 'uses directive must come before locals directive.'
  3334                              <1> 	%endif
  3335                              <1> 	%ifdef __NX_USES_PRESENT__
  3336                              <1> 		%fatal 'uses directive previously set for this procedure.'
  3337                              <1> 	%endif
  3338                              <1> 	%define __NX_USES_PRESENT__
  3339                              <1> 
  3340                              <1> 	%assign %%__sys_size __NASMX_ABI_BITS__
  3341                              <1> 	%assign %%__size __NASMX_ABI_BITS__ / 8
  3342                              <1> 	%assign %$__nx_uses_adjust %0 * %%__size
  3343                              <1> 	%rep %0
  3344                              <1> 		%ifndef %[%1]_size
  3345                              <1> 			%fatal unknown register: %1
  3346                              <1> 		%endif
  3347                              <1> 		%assign %%__reg_size %[%1]_size
  3348                              <1> 		%if %%__reg_size < %%__size
  3349                              <1> 			%fatal extended version of register %1 required for %%__sys_size bit mode
  3350                              <1> 		%elif %%__reg_size > %%__size
  3351                              <1> 			%fatal %1 not available in %%__sys_size bit mode
  3352                              <1> 		%endif
  3353                              <1> 		__nx_stack_push NASMX_USES_REGS, %[%1]
  3354                              <1> 		%rotate 1
  3355                              <1> 	%endrep
  3356                              <1> 
  3357                              <1> 	;// during endproc stack adjustment to include difference
  3358                              <1> 	;// between locnt and uses_adjust
  3359                              <1> 	%xdefine __NX_PROLOGUE_USES_ADJUST__ %[%$__nx_uses_adjust]
  3360                              <1> 
  3361                              <1> %endmacro
  3362                              <1> 
  3363                              <1> 
  3364                              <1> ;//////////////////////////////////////////////////////////////
  3365                              <1> ;// MACRO LOCALS
  3366                              <1> ;//
  3367                              <1> ;// usage:
  3368                              <1> ;//    locals [none]
  3369                              <1> ;// where
  3370                              <1> ;//    none - allows us to avoid using stackframe if user
  3371                              <1> ;//           writing a small leaf function or will handle
  3372                              <1> ;//           function prologue separately.  Also indicates
  3373                              <1> ;//           that endlocals directive not required.
  3374                              <1> ;//
  3375                              <1> ;// notes:
  3376                              <1> ;//    This macro can only be used within the proc prologue
  3377                              <1> ;//    and must precede any assembly code. Invoke checks to
  3378                              <1> ;//    verify that this macro was called to ensure that the
  3379                              <1> ;//    prologue was initialized properly.
  3380                              <1> ;//
  3381                              <1> %imacro LOCALS 0-1.nolist
  3382                              <1> 	%ifndef NASMX_ENDPROC
  3383                              <1> 		%error 'missing proc directive.'
  3384                              <1> 	%endif
  3385                              <1> 	%ifndef __NX_LOCALS_PRESENT__
  3386                              <1> 		%define __NX_LOCALS_PRESENT__
  3387                              <1> 	%endif
  3388                              <1> 	%if %0 == 1
  3389                              <1> 		%ifidni %1,none
  3390                              <1> 			%define __NX_LOCALS_NONE__
  3391                              <1> 		%else
  3392                              <1> 			%warning unknown locals directive: %1
  3393                              <1> 		%endif
  3394                              <1> 	%endif
  3395                              <1> 
  3396                              <1> 	%ifndef __NX_PROLOGUE_USES_ADJUST__
  3397                              <1> 		%xdefine __NX_PROLOGUE_USES_ADJUST__ 0
  3398                              <1> 	%endif
  3399                              <1> 
  3400                              <1> 	%ifndef __NX_PROLOGUE_PRESENT__
  3401                              <1> 		%define __NX_PROLOGUE_PRESENT__
  3402                              <1> 		push __BP
  3403                              <1> 
  3404                              <1> 		;// if there are no locals, no parameters, and no x64 prologue requirements
  3405                              <1> 		;// then don't emit mov __SP, __BP
  3406                              <1> 		%ifnidni %$__nx_proc, main
  3407                              <1> 			%ifdef __NX_STACK_IDX_PROLOGUE_X64_PARAM_NAME
  3408                              <1> 				mov  __BP, __SP
  3409                              <1> 			%elifndef __NX_LOCALS_NONE__
  3410                              <1> 				mov  __BP, __SP
  3411                              <1> 			%elif %$__nx_argv_count > 0
  3412                              <1> 				mov  __BP, __SP
  3413                              <1> 			%endif
  3414                              <1> 		%endif
  3415                              <1> 	%endif
  3416                              <1> 
  3417                              <1> 	;// calculate this once
  3418                              <1> 	%assign %$__reg_size __NASMX_ABI_BITS__ / 8
  3419                              <1> 
  3420                              <1> 	%ifdef __NX_USES_PRESENT__
  3421                              <1> 		%assign %%__nx_reg 1
  3422                              <1> 		%assign %$__nx_uses_count __NX_STACK_IDX_NASMX_USES_REGS
  3423                              <1> 		%rep %$__nx_uses_count
  3424                              <1> 			push %[__NX_STACK_NASMX_USES_REGS_ %+ %%__nx_reg]
  3425                              <1> 			%assign %$__nx_locnt %$__nx_locnt + %$__reg_size
  3426                              <1> 			%assign %%__nx_reg %%__nx_reg + 1
  3427                              <1> 		%endrep
  3428                              <1> 	%endif
  3429                              <1> 
  3430                              <1> 	;// at this point we can create the linux spill area if necessary
  3431                              <1> 	%ifdef __NX_STACK_IDX_PROLOGUE_X64_PARAM_NAME
  3432                              <1> 		%assign %%__idx __NX_STACK_IDX_PROLOGUE_X64_PARAM_NAME
  3433                              <1> 		%assign %%__params %%__idx
  3434                              <1> 		%rep %%__params
  3435                              <1> 			%assign %$__nx_locnt %$__reg_size + %$__nx_locnt
  3436                              <1> 			.%[__NX_STACK_PROLOGUE_X64_PARAM_NAME_ %+ %%__idx] EQU %[%$__nx_locnt]
  3437                              <1> 			%assign %%__idx %%__idx - 1
  3438                              <1> 			__nx_stack_pop PROLOGUE_X64_PARAM_NAME
  3439                              <1> 		%endrep
  3440                              <1> 		%assign %$__nx_x64_loc %$__nx_locnt
  3441                              <1> 	%endif
  3442                              <1> 
  3443                              <1> 	%ifdef __NX_LOCALS_NONE__
  3444                              <1> 		%ifdef __NX_PROLOGUE_CALLSTACK_ADJUST__
  3445                              <1> 			%assign %$__nx_locnt %$__nx_locnt + __NX_PROLOGUE_CALLSTACK_ADJUST__
  3446                              <1> 		%endif
  3447                              <1> 		%if %$__nx_locnt > 0
  3448                              <1> 			;// assert: the following block of code added for NASMX 1.0rc2
  3449                              <1> 			;// to ensure that stack is aligned properly for functions
  3450                              <1> 			;// which do not define any locals, save odd count registers,
  3451                              <1> 			;// or linux x64 procs with unaligned spill area
  3452                              <1> 			%assign %%__align __NASMX_ABI_BITS__ / 4
  3453                              <1> 			%assign %%__off (((%$__nx_locnt + %%__align) / %%__align) * %%__align)
  3454                              <1> 			%assign %%__tmp (%$__nx_locnt + %%__align)
  3455                              <1> 			%if (%%__off != %%__tmp)
  3456                              <1> 				%assign %$__nx_locnt %$__nx_locnt + %$__reg_size
  3457                              <1> 			%endif
  3458                              <1> 			%assign %%__alloca %$__nx_locnt - __NX_PROLOGUE_USES_ADJUST__
  3459                              <1> 			%if %%__alloca > 0
  3460                              <1> 				sub  __SP, %%__alloca
  3461                              <1> 			%endif
  3462                              <1> 		%endif
  3463                              <1> 
  3464                              <1> 		;// auto-spill registers, if any
  3465                              <1> 		%ifdef __NX_STACK_IDX_NASMX_SPILL_REG_NAME
  3466                              <1> 			%assign %%__ofst %$__reg_size * 2
  3467                              <1> 			%assign %%ctr 1
  3468                              <1> 			%assign %%__repcnt __NX_STACK_IDX_NASMX_SPILL_REG_NAME
  3469                              <1> 			%rep %%__repcnt
  3470                              <1> 				%assign %%__isfloat is_typeof_float(%[__NX_STACK_NASMX_SPILL_REG_TYPE_ %+ %%ctr])
  3471                              <1> 				%if %%__isfloat == 0
  3472                              <1> 					%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  3473                              <1> 						mov size_t [__BP + %%__ofst], %[__NX_STACK_NASMX_SPILL_REG_NAME_ %+ %%ctr]
  3474                              <1> 						%assign %%__ofst %%__ofst + %$__reg_size
  3475                              <1> 					%else
  3476                              <1> 						mov size_t [__BP - %$__nx_x64_loc], %[__NX_STACK_NASMX_SPILL_REG_NAME_ %+ %%ctr]
  3477                              <1> 						%assign %$__nx_x64_loc %$__nx_x64_loc - %$__reg_size
  3478                              <1> 					%endif
  3479                              <1> 				%else
  3480                              <1> 					%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  3481                              <1> 						movq size_t [__BP + %%__ofst], %[__NX_STACK_NASMX_SPILL_REG_NAME_ %+ %%ctr]
  3482                              <1> 						%assign %%__ofst %%__ofst + %$__reg_size
  3483                              <1> 					%else
  3484                              <1> 						movq size_t [__BP - %$__nx_x64_loc], %[__NX_STACK_NASMX_SPILL_REG_NAME_ %+ %%ctr]
  3485                              <1> 						%assign %$__nx_x64_loc %$__nx_x64_loc - %$__reg_size
  3486                              <1> 					%endif				
  3487                              <1> 				%endif
  3488                              <1> 				%assign %%ctr %%ctr + 1
  3489                              <1> 			%endrep
  3490                              <1> 			%rep %%__repcnt
  3491                              <1> 				__nx_stack_pop NASMX_SPILL_REG_NAME
  3492                              <1> 				__nx_stack_pop NASMX_SPILL_REG_TYPE
  3493                              <1> 			%endrep
  3494                              <1> 		%endif
  3495                              <1> 	%endif
  3496                              <1> %endmacro
  3497                              <1> 
  3498                              <1> 
  3499                              <1> %imacro LOCAL 2-3.nolist 1
  3500                              <1> 	%ifndef __NX_LOCALS_PRESENT__
  3501                              <1> 		%error 'missing locals directive.'
  3502                              <1> 	%endif
  3503                              <1> 	%ifdef __NX_LOCALS_NONE__
  3504                              <1> 		%error 'conflicts with directive: locals none'
  3505                              <1> 	%endif
  3506                              <1> 	%ifndef %[%2]_size
  3507                              <1> 		%error %1 unknown size: %2
  3508                              <1> 	%endif
  3509                              <1> 	%assign %%__size %[%2]_size
  3510                              <1> 	%assign %$__nx_locnt %$__nx_locnt + (%%__size * %3)
  3511                              <1> 
  3512                              <1> 	;// ensure natural alignment of stack local variables
  3513                              <1> 	;// TODO: A nice, but not trivial, optimization to reduce
  3514                              <1> 	;// stack usage even further would be to reorganize equate
  3515                              <1> 	;// offsets of local variables similar to a real compiler.
  3516                              <1> 	%if %%__size <= 4
  3517                              <1> 		%assign %%__align 4
  3518                              <1> 	%elif %%__size <= 8
  3519                              <1> 		%assign %%__align 8
  3520                              <1> 	%elif %%__size > 16
  3521                              <1> 		%assign %%__align __NASMX_ABI_BITS__ / 8
  3522                              <1> 	%else
  3523                              <1> 		%assign %%__align __NASMX_ABI_BITS__ / 4
  3524                              <1> 	%endif
  3525                              <1> 	%assign %%__off (((%$__nx_locnt + %%__align) / %%__align) * %%__align)
  3526                              <1> 	%assign %%__tmp (%$__nx_locnt + %%__align)
  3527                              <1> 	%if (%%__off != %%__tmp)
  3528                              <1> 		%assign %$__nx_locnt %%__off
  3529                              <1> 	%endif
  3530                              <1> 	.%[%1] EQU %$__nx_locnt
  3531                              <1> %endmacro
  3532                              <1> 
  3533                              <1> 
  3534                              <1> %imacro ENDLOCALS 0.nolist
  3535                              <1> 	%ifndef __NX_LOCALS_PRESENT__
  3536                              <1> 		%error 'missing locals directive.'
  3537                              <1> 	%endif
  3538                              <1> 	%ifndef __NX_LOCALS_NONE__
  3539                              <1> 		%ifdef __NX_PROLOGUE_CALLSTACK_ADJUST__
  3540                              <1> 			%assign %$__nx_locnt %$__nx_locnt + __NX_PROLOGUE_CALLSTACK_ADJUST__
  3541                              <1> 		%endif
  3542                              <1> 		%if %$__nx_locnt > 0
  3543                              <1> 			;// keep stack aligned
  3544                              <1> 			%assign %%__align __NASMX_ABI_BITS__ / 4
  3545                              <1> 			%assign %%__off (((%$__nx_locnt + %%__align) / %%__align) * %%__align)
  3546                              <1> 			%assign %%__tmp (%$__nx_locnt + %%__align)
  3547                              <1> 			%if (%%__off != %%__tmp)
  3548                              <1> 				%assign %$__nx_locnt %%__off
  3549                              <1> 			%endif
  3550                              <1> 			%assign %%__alloca %$__nx_locnt - __NX_PROLOGUE_USES_ADJUST__
  3551                              <1> 			%if %%__alloca > 0
  3552                              <1> 				sub  __SP, %%__alloca
  3553                              <1> 			%endif
  3554                              <1> 		%endif
  3555                              <1> 
  3556                              <1> 		;// auto-spill registers, if any
  3557                              <1> 		%ifdef __NX_STACK_IDX_NASMX_SPILL_REG_NAME
  3558                              <1> 			%assign %%__ofst %$__reg_size * 2
  3559                              <1> 			%assign %%ctr 1
  3560                              <1> 			%assign %%__repcnt __NX_STACK_IDX_NASMX_SPILL_REG_NAME
  3561                              <1> 			%rep %%__repcnt
  3562                              <1> 				%assign %%__isfloat is_typeof_float(%[__NX_STACK_NASMX_SPILL_REG_TYPE_ %+ %%ctr])
  3563                              <1> 				%if %%__isfloat == 0
  3564                              <1> 					%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  3565                              <1> 						mov size_t [__BP + %%__ofst], %[__NX_STACK_NASMX_SPILL_REG_NAME_ %+ %%ctr]
  3566                              <1> 						%assign %%__ofst %%__ofst + %$__reg_size
  3567                              <1> 					%else
  3568                              <1> 						mov size_t [__BP - %$__nx_x64_loc], %[__NX_STACK_NASMX_SPILL_REG_NAME_ %+ %%ctr]
  3569                              <1> 						%assign %$__nx_x64_loc %$__nx_x64_loc - %$__reg_size
  3570                              <1> 					%endif
  3571                              <1> 				%else
  3572                              <1> 					%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ == __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  3573                              <1> 						movsd size_t [__BP + %%__ofst], %[__NX_STACK_NASMX_SPILL_REG_NAME_ %+ %%ctr]
  3574                              <1> 						%assign %%__ofst %%__ofst + %$__reg_size
  3575                              <1> 					%else
  3576                              <1> 						movsd size_t [__BP - %$__nx_x64_loc], %[__NX_STACK_NASMX_SPILL_REG_NAME_ %+ %%ctr]
  3577                              <1> 						%assign %$__nx_x64_loc %$__nx_x64_loc - %$__reg_size
  3578                              <1> 					%endif
  3579                              <1> 				%endif
  3580                              <1> 				%assign %%ctr %%ctr + 1
  3581                              <1> 			%endrep
  3582                              <1> 			%rep %%__repcnt
  3583                              <1> 				__nx_stack_pop NASMX_SPILL_REG_NAME
  3584                              <1> 				__nx_stack_pop NASMX_SPILL_REG_TYPE
  3585                              <1> 			%endrep
  3586                              <1> 		%endif
  3587                              <1> 	%endif
  3588                              <1> %endmacro
  3589                              <1> 
  3590                              <1> ;// the following provide accessor macros to the procedure
  3591                              <1> ;// parameter arguments and local variables
  3592                              <1> %if __NASMX_ABI_BITS__ > 32
  3593                              <1> 	%if __NASMX_DECLSPEC_SYSTYPE_DEFAULT__ != __NASMX_DECLSPEC_SYSTYPE_WINDOWS__
  3594                              <1> 		;// Linux x64 argv offsets defined identically to var offsets
  3595                              <1> 		%idefine argv(v) rbp - v
  3596                              <1> 	%else
  3597                              <1> 		%idefine argv(v) rbp + v
  3598                              <1> 	%endif
  3599                              <1> 	%idefine  var(v) rbp - v
  3600                              <1> %else
  3601                              <1> 	%idefine argv(v) ebp + v
  3602                              <1> 	%idefine  var(v) ebp - v
  3603                              <1> %endif
  3604                              <1> 
  3605                              <1> %idefine OFFSET
  3606                              <1> 
  3607                              <1> %imacro RETURN 0-1.nolist
  3608                              <1> 	%if %0 > 0
  3609                              <1> 		%ifnum %1
  3610                              <1> 			%if %1 == -1
  3611                              <1> 				or __AX, %1
  3612                              <1> 			%elif %1 == 0
  3613                              <1> 				xor __AX, __AX
  3614                              <1> 			%else
  3615                              <1> 				mov __AX, %1
  3616                              <1> 			%endif
  3617                              <1> 		%else
  3618                              <1> 			%ifnidni %1, __AX
  3619                              <1> 				mov __AX, %[%1]
  3620                              <1> 			%endif
  3621                              <1> 		%endif
  3622                              <1> 	%endif
  3623                              <1> 	jmp  NASMX_ENDPROC
  3624                              <1> %endmacro
  3625                              <1> 
  3626                              <1> %imacro LEAVE 0.nolist
  3627                              <1> 	%ifndef __NX_LEAVE_PRESENT__
  3628                              <1> 		%define __NX_LEAVE_PRESENT__
  3629                              <1> 		%ifdef NASMX_ENDPROC
  3630                              <1> 			;// reset __SP to end of saved registers, if any
  3631                              <1> 			%ifdef __NX_LOCALS_PRESENT__
  3632                              <1> 				%assign %%__alloc %$__nx_locnt - __NX_PROLOGUE_USES_ADJUST__
  3633                              <1> 				%if %%__alloc > 0
  3634                              <1> 					add  __SP, %%__alloc
  3635                              <1> 				%endif
  3636                              <1> 			%endif
  3637                              <1> 			;// restore any non-volatile registers
  3638                              <1> 			%ifdef __NX_USES_PRESENT__
  3639                              <1> 				%assign %%__nx_reg __NX_STACK_IDX_NASMX_USES_REGS
  3640                              <1> 				%assign %$__nx_uses_count __NX_STACK_IDX_NASMX_USES_REGS
  3641                              <1> 				%rep %$__nx_uses_count
  3642                              <1> 					pop __NX_STACK_NASMX_USES_REGS_%[%%__nx_reg]
  3643                              <1> 					__nx_stack_pop NASMX_USES_REGS
  3644                              <1> 					%assign %%__nx_reg %%__nx_reg - 1
  3645                              <1> 				%endrep
  3646                              <1> 			%endif
  3647                              <1> 		%endif
  3648                              <1> 		%ifdef __NX_PROLOGUE_PRESENT__
  3649                              <1> 			%ifidn %[%$__nx_proc],main
  3650                              <1> 				mov __SP, __BP
  3651                              <1> 			%endif
  3652                              <1> 			pop __BP
  3653                              <1> 		%endif
  3654                              <1> 	%endif
  3655                              <1> %endmacro
  3656                              <1> 
  3657                              <1> %imacro RET 0-1.nolist
  3658                              <1> 	%ifdef NASMX_ENDPROC
  3659                              <1> 		%ifndef __NX_LEAVE_PRESENT__
  3660                              <1> 			leave
  3661                              <1> 		%endif
  3662                              <1> 		%define __NX_RETURN_PRESENT__
  3663                              <1> 	%endif
  3664                              <1> 
  3665                              <1> 	%if %0 == 1
  3666                              <1> 		%ifnum %1
  3667                              <1> 			%if %1 > 0
  3668                              <1> 				ret %1
  3669                              <1> 			%else
  3670                              <1> 				ret
  3671                              <1> 			%endif
  3672                              <1> 		%elifid %1
  3673                              <1> 			%if %[%1] > 0
  3674                              <1> 				ret %[%1]
  3675                              <1> 			%else
  3676                              <1> 				ret
  3677                              <1> 			%endif
  3678                              <1> 		%else
  3679                              <1> 			%warning 'invalid operand supplied to ret opcode'
  3680                              <1> 			ret
  3681                              <1> 		%endif
  3682                              <1> 	%else
  3683                              <1> 		ret
  3684                              <1> 	%endif
  3685                              <1> %endmacro
  3686                              <1> 
  3687                              <1> %imacro ENDPROC 0.nolist
  3688                              <1> 	%ifndef NASMX_ENDPROC
  3689                              <1> 		%fatal 'missing proc directive.'
  3690                              <1> 	%endif
  3691                              <1> 	;// NASMX v1.3.1
  3692                              <1> 	;// added check to ensure stack was set up
  3693                              <1> 	;// properly in case invoke macro not used.
  3694                              <1> 	%ifndef __NX_LOCALS_PRESENT__
  3695                              <1> 		%fatal 'missing locals directive.'
  3696                              <1> 	%endif
  3697                              <1> 
  3698                              <1> 	;// provide a proc end jmp label
  3699                              <1> 	%[NASMX_ENDPROC]:
  3700                              <1> 
  3701                              <1> 	;// assert: we can not be certain at what context level we are at,
  3702                              <1> 	;// thus we pop all contexts until we get to __NX_CTX_PROC__
  3703                              <1> 	%rep 32
  3704                              <1> 		;// Bugfix:
  3705                              <1> 		;// Avoid problem with exitrep not exiting
  3706                              <1> 		;// the loop immediately.
  3707                              <1> 		%ifctx __NX_CTX_PROC__
  3708                              <1> 			%exitrep
  3709                              <1> 		%else
  3710                              <1> 			%pop
  3711                              <1> 		%endif
  3712                              <1> 	%endrep
  3713                              <1> 
  3714                              <1> 	%ifndef __NX_RETURN_PRESENT__
  3715                              <1> 		%assign %%__cc_retpopsargs nx_declspec_cc_retpopsargs(%$__nx_callconv)
  3716                              <1> 		%if %%__cc_retpopsargs == 0
  3717                              <1> 			ret
  3718                              <1> 		%else
  3719                              <1> 			;// x64 retpopcnt may be different than bytecount
  3720                              <1> 			%assign %$__nx_retpopcnt (%$__nx_argv - (__NASMX_ABI_BITS__ / 4))
  3721                              <1> 			%if %$__nx_retpopcnt > 0
  3722                              <1> 				ret %[%$__nx_retpopcnt]
  3723                              <1> 			%else
  3724                              <1> 				ret
  3725                              <1> 			%endif
  3726                              <1> 		%endif
  3727                              <1> 	%endif
  3728                              <1> 	%pop
  3729                              <1> 	%undef NASMX_ENDPROC
  3730                              <1> 	%ifdef __NX_LEAVE_PRESENT__
  3731                              <1> 		%undef __NX_LEAVE_PRESENT__
  3732                              <1> 	%endif
  3733                              <1> 	%ifdef __NX_RETURN_PRESENT__
  3734                              <1> 		%undef __NX_RETURN_PRESENT__
  3735                              <1> 	%endif
  3736                              <1> 	%ifdef __NX_USES_PRESENT__
  3737                              <1> 		%undef __NX_USES_PRESENT__
  3738                              <1> 	%endif
  3739                              <1> 	%ifdef __NX_LOCALS_PRESENT__
  3740                              <1> 		%undef __NX_LOCALS_PRESENT__
  3741                              <1> 	%endif
  3742                              <1> 	%ifdef __NX_LOCALS_NONE__
  3743                              <1> 		%undef __NX_LOCALS_NONE__
  3744                              <1> 	%endif
  3745                              <1> 	%ifdef __NX_PROLOGUE_PRESENT__
  3746                              <1> 		%undef __NX_PROLOGUE_PRESENT__
  3747                              <1> 	%endif
  3748                              <1> 	%ifdef __NX_PROLOGUE_USES_ADJUST__
  3749                              <1> 		%undef __NX_PROLOGUE_USES_ADJUST__
  3750                              <1> 	%endif
  3751                              <1> %endmacro
  3752                              <1> 
  3753                              <1> 
  3754                              <1> %imacro RJMP 2.nolist
  3755                              <1> ; This macro preforms the opposite conditional jump
  3756                              <1> ; than what the value suggests, it's used internally
  3757                              <1> ; by other macros
  3758                              <1> 	%ifidni %1, ==
  3759                              <1> 		jne %2
  3760                              <1> 	%elifidni %1, >
  3761                              <1> 		jle %2
  3762                              <1> 	%elifidni %1, <
  3763                              <1> 		jge %2
  3764                              <1> 	%elifidni %1, >=
  3765                              <1> 		jl %2
  3766                              <1> 	%elifidni %1, <=
  3767                              <1> 		jg %2
  3768                              <1> 	%elifidni %1, !=
  3769                              <1> 		je %2
  3770                              <1> 	%elifidni %1, !>
  3771                              <1> 		jg %2
  3772                              <1> 	%elifidni %1, !<
  3773                              <1> 		jl %2
  3774                              <1> 	%elifidni %1, CARRY
  3775                              <1> 		jnc %2
  3776                              <1> 	%elifidni %1, BELOW
  3777                              <1> 		jnb %2
  3778                              <1> 	%elifidni %1, ABOVE
  3779                              <1> 		jna %2
  3780                              <1> 	%elifidni %1, PARITY
  3781                              <1> 		jnp %2
  3782                              <1> 	%elifidni %1, SIGNED
  3783                              <1> 		jns %2
  3784                              <1> 	%elifidni %1, OVERFLOW
  3785                              <1> 		jno %2
  3786                              <1> 	%elifidni %1, !CARRY
  3787                              <1> 		jc %2
  3788                              <1> 	%elifidni %1, !BELOW
  3789                              <1> 		jb %2
  3790                              <1> 	%elifidni %1, !ABOVE
  3791                              <1> 		ja %2
  3792                              <1> 	%elifidni %1, !PARITY
  3793                              <1> 		jp %2
  3794                              <1> 	%elifidni %1, !SIGNED
  3795                              <1> 		js %2
  3796                              <1> 	%elifidni %1, !OVERFLOW
  3797                              <1> 		jo %2
  3798                              <1> 	%endif
  3799                              <1> %endmacro
  3800                              <1> 
  3801                              <1> 
  3802                              <1> %imacro SJMP 2.nolist
  3803                              <1> 	%ifidni %1, ==
  3804                              <1> 		je %2
  3805                              <1> 	%elifidni %1, >
  3806                              <1> 		jg %2
  3807                              <1> 	%elifidni %1, <
  3808                              <1> 		jl %2
  3809                              <1> 	%elifidni %1, >=
  3810                              <1> 		jge %2
  3811                              <1> 	%elifidni %1, <=
  3812                              <1> 		jle %2
  3813                              <1> 	%elifidni %1, !=
  3814                              <1> 		jne %2
  3815                              <1> 	%elifidni %1, !>
  3816                              <1> 		jng %2
  3817                              <1> 	%elifidni %1, !<
  3818                              <1> 		jnl %2
  3819                              <1> 	%elifidni %1, CARRY
  3820                              <1> 		jc %2
  3821                              <1> 	%elifidni %1, BELOW
  3822                              <1> 		jb %2
  3823                              <1> 	%elifidni %1, ABOVE
  3824                              <1> 		ja %2
  3825                              <1> 	%elifidni %1, PARITY
  3826                              <1> 		jp %2
  3827                              <1> 	%elifidni %1, SIGNED
  3828                              <1> 		js %2
  3829                              <1> 	%elifidni %1, OVERFLOW
  3830                              <1> 		jo %2
  3831                              <1> 	%elifidni %1, !CARRY
  3832                              <1> 		jnc %2
  3833                              <1> 	%elifidni %1, !BELOW
  3834                              <1> 		jnb %2
  3835                              <1> 	%elifidni %1, !ABOVE
  3836                              <1> 		jna %2
  3837                              <1> 	%elifidni %1, !PARITY
  3838                              <1> 		jnp %2
  3839                              <1> 	%elifidni %1, !SIGNED
  3840                              <1> 		jns %2
  3841                              <1> 	%elifidni %1, !OVERFLOW
  3842                              <1> 		jno %2
  3843                              <1> 	%endif
  3844                              <1> %endmacro
  3845                              <1> 
  3846                              <1> 
  3847                              <1> 
  3848                              <1> ;//////////////////////////////////////////////////////////////////////////////
  3849                              <1> ;//
  3850                              <1> ;// The following macros provide a convenient way
  3851                              <1> ;// to simulate high level constructs.  They allow
  3852                              <1> ;// nesting of statements of arbitrary depth.
  3853                              <1> ;// Note that the address labels generated are dot-
  3854                              <1> ;// prepended to not break NASMX locals!
  3855                              <1> 
  3856                              <1> %imacro IF 3.nolist
  3857                              <1> %push __NX_CTX_IF__
  3858                              <1> 	; we must obtain any outer context label sequence
  3859                              <1> 	; to enable the break macro to succeed.
  3860                              <1> 	%ifndef __NX_OPER_LABEL_SEQ__
  3861                              <1> 		%xdefine __NX_OPER_LABEL_SEQ__ 0
  3862                              <1> 	%endif
  3863                              <1> 	%assign %$__nx_oper_label_seq %[__NX_OPER_LABEL_SEQ__]
  3864                              <1> 	; sequence label numbers for the IF macro must be
  3865                              <1> 	; separate from looping sequence label numbers.
  3866                              <1> 	%ifndef __NX_OPER_IF_LABEL_SEQ__
  3867                              <1> 		%xdefine __NX_OPER_IF_LABEL_SEQ__ 0
  3868                              <1> 	%endif
  3869                              <1> 	%assign %$__nx_oper_if_label_seq %[__NX_OPER_IF_LABEL_SEQ__] + 1
  3870                              <1> 	%undef __NX_OPER_IF_LABEL_SEQ__
  3871                              <1> 	%xdefine __NX_OPER_IF_LABEL_SEQ__ %[%$__nx_oper_if_label_seq]
  3872                              <1> 
  3873                              <1> 	%assign %$__nx_oper_else 0
  3874                              <1> 	%assign %$__nx_oper_if_label_next 1
  3875                              <1> 	cmp %1, %3
  3876                              <1> 	RJMP %2, .__NX_OPER_IF_LABEL_%[%$__nx_oper_if_label_seq]_%[%$__nx_oper_if_label_next]
  3877                              <1> %endmacro
  3878                              <1> 
  3879                              <1> 
  3880                              <1> %imacro ELSIF 3.nolist
  3881                              <1> 	%ifctx __NX_CTX_IF__
  3882                              <1> 		%if %$__nx_oper_else > 0
  3883                              <1> 			%error "ELSIF cannot follow ELSE block."
  3884                              <1> 		%endif
  3885                              <1> 		jmp .__NX_OPER_IF_LABEL_%[%$__nx_oper_if_label_seq]
  3886                              <1> 		.__NX_OPER_IF_LABEL_%[%$__nx_oper_if_label_seq]_%[%$__nx_oper_if_label_next]:
  3887                              <1> 		%assign %$__nx_oper_if_label_next 1+%$__nx_oper_if_label_next
  3888                              <1> 		cmp %1, %3
  3889                              <1> 		RJMP %2, .__NX_OPER_IF_LABEL_%[%$__nx_oper_if_label_seq]_%[%$__nx_oper_if_label_next]
  3890                              <1> 	%else
  3891                              <1> 		%error "ELSIF directive must be within an IF block."
  3892                              <1> 	%endif
  3893                              <1> %endmacro
  3894                              <1> 
  3895                              <1> 
  3896                              <1> %imacro ELSE 0.nolist
  3897                              <1> 	%ifctx __NX_CTX_IF__
  3898                              <1> 		%if %$__nx_oper_else > 0
  3899                              <1> 			%error "There can only be one ELSE per IF block."
  3900                              <1> 		%else
  3901                              <1> 			%assign %$__nx_oper_else 1
  3902                              <1> 			jmp .__NX_OPER_IF_LABEL_%[%$__nx_oper_if_label_seq]
  3903                              <1> 			.__NX_OPER_IF_LABEL_%[%$__nx_oper_if_label_seq]_%[%$__nx_oper_if_label_next]:
  3904                              <1> 			%assign %$__nx_oper_if_label_next 1+%$__nx_oper_if_label_next
  3905                              <1> 		%endif
  3906                              <1> 	%else
  3907                              <1> 		%error "ELSE directive must be within an IF block."
  3908                              <1> 	%endif
  3909                              <1> %endmacro
  3910                              <1> 
  3911                              <1> 
  3912                              <1> %imacro ENDIF 0.nolist
  3913                              <1> 	%ifctx __NX_CTX_IF__
  3914                              <1> 		; must have a forward label in case elsif/else macros used.
  3915                              <1> 		.__NX_OPER_IF_LABEL_%[%$__nx_oper_if_label_seq]_%[%$__nx_oper_if_label_next]:
  3916                              <1> 		.__NX_OPER_IF_LABEL_%[%$__nx_oper_if_label_seq]:
  3917                              <1> 		%pop
  3918                              <1> 	%else
  3919                              <1> 		%error "ENDIF directive must be within an IF block."
  3920                              <1> 	%endif
  3921                              <1> %endmacro
  3922                              <1> 
  3923                              <1> 
  3924                              <1> %imacro BREAK 0.nolist
  3925                              <1> 	jmp .__NX_OPER_LABEL_EXIT_%[%$__nx_oper_label_seq]
  3926                              <1> %endmacro
  3927                              <1> 
  3928                              <1> 
  3929                              <1> %imacro CONTINUE 0.nolist
  3930                              <1> 	jmp .__NX_OPER_LABEL_CONTINUE_%[%$__nx_oper_label_seq]
  3931                              <1> %endmacro
  3932                              <1> 
  3933                              <1> 
  3934                              <1> %imacro SWITCH 1.nolist
  3935                              <1> %push __NX_CTX_SWITCH__
  3936                              <1> 	%ifndef __NX_OPER_LABEL_SEQ__
  3937                              <1> 		%xdefine __NX_OPER_LABEL_SEQ__ 0
  3938                              <1> 	%endif
  3939                              <1> 	%assign %$__nx_oper_label_seq %[__NX_OPER_LABEL_SEQ__] + 1
  3940                              <1> 	%undef __NX_OPER_LABEL_SEQ__
  3941                              <1> 	%xdefine __NX_OPER_LABEL_SEQ__ %[%$__nx_oper_label_seq]
  3942                              <1> 	%ifnidni __AX, %1
  3943                              <1> 		mov __AX, %1
  3944                              <1> 	%endif
  3945                              <1> 	%assign %$__nx_oper_label_next 1
  3946                              <1> 	%assign %$__nx_oper_default 0
  3947                              <1> %endmacro
  3948                              <1> 
  3949                              <1> 
  3950                              <1> %imacro CASE 1.nolist
  3951                              <1> 	%ifctx __NX_CTX_SWITCH__
  3952                              <1> 		%if %$__nx_oper_default > 0
  3953                              <1> 			%error "CASE must appear before DEFAULT in SWITCH block."
  3954                              <1> 		%endif
  3955                              <1> 		.__NX_OPER_LABEL_%[%$__nx_oper_label_seq]_%[%$__nx_oper_label_next]:
  3956                              <1> 		%assign %$__nx_oper_label_next 1+%$__nx_oper_label_next
  3957                              <1> 		cmp __AX, %1
  3958                              <1> 		jnz near .__NX_OPER_LABEL_%[%$__nx_oper_label_seq]_%[%$__nx_oper_label_next]
  3959                              <1> 	%else
  3960                              <1> 		%error "CASE directive must be within a SWITCH block."
  3961                              <1> 	%endif
  3962                              <1> %endmacro
  3963                              <1> 
  3964                              <1> 
  3965                              <1> %imacro DEFAULT 0.nolist
  3966                              <1> 	%ifctx __NX_CTX_SWITCH__
  3967                              <1> 		%if %$__nx_oper_default > 0
  3968                              <1> 			%error "There can only be one DEFAULT per SWITCH block."
  3969                              <1> 		%endif
  3970                              <1> 		%assign %$__nx_oper_default 1
  3971                              <1> 		.__NX_OPER_LABEL_%[%$__nx_oper_label_seq]_%[%$__nx_oper_label_next]:
  3972                              <1> 		%assign %$__nx_oper_label_next 1+%$__nx_oper_label_next
  3973                              <1> 	%else
  3974                              <1> 		%error "DEFAULT directive must be within a SWITCH block."
  3975                              <1> 	%endif
  3976                              <1> %endmacro
  3977                              <1> 
  3978                              <1> 
  3979                              <1> %imacro ENDSWITCH 0.nolist
  3980                              <1> 	%ifctx __NX_CTX_SWITCH__
  3981                              <1> 		.__NX_OPER_LABEL_%[%$__nx_oper_label_seq]_%[%$__nx_oper_label_next]:
  3982                              <1> 		.__NX_OPER_LABEL_EXIT_%[%$__nx_oper_label_seq]:
  3983                              <1> 		%pop
  3984                              <1> 	%else
  3985                              <1> 		%error "Missing SWITCH directive."
  3986                              <1> 	%endif
  3987                              <1> %endmacro
  3988                              <1> 
  3989                              <1> 
  3990                              <1> %imacro REPEAT 0.nolist
  3991                              <1> %push __NX_CTX_REPEAT__
  3992                              <1> 	%ifndef __NX_OPER_LABEL_SEQ__
  3993                              <1> 		%xdefine __NX_OPER_LABEL_SEQ__ 0
  3994                              <1> 	%endif
  3995                              <1> 	%assign %$__nx_oper_label_seq %[__NX_OPER_LABEL_SEQ__] + 1
  3996                              <1> 	%undef __NX_OPER_LABEL_SEQ__
  3997                              <1> 	%xdefine __NX_OPER_LABEL_SEQ__ %[%$__nx_oper_label_seq]
  3998                              <1> 	%assign %$__nx_oper_label_next 1
  3999                              <1> 	.__NX_OPER_LABEL_%[%$__nx_oper_label_seq]_%[%$__nx_oper_label_next]:
  4000                              <1> %endmacro
  4001                              <1> 
  4002                              <1> 
  4003                              <1> %imacro UNTIL 3.nolist
  4004                              <1> 	%ifctx __NX_CTX_REPEAT__
  4005                              <1> 		.__NX_OPER_LABEL_CONTINUE_%[%$__nx_oper_label_seq]:
  4006                              <1> 		cmp %1, %3
  4007                              <1> 		RJMP %2, .__NX_OPER_LABEL_%[%$__nx_oper_label_seq]_%[%$__nx_oper_label_next]
  4008                              <1> 		.__NX_OPER_LABEL_EXIT_%[%$__nx_oper_label_seq]:
  4009                              <1> 		%pop
  4010                              <1> 	%elifctx __NX_CTX_DO__
  4011                              <1> 		%warning "DO/UNTIL combination is deprecated.  Use REPEAT/UNTIL."
  4012                              <1> 		.__NX_OPER_LABEL_CONTINUE_%[%$__nx_oper_label_seq]:
  4013                              <1> 		cmp %1, %3
  4014                              <1> 		RJMP %2, .__NX_OPER_LABEL_%[%$__nx_oper_label_seq]_%[%$__nx_oper_label_next]
  4015                              <1> 		.__NX_OPER_LABEL_EXIT_%[%$__nx_oper_label_seq]:
  4016                              <1> 		%pop
  4017                              <1> 	%else
  4018                              <1> 		%error "Missing REPEAT directive."
  4019                              <1> 	%endif
  4020                              <1> %endmacro
  4021                              <1> 
  4022                              <1> 
  4023                              <1> %imacro DO 0.nolist
  4024                              <1> %push __NX_CTX_DO__
  4025                              <1> 	%ifndef __NX_OPER_LABEL_SEQ__
  4026                              <1> 		%xdefine __NX_OPER_LABEL_SEQ__ 0
  4027                              <1> 	%endif
  4028                              <1> 	%assign %$__nx_oper_label_seq %[__NX_OPER_LABEL_SEQ__] + 1
  4029                              <1> 	%undef __NX_OPER_LABEL_SEQ__
  4030                              <1> 	%xdefine __NX_OPER_LABEL_SEQ__ %[%$__nx_oper_label_seq]
  4031                              <1> 	%assign %$__nx_oper_label_next 1
  4032                              <1> 	.__NX_OPER_LABEL_%[%$__nx_oper_label_seq]_%[%$__nx_oper_label_next]:
  4033                              <1> %endmacro
  4034                              <1> 
  4035                              <1> 
  4036                              <1> ; There is some trickery with this macro: If the DO context exists we assume
  4037                              <1> ; that this is a finishing while statement; If no DO context is found we assume
  4038                              <1> ; that the user is beginning a while loop.  This implies that you cannot use a
  4039                              <1> ; WHILE loop directly inside a DO loop without some other intervening context.
  4040                              <1> ; If your code requires this then you must use REPEAT/UNTIL for the outer loop.
  4041                              <1> %imacro WHILE 3.nolist
  4042                              <1> 	%ifctx __NX_CTX_DO__
  4043                              <1> 		.__NX_OPER_LABEL_CONTINUE_%[%$__nx_oper_label_seq]:
  4044                              <1> 		cmp %1, %3
  4045                              <1> 		SJMP %2, .__NX_OPER_LABEL_%[%$__nx_oper_label_seq]_%[%$__nx_oper_label_next]
  4046                              <1> 		.__NX_OPER_LABEL_EXIT_%[%$__nx_oper_label_seq]:
  4047                              <1> 		%pop
  4048                              <1> 	%else
  4049                              <1> 		%push __NX_CTX_WHILE__
  4050                              <1> 		%ifndef __NX_OPER_LABEL_SEQ__
  4051                              <1> 			%xdefine __NX_OPER_LABEL_SEQ__ 0
  4052                              <1> 		%endif
  4053                              <1> 		%assign %$__nx_oper_label_seq %[__NX_OPER_LABEL_SEQ__] + 1
  4054                              <1> 		%undef __NX_OPER_LABEL_SEQ__
  4055                              <1> 		%xdefine __NX_OPER_LABEL_SEQ__ %[%$__nx_oper_label_seq]
  4056                              <1> 		%assign %$__nx_oper_label_next 1
  4057                              <1> 		.__NX_OPER_LABEL_CONTINUE_%[%$__nx_oper_label_seq]:
  4058                              <1> 		cmp %1, %3
  4059                              <1> 		RJMP %2, .__NX_OPER_LABEL_EXIT_%[%$__nx_oper_label_seq]
  4060                              <1> 	%endif
  4061                              <1> %endmacro
  4062                              <1> 
  4063                              <1> 
  4064                              <1> %imacro ENDWHILE 0.nolist
  4065                              <1> 	%ifctx __NX_CTX_WHILE__
  4066                              <1> 		jmp .__NX_OPER_LABEL_CONTINUE_%[%$__nx_oper_label_seq]
  4067                              <1> 		.__NX_OPER_LABEL_EXIT_%[%$__nx_oper_label_seq]:
  4068                              <1> 		%pop
  4069                              <1> 	%else
  4070                              <1> 		%error "Missing WHILE directive."
  4071                              <1> 	%endif
  4072                              <1> %endmacro
  4073                              <1> 
  4074                              <1> 
  4075                              <1> ;// The following is used to wrap test code when debugging
  4076                              <1> ;%define __NX_DEBUG__  ;;//// * * * BEGIN NASMX DEBUG FRAME * * * ///////////////
  4077                              <1> %ifdef __NX_DEBUG__
  4078                              <1> 
  4079                              <1> %xdefine __NX_DEBUG_SOURCE_LINE_START__ __LINE__
  4080                              <1> 
  4081                              <1> ;;// * * PLACE TEST CODE HERE * *
  4082                              <1> 
  4083                              <1> %xdefine __NX_DEBUG_SOURCE_LINE_END__ __LINE__
  4084                              <1> %ifndef __NX_DEBUG_SOURCE_LINE_START__
  4085                              <1>    %fatal NXDEBUG: BREAK line: __LINE__ section(????,__NX_DEBUG_SOURCE_LINE_END__) __NX_DEBUG_SOURCE_LINE_START__ undefined!
  4086                              <1> %endif
  4087                              <1> %assign __NX_DEBUG_SOURCE_LINE_COUNT__ __NX_DEBUG_SOURCE_LINE_END__ - __NX_DEBUG_SOURCE_LINE_START__
  4088                              <1> %fatal NXDEBUG: BREAK line: __LINE__ section(__NX_DEBUG_SOURCE_LINE_START__,__NX_DEBUG_SOURCE_LINE_END__) __NX_DEBUG_SOURCE_LINE_COUNT__ lines
  4089                              <1> %endif  ;;///////////////// * * * END NASMX DEBUG FRAME * * * /////////////////
  4090                              <1> 
  4091                              <1> %endif	; ifndef __NASMX_INCLUDED__
    21                                  
    22                                  %include "nasmx/gtk/gtk.inc"
     1                              <1> ;*****************************
     2                              <1> ;***** The NASMX Project *****
     3                              <1> ;*****************************
     4                              <1> ;;Translated by Mathi 
     5                              <1> ;;
     6                              <1> 
     7                              <1> %ifndef __GTK_INC__
     8                              <1> %define __GTK_INC__
     9                              <1> 
    10                              <1> %define NULL 0
    11                              <1> %define false		0
    12                              <1> %define true		1
    13                              <1> %define TRUE 1
    14                              <1> %define FALSE 0
    15                              <1> 
    16                              <1> %define G_MINFLOAT	FLT_MIN 
    17                              <1> %define G_MAXFLOAT	FLT_MAX 
    18                              <1> %define G_MINDOUBLE	DBL_MIN 
    19                              <1> %define G_MAXDOUBLE	DBL_MAX 
    20                              <1> %define G_MINSHORT	SHRT_MIN 
    21                              <1> %define G_MAXSHORT	SHRT_MAX 
    22                              <1> %define G_MAXUSHORT	USHRT_MAX 
    23                              <1> %define G_MININT	INT_MIN 
    24                              <1> %define G_MAXINT	INT_MAX 
    25                              <1> %define G_MAXUINT	UINT_MAX 
    26                              <1> %define G_MINLONG	LONG_MIN 
    27                              <1> %define G_MAXLONG	LONG_MAX 
    28                              <1> %define G_MAXULONG	ULONG_MAX 
    29                              <1> %define G_GINT16_MODIFIER "h" 
    30                              <1> %define G_GINT16_FORMAT "hi" 
    31                              <1> %define G_GUINT16_FORMAT "hu" 
    32                              <1> %define G_GINT32_MODIFIER "" 
    33                              <1> %define G_GINT32_FORMAT "i" 
    34                              <1> %define G_GUINT32_FORMAT "u" 
    35                              <1> %define G_HAVE_GINT64 1           
    36                              <1> %define G_GINT64_MODIFIER "I64" 
    37                              <1> %define G_GINT64_FORMAT "I64i" 
    38                              <1> %define G_GUINT64_FORMAT "I64u" 
    39                              <1> %define GLIB_SIZEOF_VOID_P 8 
    40                              <1> %define GLIB_SIZEOF_LONG   4 
    41                              <1> %define GLIB_SIZEOF_SIZE_T 8 
    42                              <1> %define G_GSIZE_MODIFIER "I64" 
    43                              <1> %define G_GSSIZE_FORMAT "I64d" 
    44                              <1> %define G_GSIZE_FORMAT "I64u" 
    45                              <1> %define G_MAXSIZE	G_MAXUINT64 
    46                              <1> %define G_MINSSIZE	G_MININT64 
    47                              <1> %define G_MAXSSIZE	G_MAXINT64 
    48                              <1> %define GLIB_SIZEOF_VOID_P 4 
    49                              <1> %define GLIB_SIZEOF_SIZE_T 4 
    50                              <1> %define G_GSIZE_MODIFIER "" 
    51                              <1> %define G_GSSIZE_FORMAT "i" 
    52                              <1> %define G_GSIZE_FORMAT "u" 
    53                              <1> %define G_MAXSIZE	G_MAXUINT 
    54                              <1> %define G_MINSSIZE	G_MININT 
    55                              <1> %define G_MAXSSIZE	G_MAXINT 
    56                              <1> %define G_MINOFFSET	G_MININT64 
    57                              <1> %define G_MAXOFFSET	G_MAXINT64 
    58                              <1> %define G_GOFFSET_MODIFIER      G_GINT64_MODIFIER 
    59                              <1> %define G_GOFFSET_FORMAT        G_GINT64_FORMAT 
    60                              <1> %define G_GINTPTR_MODIFIER      "" 
    61                              <1> %define G_GINTPTR_FORMAT        "i" 
    62                              <1> %define G_GUINTPTR_FORMAT       "u" 
    63                              <1> %define G_GINTPTR_MODIFIER      "I64" 
    64                              <1> %define G_GINTPTR_FORMAT        "I64i" 
    65                              <1> %define G_GUINTPTR_FORMAT       "I64u" 
    66                              <1> %define GLIB_MAJOR_VERSION 2 
    67                              <1> %define GLIB_MINOR_VERSION 28 
    68                              <1> %define GLIB_MICRO_VERSION 8 
    69                              <1> %define G_VA_COPY	va_copy 
    70                              <1> %define G_HAVE_INLINE	1 
    71                              <1> %define G_HAVE_INLINE 1 
    72                              <1> %define G_HAVE___INLINE 1 
    73                              <1> %define G_HAVE___INLINE__ 1 
    74                              <1> %define G_CAN_INLINE	1 
    75                              <1> %define G_HAVE_ISO_VARARGS 1 
    76                              <1> %define G_HAVE_GROWING_STACK 0 
    77                              <1> %define G_THREADS_ENABLED 
    78                              <1> %define G_STATIC_MUTEX_INIT NULL 
    79                              <1> %define G_BYTE_ORDER G_LITTLE_ENDIAN 
    80                              <1> %define GLIB_SYSDEF_POLLIN =1 
    81                              <1> %define GLIB_SYSDEF_POLLOUT =4 
    82                              <1> %define GLIB_SYSDEF_POLLPRI =2 
    83                              <1> %define GLIB_SYSDEF_POLLHUP =16 
    84                              <1> %define GLIB_SYSDEF_POLLERR =8 
    85                              <1> %define GLIB_SYSDEF_POLLNVAL =32 
    86                              <1> %define G_MODULE_SUFFIX "dll" 
    87                              <1> %define GLIB_SYSDEF_AF_UNIX 1 
    88                              <1> %define GLIB_SYSDEF_AF_INET 2 
    89                              <1> %define GLIB_SYSDEF_AF_INET6 23 
    90                              <1> %define GLIB_SYSDEF_MSG_OOB       1 
    91                              <1> %define GLIB_SYSDEF_MSG_PEEK      2 
    92                              <1> %define GLIB_SYSDEF_MSG_DONTROUTE 4 
    93                              <1> %define G_E     2.7182818284590452353602874713526624977572470937000 
    94                              <1> %define G_LN2   0.69314718055994530941723212145817656807550013436026 
    95                              <1> %define G_LN10  2.3025850929940456840179914546843642076011014886288 
    96                              <1> %define G_PI    3.1415926535897932384626433832795028841971693993751 
    97                              <1> %define G_PI_2  1.5707963267948966192313216916397514420985846996876 
    98                              <1> %define G_PI_4  0.78539816339744830961566084581987572104929234984378 
    99                              <1> %define G_SQRT2 1.4142135623730950488016887242096980785696718753769 
   100                              <1> %define G_LITTLE_ENDIAN 1234 
   101                              <1> %define G_BIG_ENDIAN    4321 
   102                              <1> %define G_PDP_ENDIAN    3412			 
   103                              <1> %define GLIB_VAR extern 
   104                              <1> %define G_DIR_SEPARATOR '\\' 
   105                              <1> %define G_DIR_SEPARATOR_S "\\" 
   106                              <1> %define G_SEARCHPATH_SEPARATOR ';' 
   107                              <1> %define G_SEARCHPATH_SEPARATOR_S ";" 
   108                              <1> %define G_DIR_SEPARATOR '/' 
   109                              <1> %define G_DIR_SEPARATOR_S "/" 
   110                              <1> %define G_SEARCHPATH_SEPARATOR ':' 
   111                              <1> %define G_SEARCHPATH_SEPARATOR_S ":" 
   112                              <1> %define inline __inline__ 
   113                              <1> %define inline __inline 
   114                              <1> %define inline   
   115                              <1> %define G_INLINE_FUNC 
   116                              <1> %define G_INLINE_FUNC static inline 
   117                              <1> %define g_get_user_name g_get_user_name_utf8 
   118                              <1> %define g_get_real_name g_get_real_name_utf8 
   119                              <1> %define g_get_home_dir g_get_home_dir_utf8 
   120                              <1> %define g_get_tmp_dir g_get_tmp_dir_utf8 
   121                              <1> %define g_get_system_data_dirs _g_win32_get_system_data_dirs 
   122                              <1> %define g_dirname g_path_get_dirname 
   123                              <1> %define g_get_current_dir g_get_current_dir_utf8 
   124                              <1> %define g_getenv g_getenv_utf8 
   125                              <1> %define g_setenv g_setenv_utf8 
   126                              <1> %define g_unsetenv g_unsetenv_utf8 
   127                              <1> %define g_find_program_in_path g_find_program_in_path_utf8 
   128                              <1> %define G_NATIVE_ATEXIT 
   129                              <1> %define G_MUTEX_DEBUG_MAGIC 0xf8e18ad7 
   130                              <1> %define G_STATIC_PRIVATE_INIT { 0 } 
   131                              <1> %define G_STATIC_REC_MUTEX_INIT { G_STATIC_MUTEX_INIT } 
   132                              <1> %define G_STATIC_RW_LOCK_INIT { G_STATIC_MUTEX_INIT, NULL, NULL, 0, FALSE, 0, 0 } 
   133                              <1> %define G_ONCE_INIT { G_ONCE_STATUS_NOTCALLED, NULL } 
   134                              <1> %define G_MEM_ALIGN	GLIB_SIZEOF_VOID_P 
   135                              <1> %define G_MEM_ALIGN	GLIB_SIZEOF_LONG 
   136                              <1> %define G_ALLOC_ONLY	  1 
   137                              <1> %define G_ALLOC_AND_FREE  2 
   138                              <1> %define g_list_free1                   g_list_free_1 
   139                              <1> %define g_filename_to_utf8 g_filename_to_utf8_utf8 
   140                              <1> %define g_filename_from_utf8 g_filename_from_utf8_utf8 
   141                              <1> %define g_filename_from_uri g_filename_from_uri_utf8 
   142                              <1> %define g_filename_to_uri g_filename_to_uri_utf8  
   143                              <1> %define G_DATALIST_FLAGS_MASK 0x3 
   144                              <1> %define G_DATE_BAD_JULIAN 0U 
   145                              <1> %define G_DATE_BAD_DAY    0U 
   146                              <1> %define G_DATE_BAD_YEAR   0U 
   147                              <1> %define g_date_weekday 			g_date_get_weekday 
   148                              <1> %define g_date_month 			g_date_get_month 
   149                              <1> %define g_date_year 			g_date_get_year 
   150                              <1> %define g_date_day 			g_date_get_day 
   151                              <1> %define g_date_julian 			g_date_get_julian 
   152                              <1> %define g_date_day_of_year 		g_date_get_day_of_year 
   153                              <1> %define g_date_monday_week_of_year 	g_date_get_monday_week_of_year 
   154                              <1> %define g_date_sunday_week_of_year 	g_date_get_sunday_week_of_year 
   155                              <1> %define g_date_days_in_month 		g_date_get_days_in_month 
   156                              <1> %define g_date_monday_weeks_in_year 	g_date_get_monday_weeks_in_year 
   157                              <1> %define g_date_sunday_weeks_in_year	g_date_get_sunday_weeks_in_year 
   158                              <1> %define g_dir_open g_dir_open_utf8 
   159                              <1> %define g_dir_read_name g_dir_read_name_utf8 
   160                              <1> %define g_file_test g_file_test_utf8 
   161                              <1> %define g_file_get_contents g_file_get_contents_utf8 
   162                              <1> %define g_mkstemp g_mkstemp_utf8 
   163                              <1> %define g_file_open_tmp g_file_open_tmp_utf8 
   164                              <1> %define G_POLLFD_FORMAT "%#I64x" 
   165                              <1> %define G_POLLFD_FORMAT "%#x" 
   166                              <1> %define G_POLLFD_FORMAT "%d" 
   167                              <1> %define g_slist_free1		         g_slist_free_1 
   168                              <1> %define G_PRIORITY_HIGH            -100 
   169                              <1> %define G_PRIORITY_DEFAULT          0 
   170                              <1> %define G_PRIORITY_HIGH_IDLE        100 
   171                              <1> %define G_PRIORITY_DEFAULT_IDLE     200 
   172                              <1> %define G_PRIORITY_LOW              300 
   173                              <1> %define g_string_sprintf	g_string_printf 
   174                              <1> %define g_string_sprintfa	g_string_append_printf 
   175                              <1> %define g_io_channel_new_file g_io_channel_new_file_utf8 
   176                              <1> %define G_WIN32_MSG_HANDLE 19981206 
   177                              <1> %define G_KEY_FILE_DESKTOP_GROUP                "Desktop Entry" 
   178                              <1> %define G_KEY_FILE_DESKTOP_KEY_TYPE             "Type" 
   179                              <1> %define G_KEY_FILE_DESKTOP_KEY_VERSION          "Version" 
   180                              <1> %define G_KEY_FILE_DESKTOP_KEY_NAME             "Name" 
   181                              <1> %define G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME     "GenericName" 
   182                              <1> %define G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY       "NoDisplay" 
   183                              <1> %define G_KEY_FILE_DESKTOP_KEY_COMMENT          "Comment" 
   184                              <1> %define G_KEY_FILE_DESKTOP_KEY_ICON             "Icon" 
   185                              <1> %define G_KEY_FILE_DESKTOP_KEY_HIDDEN           "Hidden" 
   186                              <1> %define G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN     "OnlyShowIn" 
   187                              <1> %define G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN      "NotShowIn" 
   188                              <1> %define G_KEY_FILE_DESKTOP_KEY_TRY_EXEC         "TryExec" 
   189                              <1> %define G_KEY_FILE_DESKTOP_KEY_EXEC             "Exec" 
   190                              <1> %define G_KEY_FILE_DESKTOP_KEY_PATH             "Path" 
   191                              <1> %define G_KEY_FILE_DESKTOP_KEY_TERMINAL         "Terminal" 
   192                              <1> %define G_KEY_FILE_DESKTOP_KEY_MIME_TYPE        "MimeType" 
   193                              <1> %define G_KEY_FILE_DESKTOP_KEY_CATEGORIES       "Categories" 
   194                              <1> %define G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY   "StartupNotify" 
   195                              <1> %define G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS "StartupWMClass" 
   196                              <1> %define G_KEY_FILE_DESKTOP_KEY_URL              "URL" 
   197                              <1> %define G_KEY_FILE_DESKTOP_TYPE_APPLICATION     "Application" 
   198                              <1> %define G_KEY_FILE_DESKTOP_TYPE_LINK            "Link" 
   199                              <1> %define G_KEY_FILE_DESKTOP_TYPE_DIRECTORY       "Directory" 
   200                              <1> %define G_OPTION_REMAINING "" 
   201                              <1> %define G_QUEUE_INIT { NULL, NULL, 0 } 
   202                              <1> %define G_CSET_A_2_Z	"ABCDEFGHIJKLMNOPQRSTUVWXYZ" 
   203                              <1> %define G_CSET_a_2_z	"abcdefghijklmnopqrstuvwxyz" 
   204                              <1> %define G_CSET_DIGITS	"0123456789" 
   205                              <1> %define G_CSET_LATINC	"\300\301\302\303\304\305\306"			"\307\310\311\312\313\314\315\316\317\320"			"\321\322\323\324\325\326"			"\330\331\332\333\334\335\336" 
   206                              <1> %define G_CSET_LATINS	"\337\340\341\342\343\344\345\346"			"\347\350\351\352\353\354\355\356\357\360"			"\361\362\363\364\365\366"			"\370\371\372\373\374\375\376\377" 
   207                              <1> %define g_spawn_async g_spawn_async_utf8 
   208                              <1> %define g_spawn_async_with_pipes g_spawn_async_with_pipes_utf8 
   209                              <1> %define g_spawn_sync g_spawn_sync_utf8 
   210                              <1> %define g_spawn_command_line_sync g_spawn_command_line_sync_utf8 
   211                              <1> %define g_spawn_command_line_async g_spawn_command_line_async_utf8 
   212                              <1> %define G_STR_DELIMITERS	"_-|> <." 
   213                              <1> %define G_USEC_PER_SEC 1000000 
   214                              <1> %define G_URI_RESERVED_CHARS_GENERIC_DELIMITERS ":/?#[]@" 
   215                              <1> %define G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS ":@" 
   216                              <1> %define G_URI_RESERVED_CHARS_ALLOWED_IN_PATH G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT "/" 
   217                              <1> %define G_URI_RESERVED_CHARS_ALLOWED_IN_USERINFO G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS ":" 
   218                              <1> %define MAXPATHLEN 1024 
   219                              <1> %define g_win32_get_package_installation_directory g_win32_get_package_installation_directory_utf8 
   220                              <1> %define g_win32_get_package_installation_subdirectory g_win32_get_package_installation_subdirectory_utf8 
   221                              <1> %define g_cclosure_marshal_BOOL__FLAGS	g_cclosure_marshal_BOOLEAN__FLAGS 
   222                              <1> %define g_cclosure_marshal_BOOL__BOXED_BOXED	g_cclosure_marshal_BOOLEAN__BOXED_BOXED 
   223                              <1> %define G_SIGNAL_FLAGS_MASK  0x7f 
   224                              <1> %define G_SIGNAL_MATCH_MASK  0x3f 
   225                              <1> %define GOBJECT_VAR extern 
   226                              <1> %define G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN "standard::is-hidden"            
   227                              <1> %define G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP "standard::is-backup"            
   228                              <1> %define G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK "standard::is-symlink"          
   229                              <1> %define G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL "standard::is-virtual"          
   230                              <1> %define G_FILE_ATTRIBUTE_STANDARD_NAME "standard::name"                      
   231                              <1> %define G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME "standard::display-name"      
   232                              <1> %define G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME "standard::edit-name"            
   233                              <1> %define G_FILE_ATTRIBUTE_STANDARD_COPY_NAME "standard::copy-name"            
   234                              <1> %define G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION "standard::description"         
   235                              <1> %define G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE "standard::content-type"      
   236                              <1> %define G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE "standard::fast-content-type"  
   237                              <1> %define G_FILE_ATTRIBUTE_STANDARD_SIZE "standard::size"                      
   238                              <1> %define G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE "standard::allocated-size"  
   239                              <1> %define G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET "standard::symlink-target"  
   240                              <1> %define G_FILE_ATTRIBUTE_STANDARD_TARGET_URI "standard::target-uri"          
   241                              <1> %define G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER "standard::sort-order"          
   242                              <1> %define G_FILE_ATTRIBUTE_ETAG_VALUE "etag::value"                  
   243                              <1> %define G_FILE_ATTRIBUTE_ID_FILE "id::file"                      
   244                              <1> %define G_FILE_ATTRIBUTE_ID_FILESYSTEM "id::filesystem"          
   245                              <1> %define G_FILE_ATTRIBUTE_ACCESS_CAN_READ "access::can-read"        
   246                              <1> %define G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE "access::can-write"      
   247                              <1> %define G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE "access::can-execute"  
   248                              <1> %define G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE "access::can-delete"    
   249                              <1> %define G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH "access::can-trash"      
   250                              <1> %define G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME "access::can-rename"    
   251                              <1> %define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT "mountable::can-mount"      
   252                              <1> %define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT "mountable::can-unmount"  
   253                              <1> %define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT "mountable::can-eject"      
   254                              <1> %define G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE "mountable::unix-device"  
   255                              <1> %define G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE "mountable::unix-device-file"  
   256                              <1> %define G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI "mountable::hal-udi"          
   257                              <1> %define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START "mountable::can-start"      
   258                              <1> %define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED "mountable::can-start-degraded"      
   259                              <1> %define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP "mountable::can-stop"       
   260                              <1> %define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL "mountable::can-poll"       
   261                              <1> %define G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC "mountable::is-media-check-automatic"       
   262                              <1> %define G_FILE_ATTRIBUTE_TIME_MODIFIED "time::modified"            
   263                              <1> %define G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC "time::modified-usec"  
   264                              <1> %define G_FILE_ATTRIBUTE_TIME_ACCESS "time::access"                
   265                              <1> %define G_FILE_ATTRIBUTE_TIME_ACCESS_USEC "time::access-usec"      
   266                              <1> %define G_FILE_ATTRIBUTE_TIME_CHANGED "time::changed"              
   267                              <1> %define G_FILE_ATTRIBUTE_TIME_CHANGED_USEC "time::changed-usec"    
   268                              <1> %define G_FILE_ATTRIBUTE_TIME_CREATED "time::created"              
   269                              <1> %define G_FILE_ATTRIBUTE_TIME_CREATED_USEC "time::created-usec"    
   270                              <1> %define G_FILE_ATTRIBUTE_UNIX_DEVICE "unix::device"                
   271                              <1> %define G_FILE_ATTRIBUTE_UNIX_INODE "unix::inode"                  
   272                              <1> %define G_FILE_ATTRIBUTE_UNIX_MODE "unix::mode"                    
   273                              <1> %define G_FILE_ATTRIBUTE_UNIX_NLINK "unix::nlink"                  
   274                              <1> %define G_FILE_ATTRIBUTE_UNIX_UID "unix::uid"                      
   275                              <1> %define G_FILE_ATTRIBUTE_UNIX_GID "unix::gid"                      
   276                              <1> %define G_FILE_ATTRIBUTE_UNIX_RDEV "unix::rdev"                    
   277                              <1> %define G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE "unix::block-size"        
   278                              <1> %define G_FILE_ATTRIBUTE_UNIX_BLOCKS "unix::blocks"                
   279                              <1> %define G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT "unix::is-mountpoint"  
   280                              <1> %define G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE "dos::is-archive"          
   281                              <1> %define G_FILE_ATTRIBUTE_DOS_IS_SYSTEM "dos::is-system"            
   282                              <1> %define G_FILE_ATTRIBUTE_OWNER_USER "owner::user"                  
   283                              <1> %define G_FILE_ATTRIBUTE_OWNER_USER_REAL "owner::user-real"        
   284                              <1> %define G_FILE_ATTRIBUTE_OWNER_GROUP "owner::group"                
   285                              <1> %define G_FILE_ATTRIBUTE_THUMBNAIL_PATH "thumbnail::path"          
   286                              <1> %define G_FILE_ATTRIBUTE_THUMBNAILING_FAILED "thumbnail::failed"          
   287                              <1> %define G_FILE_ATTRIBUTE_FILESYSTEM_SIZE "filesystem::size"                        
   288                              <1> %define G_FILE_ATTRIBUTE_FILESYSTEM_FREE "filesystem::free"                        
   289                              <1> %define G_FILE_ATTRIBUTE_FILESYSTEM_TYPE "filesystem::type"                        
   290                              <1> %define G_FILE_ATTRIBUTE_FILESYSTEM_READONLY "filesystem::readonly"                
   291                              <1> %define G_FILE_ATTRIBUTE_GVFS_BACKEND "gvfs::backend"              
   292                              <1> %define G_FILE_ATTRIBUTE_SELINUX_CONTEXT "selinux::context"        
   293                              <1> %define G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT "trash::item-count"      
   294                              <1> %define G_FILE_ATTRIBUTE_TRASH_ORIG_PATH "trash::orig-path"      
   295                              <1> %define G_FILE_ATTRIBUTE_TRASH_DELETION_DATE "trash::deletion-date"   
   296                              <1> %define G_MODULE_IMPORT		extern 
   297                              <1> %define G_MODULE_EXPORT 
   298                              <1> %define g_module_open g_module_open_utf8 
   299                              <1> %define g_module_name g_module_name_utf8 
   300                              <1> %define G_VOLUME_MONITOR_EXTENSION_POINT_NAME "gio-volume-monitor" 
   301                              <1> %define G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME "gio-native-volume-monitor" 
   302                              <1> %define G_PROXY_EXTENSION_POINT_NAME "gio-proxy" 
   303                              <1> %define G_PROXY_RESOLVER_EXTENSION_POINT_NAME "gio-proxy-resolver" 
   304                              <1> %define G_TLS_BACKEND_EXTENSION_POINT_NAME "gio-tls-backend" 
   305                              <1> %define G_VFS_EXTENSION_POINT_NAME "gio-vfs" 
   306                              <1> %define G_VOLUME_IDENTIFIER_KIND_HAL_UDI "hal-udi" 
   307                              <1> %define G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE "unix-device" 
   308                              <1> %define G_VOLUME_IDENTIFIER_KIND_LABEL "label" 
   309                              <1> %define G_VOLUME_IDENTIFIER_KIND_UUID "uuid" 
   310                              <1> %define G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT "nfs-mount" 
   311                              <1> %define PANGO_SCALE 1024 
   312                              <1> %define PANGO_MATRIX_INIT { 1., 0., 0., 1., 0., 0. } 
   313                              <1> %define PANGO_UNKNOWN_GLYPH_WIDTH  10 
   314                              <1> %define PANGO_UNKNOWN_GLYPH_HEIGHT 14 
   315                              <1> %define PANGO_ATTR_INDEX_FROM_TEXT_BEGINNING	0 
   316                              <1> %define PANGO_ATTR_INDEX_TO_TEXT_END		G_MAXUINT 
   317                              <1> %define PANGO_RENDER_TYPE_NONE "PangoRenderNone" 
   318                              <1> %define PANGO_ENGINE_TYPE_LANG "PangoEngineLang" 
   319                              <1> %define PANGO_ENGINE_TYPE_SHAPE "PangoEngineShape" 
   320                              <1> %define PANGO_FEATURES_H 
   321                              <1> %define PANGO_VERSION_MAJOR 1 
   322                              <1> %define PANGO_VERSION_MINOR 29 
   323                              <1> %define PANGO_VERSION_MICRO 4 
   324                              <1> %define PANGO_VERSION_STRING "1.29.4" 
   325                              <1> %define __PANGO_RENDERER_H_ 
   326                              <1> %define GDKVAR extern 
   327                              <1> %define GDK_CURRENT_TIME     0L 
   328                              <1> %define GDK_PARENT_RELATIVE  1L 
   329                              <1> %define gdk_rgb_get_cmap               gdk_rgb_get_colormap 
   330                              <1> %define GDK_PIXBUF_H 
   331                              <1> %define GDK_PIXBUF_H_INSIDE 
   332                              <1> %define GDK_PIXBUF_FEATURES_H 1 
   333                              <1> %define GDK_PIXBUF_VERSION "2.24.0" 
   334                              <1> %define GDK_PIXBUF_VAR extern 
   335                              <1> %define GDK_PIXBUF_CORE_H 
   336                              <1> %define gdk_pixbuf_new_from_file gdk_pixbuf_new_from_file_utf8 
   337                              <1> %define gdk_pixbuf_new_from_file_at_size gdk_pixbuf_new_from_file_at_size_utf8 
   338                              <1> %define gdk_pixbuf_new_from_file_at_scale gdk_pixbuf_new_from_file_at_scale_utf8 
   339                              <1> %define gdk_pixbuf_save gdk_pixbuf_save_utf8 
   340                              <1> %define gdk_pixbuf_savev gdk_pixbuf_savev_utf8 
   341                              <1> %define GDK_PIXBUF_TRANSFORM_H 
   342                              <1> %define GDK_PIXBUF_ANIMATION_H 
   343                              <1> %define gdk_pixbuf_animation_new_from_file gdk_pixbuf_animation_new_from_file_utf8 
   344                              <1> %define GDK_PIXBUF_SIMPLE_ANIM_H 
   345                              <1> %define GDK_PIXBUF_IO_H 
   346                              <1> %define GDK_PIXBUF_LOADER_H 
   347                              <1> %define gdk_cursor_destroy             gdk_cursor_unref 
   348                              <1> %define GDK_MAX_TIMECOORD_AXES 128 
   349                              <1> %define gdk_gc_destroy                 g_object_unref 
   350                              <1> %define gdk_draw_pixmap                gdk_draw_drawable 
   351                              <1> %define gdk_draw_bitmap                gdk_draw_drawable 
   352                              <1> %define gdk_image_destroy              g_object_unref 
   353                              <1> %define gdk_bitmap_ref                 g_object_ref 
   354                              <1> %define gdk_bitmap_unref               g_object_unref 
   355                              <1> %define gdk_pixmap_ref                 g_object_ref 
   356                              <1> %define gdk_pixmap_unref               g_object_unref 
   357                              <1> %define gdk_window_get_size            gdk_drawable_get_size 
   358                              <1> %define gdk_window_get_type            gdk_window_get_window_type 
   359                              <1> %define gdk_window_get_colormap        gdk_drawable_get_colormap 
   360                              <1> %define gdk_window_set_colormap        gdk_drawable_set_colormap 
   361                              <1> %define gdk_window_ref                 g_object_ref 
   362                              <1> %define gdk_window_unref               g_object_unref 
   363                              <1> %define GTK_PATH_PRIO_MASK 0x0f 
   364                              <1> %define gtk_accel_group_ref	g_object_ref 
   365                              <1> %define gtk_accel_group_unref	g_object_unref 
   366                              <1> %define GTK_TYPE_INVALID G_TYPE_INVALID 
   367                              <1> %define GTK_TYPE_NONE    G_TYPE_NONE 
   368                              <1> %define GTK_TYPE_ENUM    G_TYPE_ENUM 
   369                              <1> %define GTK_TYPE_FLAGS   G_TYPE_FLAGS 
   370                              <1> %define GTK_TYPE_CHAR    G_TYPE_CHAR 
   371                              <1> %define GTK_TYPE_UCHAR   G_TYPE_UCHAR 
   372                              <1> %define GTK_TYPE_BOOL    G_TYPE_BOOLEAN 
   373                              <1> %define GTK_TYPE_INT     G_TYPE_INT 
   374                              <1> %define GTK_TYPE_UINT    G_TYPE_UINT 
   375                              <1> %define GTK_TYPE_LONG    G_TYPE_LONG 
   376                              <1> %define GTK_TYPE_ULONG   G_TYPE_ULONG 
   377                              <1> %define GTK_TYPE_FLOAT   G_TYPE_FLOAT 
   378                              <1> %define GTK_TYPE_DOUBLE  G_TYPE_DOUBLE 
   379                              <1> %define GTK_TYPE_STRING  G_TYPE_STRING 
   380                              <1> %define GTK_TYPE_BOXED   G_TYPE_BOXED 
   381                              <1> %define GTK_TYPE_POINTER G_TYPE_POINTER 
   382                              <1> %define GTK_FUNDAMENTAL_TYPE	G_TYPE_FUNDAMENTAL 
   383                              <1> %define GTK_STRUCT_OFFSET	G_STRUCT_OFFSET 
   384                              <1> %define GTK_CHECK_CAST		G_TYPE_CHECK_INSTANCE_CAST 
   385                              <1> %define GTK_CHECK_CLASS_CAST	G_TYPE_CHECK_CLASS_CAST 
   386                              <1> %define GTK_CHECK_GET_CLASS	G_TYPE_INSTANCE_GET_CLASS 
   387                              <1> %define GTK_CHECK_TYPE		G_TYPE_CHECK_INSTANCE_TYPE 
   388                              <1> %define GTK_CHECK_CLASS_TYPE	G_TYPE_CHECK_CLASS_TYPE 
   389                              <1> %define GTKVAR extern 
   390                              <1> %define GTK_OBJECT_TYPE                   G_OBJECT_TYPE 
   391                              <1> %define GTK_OBJECT_TYPE_NAME              G_OBJECT_TYPE_NAME 
   392                              <1> %define gtk_object_data_try_key	    g_quark_try_string 
   393                              <1> %define gtk_object_data_force_id    g_quark_from_string 
   394                              <1> %define gtk_rc_add_default_file gtk_rc_add_default_file_utf8 
   395                              <1> %define gtk_rc_set_default_files gtk_rc_set_default_files_utf8 
   396                              <1> %define gtk_rc_parse gtk_rc_parse_utf8 
   397                              <1> %define gtk_widget_ref g_object_ref 
   398                              <1> %define gtk_widget_unref g_object_unref 
   399                              <1> %define gtk_container_children gtk_container_get_children 
   400                              <1> %define gtk_container_border_width		gtk_container_set_border_width 
   401                              <1> %define gtk_window_set_icon_from_file gtk_window_set_icon_from_file_utf8 
   402                              <1> %define gtk_window_set_default_icon_from_file gtk_window_set_default_icon_from_file_utf8 
   403                              <1> %define gtk_window_position			gtk_window_set_position 
   404                              <1> %define gtk_label_set           gtk_label_set_text 
   405                              <1> %define gtk_accel_label_accelerator_width	gtk_accel_label_get_accel_width 
   406                              <1> %define gtk_accel_map_load gtk_accel_map_load_utf8 
   407                              <1> %define gtk_accel_map_save gtk_accel_map_save_utf8 
   408                              <1> %define GTK_BUTTONBOX_DEFAULT -1 
   409                              <1> %define gtk_binding_entry_add		gtk_binding_entry_clear 
   410                              <1> %define gtk_image_new_from_file gtk_image_new_from_file_utf8 
   411                              <1> %define gtk_image_set_from_file gtk_image_set_from_file_utf8 
   412                              <1> %define gtk_toggle_button_set_state		gtk_toggle_button_set_active 
   413                              <1> %define gtk_check_menu_item_set_state		gtk_check_menu_item_set_active 
   414                              <1> %define GTK_ENTRY_BUFFER_MAX_SIZE        G_MAXUSHORT 
   415                              <1> %define gtk_file_chooser_get_filename gtk_file_chooser_get_filename_utf8 
   416                              <1> %define gtk_file_chooser_set_filename gtk_file_chooser_set_filename_utf8 
   417                              <1> %define gtk_file_chooser_select_filename gtk_file_chooser_select_filename_utf8 
   418                              <1> %define gtk_file_chooser_unselect_filename gtk_file_chooser_unselect_filename_utf8 
   419                              <1> %define gtk_file_chooser_get_filenames gtk_file_chooser_get_filenames_utf8 
   420                              <1> %define gtk_file_chooser_set_current_folder gtk_file_chooser_set_current_folder_utf8 
   421                              <1> %define gtk_file_chooser_get_current_folder gtk_file_chooser_get_current_folder_utf8 
   422                              <1> %define gtk_file_chooser_get_preview_filename gtk_file_chooser_get_preview_filename_utf8 
   423                              <1> %define gtk_file_chooser_add_shortcut_folder gtk_file_chooser_add_shortcut_folder_utf8 
   424                              <1> %define gtk_file_chooser_remove_shortcut_folder gtk_file_chooser_remove_shortcut_folder_utf8 
   425                              <1> %define gtk_file_chooser_list_shortcut_folders gtk_file_chooser_list_shortcut_folders_utf8 
   426                              <1> %define gtk_icon_source_set_filename gtk_icon_source_set_filename_utf8 
   427                              <1> %define gtk_icon_source_get_filename gtk_icon_source_get_filename_utf8 
   428                              <1> %define gtk_icon_theme_set_search_path gtk_icon_theme_set_search_path_utf8 
   429                              <1> %define gtk_icon_theme_get_search_path gtk_icon_theme_get_search_path_utf8 
   430                              <1> %define gtk_icon_theme_append_search_path gtk_icon_theme_append_search_path_utf8 
   431                              <1> %define gtk_icon_theme_prepend_search_path gtk_icon_theme_prepend_search_path_utf8 
   432                              <1> %define gtk_icon_info_get_filename gtk_icon_info_get_filename_utf8 
   433                              <1> %define GTK_MAX_COMPOSE_LEN 7 
   434                              <1> %define GTK_PRIORITY_HIGH       G_PRIORITY_HIGH 
   435                              <1> %define GTK_PRIORITY_INTERNAL   GTK_PRIORITY_REDRAW 
   436                              <1> %define GTK_PRIORITY_DEFAULT	G_PRIORITY_DEFAULT_IDLE 
   437                              <1> %define GTK_PRIORITY_LOW	G_PRIORITY_LOW 
   438                              <1> %define GTKMAIN_C_VAR extern 
   439                              <1> %define gtk_notebook_current_page               gtk_notebook_get_current_page 
   440                              <1> %define gtk_notebook_set_page                   gtk_notebook_set_current_page 
   441                              <1> %define GTK_PAPER_NAME_A3 "iso_a3" 
   442                              <1> %define GTK_PAPER_NAME_A4 "iso_a4" 
   443                              <1> %define GTK_PAPER_NAME_A5 "iso_a5" 
   444                              <1> %define GTK_PAPER_NAME_B5 "iso_b5" 
   445                              <1> %define GTK_PAPER_NAME_LETTER "na_letter" 
   446                              <1> %define GTK_PAPER_NAME_EXECUTIVE "na_executive" 
   447                              <1> %define GTK_PAPER_NAME_LEGAL "na_legal" 
   448                              <1> %define GTK_PRINT_SETTINGS_PRINTER          "printer" 
   449                              <1> %define GTK_PRINT_SETTINGS_ORIENTATION      "orientation" 
   450                              <1> %define GTK_PRINT_SETTINGS_PAPER_FORMAT     "paper-format" 
   451                              <1> %define GTK_PRINT_SETTINGS_PAPER_WIDTH      "paper-width" 
   452                              <1> %define GTK_PRINT_SETTINGS_PAPER_HEIGHT     "paper-height" 
   453                              <1> %define GTK_PRINT_SETTINGS_N_COPIES         "n-copies" 
   454                              <1> %define GTK_PRINT_SETTINGS_DEFAULT_SOURCE   "default-source" 
   455                              <1> %define GTK_PRINT_SETTINGS_QUALITY          "quality" 
   456                              <1> %define GTK_PRINT_SETTINGS_RESOLUTION       "resolution" 
   457                              <1> %define GTK_PRINT_SETTINGS_USE_COLOR        "use-color" 
   458                              <1> %define GTK_PRINT_SETTINGS_DUPLEX           "duplex" 
   459                              <1> %define GTK_PRINT_SETTINGS_COLLATE          "collate" 
   460                              <1> %define GTK_PRINT_SETTINGS_REVERSE          "reverse" 
   461                              <1> %define GTK_PRINT_SETTINGS_MEDIA_TYPE       "media-type" 
   462                              <1> %define GTK_PRINT_SETTINGS_DITHER           "dither" 
   463                              <1> %define GTK_PRINT_SETTINGS_SCALE            "scale" 
   464                              <1> %define GTK_PRINT_SETTINGS_PRINT_PAGES      "print-pages" 
   465                              <1> %define GTK_PRINT_SETTINGS_PAGE_RANGES      "page-ranges" 
   466                              <1> %define GTK_PRINT_SETTINGS_PAGE_SET         "page-set" 
   467                              <1> %define GTK_PRINT_SETTINGS_FINISHINGS       "finishings" 
   468                              <1> %define GTK_PRINT_SETTINGS_NUMBER_UP        "number-up" 
   469                              <1> %define GTK_PRINT_SETTINGS_NUMBER_UP_LAYOUT "number-up-layout" 
   470                              <1> %define GTK_PRINT_SETTINGS_OUTPUT_BIN       "output-bin" 
   471                              <1> %define GTK_PRINT_SETTINGS_RESOLUTION_X     "resolution-x" 
   472                              <1> %define GTK_PRINT_SETTINGS_RESOLUTION_Y     "resolution-y" 
   473                              <1> %define GTK_PRINT_SETTINGS_PRINTER_LPI      "printer-lpi" 
   474                              <1> %define GTK_PRINT_SETTINGS_OUTPUT_FILE_FORMAT  "output-file-format" 
   475                              <1> %define GTK_PRINT_SETTINGS_OUTPUT_URI          "output-uri" 
   476                              <1> %define GTK_PRINT_SETTINGS_WIN32_DRIVER_VERSION "win32-driver-version" 
   477                              <1> %define GTK_PRINT_SETTINGS_WIN32_DRIVER_EXTRA   "win32-driver-extra" 
   478                              <1> %define gtk_radio_button_group gtk_radio_button_get_group 
   479                              <1> %define gtk_radio_menu_item_group gtk_radio_menu_item_get_group 
   480                              <1> %define GTK_INPUT_ERROR -1 
   481                              <1> %define gtk_spin_button_get_value_as_float gtk_spin_button_get_value 
   482                              <1> %define GTK_STOCK_ABOUT            "gtk-about" 
   483                              <1> %define GTK_STOCK_ADD              "gtk-add" 
   484                              <1> %define GTK_STOCK_APPLY            "gtk-apply" 
   485                              <1> %define GTK_STOCK_BOLD             "gtk-bold" 
   486                              <1> %define GTK_STOCK_CANCEL           "gtk-cancel" 
   487                              <1> %define GTK_STOCK_CAPS_LOCK_WARNING "gtk-caps-lock-warning" 
   488                              <1> %define GTK_STOCK_CDROM            "gtk-cdrom" 
   489                              <1> %define GTK_STOCK_CLEAR            "gtk-clear" 
   490                              <1> %define GTK_STOCK_CLOSE            "gtk-close" 
   491                              <1> %define GTK_STOCK_COLOR_PICKER     "gtk-color-picker" 
   492                              <1> %define GTK_STOCK_CONNECT          "gtk-connect" 
   493                              <1> %define GTK_STOCK_CONVERT          "gtk-convert" 
   494                              <1> %define GTK_STOCK_COPY             "gtk-copy" 
   495                              <1> %define GTK_STOCK_CUT              "gtk-cut" 
   496                              <1> %define GTK_STOCK_DELETE           "gtk-delete" 
   497                              <1> %define GTK_STOCK_DIALOG_AUTHENTICATION "gtk-dialog-authentication" 
   498                              <1> %define GTK_STOCK_DIALOG_INFO      "gtk-dialog-info" 
   499                              <1> %define GTK_STOCK_DIALOG_WARNING   "gtk-dialog-warning" 
   500                              <1> %define GTK_STOCK_DIALOG_ERROR     "gtk-dialog-error" 
   501                              <1> %define GTK_STOCK_DIALOG_QUESTION  "gtk-dialog-question" 
   502                              <1> %define GTK_STOCK_DIRECTORY        "gtk-directory" 
   503                              <1> %define GTK_STOCK_DISCARD          "gtk-discard" 
   504                              <1> %define GTK_STOCK_DISCONNECT       "gtk-disconnect" 
   505                              <1> %define GTK_STOCK_DND              "gtk-dnd" 
   506                              <1> %define GTK_STOCK_DND_MULTIPLE     "gtk-dnd-multiple" 
   507                              <1> %define GTK_STOCK_EDIT             "gtk-edit" 
   508                              <1> %define GTK_STOCK_EXECUTE          "gtk-execute" 
   509                              <1> %define GTK_STOCK_FILE             "gtk-file" 
   510                              <1> %define GTK_STOCK_FIND             "gtk-find" 
   511                              <1> %define GTK_STOCK_FIND_AND_REPLACE "gtk-find-and-replace" 
   512                              <1> %define GTK_STOCK_FLOPPY           "gtk-floppy" 
   513                              <1> %define GTK_STOCK_FULLSCREEN       "gtk-fullscreen" 
   514                              <1> %define GTK_STOCK_GOTO_BOTTOM      "gtk-goto-bottom" 
   515                              <1> %define GTK_STOCK_GOTO_FIRST       "gtk-goto-first" 
   516                              <1> %define GTK_STOCK_GOTO_LAST        "gtk-goto-last" 
   517                              <1> %define GTK_STOCK_GOTO_TOP         "gtk-goto-top" 
   518                              <1> %define GTK_STOCK_GO_BACK          "gtk-go-back" 
   519                              <1> %define GTK_STOCK_GO_DOWN          "gtk-go-down" 
   520                              <1> %define GTK_STOCK_GO_FORWARD       "gtk-go-forward" 
   521                              <1> %define GTK_STOCK_GO_UP            "gtk-go-up" 
   522                              <1> %define GTK_STOCK_HARDDISK         "gtk-harddisk" 
   523                              <1> %define GTK_STOCK_HELP             "gtk-help" 
   524                              <1> %define GTK_STOCK_HOME             "gtk-home" 
   525                              <1> %define GTK_STOCK_INDEX            "gtk-index" 
   526                              <1> %define GTK_STOCK_INDENT           "gtk-indent" 
   527                              <1> %define GTK_STOCK_INFO             "gtk-info" 
   528                              <1> %define GTK_STOCK_ITALIC           "gtk-italic" 
   529                              <1> %define GTK_STOCK_JUMP_TO          "gtk-jump-to" 
   530                              <1> %define GTK_STOCK_JUSTIFY_CENTER   "gtk-justify-center" 
   531                              <1> %define GTK_STOCK_JUSTIFY_FILL     "gtk-justify-fill" 
   532                              <1> %define GTK_STOCK_JUSTIFY_LEFT     "gtk-justify-left" 
   533                              <1> %define GTK_STOCK_JUSTIFY_RIGHT    "gtk-justify-right" 
   534                              <1> %define GTK_STOCK_LEAVE_FULLSCREEN "gtk-leave-fullscreen" 
   535                              <1> %define GTK_STOCK_MISSING_IMAGE    "gtk-missing-image" 
   536                              <1> %define GTK_STOCK_MEDIA_FORWARD    "gtk-media-forward" 
   537                              <1> %define GTK_STOCK_MEDIA_NEXT       "gtk-media-next" 
   538                              <1> %define GTK_STOCK_MEDIA_PAUSE      "gtk-media-pause" 
   539                              <1> %define GTK_STOCK_MEDIA_PLAY       "gtk-media-play" 
   540                              <1> %define GTK_STOCK_MEDIA_PREVIOUS   "gtk-media-previous" 
   541                              <1> %define GTK_STOCK_MEDIA_RECORD     "gtk-media-record" 
   542                              <1> %define GTK_STOCK_MEDIA_REWIND     "gtk-media-rewind" 
   543                              <1> %define GTK_STOCK_MEDIA_STOP       "gtk-media-stop" 
   544                              <1> %define GTK_STOCK_NETWORK          "gtk-network" 
   545                              <1> %define GTK_STOCK_NEW              "gtk-new" 
   546                              <1> %define GTK_STOCK_NO               "gtk-no" 
   547                              <1> %define GTK_STOCK_OK               "gtk-ok" 
   548                              <1> %define GTK_STOCK_OPEN             "gtk-open" 
   549                              <1> %define GTK_STOCK_ORIENTATION_PORTRAIT "gtk-orientation-portrait" 
   550                              <1> %define GTK_STOCK_ORIENTATION_LANDSCAPE "gtk-orientation-landscape" 
   551                              <1> %define GTK_STOCK_ORIENTATION_REVERSE_LANDSCAPE "gtk-orientation-reverse-landscape" 
   552                              <1> %define GTK_STOCK_ORIENTATION_REVERSE_PORTRAIT "gtk-orientation-reverse-portrait" 
   553                              <1> %define GTK_STOCK_PAGE_SETUP       "gtk-page-setup" 
   554                              <1> %define GTK_STOCK_PASTE            "gtk-paste" 
   555                              <1> %define GTK_STOCK_PREFERENCES      "gtk-preferences" 
   556                              <1> %define GTK_STOCK_PRINT            "gtk-print" 
   557                              <1> %define GTK_STOCK_PRINT_ERROR      "gtk-print-error" 
   558                              <1> %define GTK_STOCK_PRINT_PAUSED     "gtk-print-paused" 
   559                              <1> %define GTK_STOCK_PRINT_PREVIEW    "gtk-print-preview" 
   560                              <1> %define GTK_STOCK_PRINT_REPORT     "gtk-print-report" 
   561                              <1> %define GTK_STOCK_PRINT_WARNING    "gtk-print-warning" 
   562                              <1> %define GTK_STOCK_PROPERTIES       "gtk-properties" 
   563                              <1> %define GTK_STOCK_QUIT             "gtk-quit" 
   564                              <1> %define GTK_STOCK_REDO             "gtk-redo" 
   565                              <1> %define GTK_STOCK_REFRESH          "gtk-refresh" 
   566                              <1> %define GTK_STOCK_REMOVE           "gtk-remove" 
   567                              <1> %define GTK_STOCK_REVERT_TO_SAVED  "gtk-revert-to-saved" 
   568                              <1> %define GTK_STOCK_SAVE             "gtk-save" 
   569                              <1> %define GTK_STOCK_SAVE_AS          "gtk-save-as" 
   570                              <1> %define GTK_STOCK_SELECT_ALL       "gtk-select-all" 
   571                              <1> %define GTK_STOCK_SELECT_COLOR     "gtk-select-color" 
   572                              <1> %define GTK_STOCK_SELECT_FONT      "gtk-select-font" 
   573                              <1> %define GTK_STOCK_SORT_ASCENDING   "gtk-sort-ascending" 
   574                              <1> %define GTK_STOCK_SORT_DESCENDING  "gtk-sort-descending" 
   575                              <1> %define GTK_STOCK_SPELL_CHECK      "gtk-spell-check" 
   576                              <1> %define GTK_STOCK_STOP             "gtk-stop" 
   577                              <1> %define GTK_STOCK_STRIKETHROUGH    "gtk-strikethrough" 
   578                              <1> %define GTK_STOCK_UNDELETE         "gtk-undelete" 
   579                              <1> %define GTK_STOCK_UNDERLINE        "gtk-underline" 
   580                              <1> %define GTK_STOCK_UNDO             "gtk-undo" 
   581                              <1> %define GTK_STOCK_UNINDENT         "gtk-unindent" 
   582                              <1> %define GTK_STOCK_YES              "gtk-yes" 
   583                              <1> %define GTK_STOCK_ZOOM_100         "gtk-zoom-100" 
   584                              <1> %define GTK_STOCK_ZOOM_FIT         "gtk-zoom-fit" 
   585                              <1> %define GTK_STOCK_ZOOM_IN          "gtk-zoom-in" 
   586                              <1> %define GTK_STOCK_ZOOM_OUT         "gtk-zoom-out" 
   587                              <1> %define gtk_ui_manager_add_ui_from_file gtk_ui_manager_add_ui_from_file_utf8 
   588                              <1> %define gtk_file_selection_get_filename gtk_file_selection_get_filename_utf8 
   589                              <1> %define gtk_file_selection_set_filename gtk_file_selection_set_filename_utf8 
   590                              <1> %define gtk_file_selection_get_selections gtk_file_selection_get_selections_utf8 
   591                              <1> %define gtk_marshal_BOOL__NONE	gtk_marshal_BOOLEAN__VOID 
   592                              <1> %define gtk_marshal_BOOL__POINTER	gtk_marshal_BOOLEAN__POINTER 
   593                              <1> %define gtk_marshal_BOOL__POINTER_POINTER_INT_INT	gtk_marshal_BOOLEAN__POINTER_POINTER_INT_INT 
   594                              <1> %define gtk_marshal_BOOL__POINTER_INT_INT	gtk_marshal_BOOLEAN__POINTER_INT_INT 
   595                              <1> %define gtk_marshal_BOOL__POINTER_INT_INT_UINT	gtk_marshal_BOOLEAN__POINTER_INT_INT_UINT 
   596                              <1> %define gtk_marshal_BOOL__POINTER_STRING_STRING_POINTER	gtk_marshal_BOOLEAN__POINTER_STRING_STRING_POINTER 
   597                              <1> %define gtk_marshal_VOID__BOOLEAN	g_cclosure_marshal_VOID__BOOLEAN 
   598                              <1> %define gtk_marshal_NONE__BOOL	gtk_marshal_VOID__BOOLEAN 
   599                              <1> %define gtk_marshal_VOID__BOXED	g_cclosure_marshal_VOID__BOXED 
   600                              <1> %define gtk_marshal_NONE__BOXED	gtk_marshal_VOID__BOXED 
   601                              <1> %define gtk_marshal_VOID__ENUM	g_cclosure_marshal_VOID__ENUM 
   602                              <1> %define gtk_marshal_NONE__ENUM	gtk_marshal_VOID__ENUM 
   603                              <1> %define gtk_marshal_NONE__ENUM_FLOAT	gtk_marshal_VOID__ENUM_FLOAT 
   604                              <1> %define gtk_marshal_NONE__ENUM_FLOAT_BOOL	gtk_marshal_VOID__ENUM_FLOAT_BOOLEAN 
   605                              <1> %define gtk_marshal_VOID__INT	g_cclosure_marshal_VOID__INT 
   606                              <1> %define gtk_marshal_NONE__INT	gtk_marshal_VOID__INT 
   607                              <1> %define gtk_marshal_NONE__INT_INT	gtk_marshal_VOID__INT_INT 
   608                              <1> %define gtk_marshal_NONE__INT_INT_POINTER	gtk_marshal_VOID__INT_INT_POINTER 
   609                              <1> %define gtk_marshal_VOID__VOID	g_cclosure_marshal_VOID__VOID 
   610                              <1> %define gtk_marshal_NONE__NONE	gtk_marshal_VOID__VOID 
   611                              <1> %define gtk_marshal_VOID__OBJECT	g_cclosure_marshal_VOID__OBJECT 
   612                              <1> %define gtk_marshal_NONE__OBJECT	gtk_marshal_VOID__OBJECT 
   613                              <1> %define gtk_marshal_VOID__POINTER	g_cclosure_marshal_VOID__POINTER 
   614                              <1> %define gtk_marshal_NONE__POINTER	gtk_marshal_VOID__POINTER 
   615                              <1> %define gtk_marshal_NONE__POINTER_INT	gtk_marshal_VOID__POINTER_INT 
   616                              <1> %define gtk_marshal_NONE__POINTER_POINTER	gtk_marshal_VOID__POINTER_POINTER 
   617                              <1> %define gtk_marshal_NONE__POINTER_POINTER_POINTER	gtk_marshal_VOID__POINTER_POINTER_POINTER 
   618                              <1> %define gtk_marshal_NONE__POINTER_STRING_STRING	gtk_marshal_VOID__POINTER_STRING_STRING 
   619                              <1> %define gtk_marshal_NONE__POINTER_UINT	gtk_marshal_VOID__POINTER_UINT 
   620                              <1> %define gtk_marshal_NONE__POINTER_UINT_ENUM	gtk_marshal_VOID__POINTER_UINT_ENUM 
   621                              <1> %define gtk_marshal_NONE__POINTER_POINTER_UINT_UINT	gtk_marshal_VOID__POINTER_POINTER_UINT_UINT 
   622                              <1> %define gtk_marshal_NONE__POINTER_INT_INT_POINTER_UINT_UINT	gtk_marshal_VOID__POINTER_INT_INT_POINTER_UINT_UINT 
   623                              <1> %define gtk_marshal_NONE__POINTER_UINT_UINT	gtk_marshal_VOID__POINTER_UINT_UINT 
   624                              <1> %define gtk_marshal_VOID__STRING	g_cclosure_marshal_VOID__STRING 
   625                              <1> %define gtk_marshal_NONE__STRING	gtk_marshal_VOID__STRING 
   626                              <1> %define gtk_marshal_NONE__STRING_INT_POINTER	gtk_marshal_VOID__STRING_INT_POINTER 
   627                              <1> %define gtk_marshal_VOID__UINT	g_cclosure_marshal_VOID__UINT 
   628                              <1> %define gtk_marshal_NONE__UINT	gtk_marshal_VOID__UINT 
   629                              <1> %define gtk_marshal_NONE__UINT_POINTER_UINT_ENUM_ENUM_POINTER	gtk_marshal_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER 
   630                              <1> %define gtk_marshal_NONE__UINT_POINTER_UINT_UINT_ENUM	gtk_marshal_VOID__UINT_POINTER_UINT_UINT_ENUM 
   631                              <1> %define gtk_marshal_NONE__UINT_STRING	gtk_marshal_VOID__UINT_STRING 
   632                              <1> %define gtk_signal_default_marshaller	g_cclosure_marshal_VOID__VOID 
   633                              <1> %define GTK_SIGNAL_OFFSET	                      G_STRUCT_OFFSET 
   634                              <1> 
   635                              <1> 
   636                              <1> ;;structure definitions
   637                              <1> 
   638                              <1> NASMX_STRUC GTimeVal
   639                              <1> 	NASMX_RESERVE tv_sec,	uint32_t, 1
   640                              <1> 	NASMX_RESERVE tv_usec,	uint32_t, 1
   641                              <1> NASMX_ENDSTRUC
   642                              <1> 
   643                              <1> NASMX_STRUC _GArray
   644                              <1> 	NASMX_RESERVE data,	uint32_t, 1
   645                              <1> 	NASMX_RESERVE len,	uint32_t, 1
   646                              <1> NASMX_ENDSTRUC
   647                              <1> 
   648                              <1> NASMX_STRUC GByteArray
   649                              <1> 	NASMX_RESERVE data,	uint32_t, 1
   650                              <1> 	NASMX_RESERVE len,	uint32_t, 1
   651                              <1> NASMX_ENDSTRUC
   652                              <1> 
   653                              <1> NASMX_STRUC GPtrArray
   654                              <1> 	NASMX_RESERVE pdata,	uint32_t, 1
   655                              <1> 	NASMX_RESERVE len,	uint32_t, 1
   656                              <1> NASMX_ENDSTRUC
   657                              <1> 
   658                              <1> NASMX_STRUC GError
   659                              <1> 	NASMX_RESERVE domain,	uint32_t, 1
   660                              <1> 	NASMX_RESERVE code,	uint32_t, 1
   661                              <1> 	NASMX_RESERVE message,	uint32_t, 1
   662                              <1> NASMX_ENDSTRUC
   663                              <1> 
   664                              <1> NASMX_STRUC GDebugKey
   665                              <1> 	NASMX_RESERVE key,	uint32_t, 1
   666                              <1> 	NASMX_RESERVE value,	uint32_t, 1
   667                              <1> NASMX_ENDSTRUC
   668                              <1> 
   669                              <1> NASMX_STRUC GTrashStack
   670                              <1> 	NASMX_RESERVE next,	uint32_t, 1
   671                              <1> NASMX_ENDSTRUC
   672                              <1> 
   673                              <1> NASMX_STRUC GThread
   674                              <1> 	NASMX_RESERVE func,	uint32_t, 1
   675                              <1> 	NASMX_RESERVE data,	uint32_t, 1
   676                              <1> 	NASMX_RESERVE joinable, 	uint32_t, 1
   677                              <1> 	NASMX_RESERVE priority, 	uint32_t, 1
   678                              <1> NASMX_ENDSTRUC
   679                              <1> 
   680                              <1> NASMX_STRUC GThreadFunctions
   681                              <1> 	NASMX_RESERVE mutex_new, 	uint32_t, 1
   682                              <1> 	NASMX_RESERVE mutex_lock, 	uint32_t, 1
   683                              <1> 	NASMX_RESERVE mutex_trylock, 	uint32_t, 1
   684                              <1> 	NASMX_RESERVE mutex_unlock, 	uint32_t, 1
   685                              <1> 	NASMX_RESERVE mutex_free, 	uint32_t, 1
   686                              <1> 	NASMX_RESERVE cond_new, 	uint32_t, 1
   687                              <1> 	NASMX_RESERVE cond_signal, 	uint32_t, 1
   688                              <1> 	NASMX_RESERVE cond_broadcast, 	uint32_t, 1
   689                              <1> 	NASMX_RESERVE cond_wait, 	uint32_t, 1
   690                              <1> 	NASMX_RESERVE cond_timed_wait, 	uint32_t, 1
   691                              <1> 	NASMX_RESERVE cond_free, 	uint32_t, 1
   692                              <1> 	NASMX_RESERVE private_new, 	uint32_t, 1
   693                              <1> 	NASMX_RESERVE private_get, 	uint32_t, 1
   694                              <1> 	NASMX_RESERVE private_set, 	uint32_t, 1
   695                              <1> 	NASMX_RESERVE thread_create, 	uint32_t, 1
   696                              <1> 	NASMX_RESERVE thread_yield, 	uint32_t, 1
   697                              <1> 	NASMX_RESERVE thread_join, 	uint32_t, 1
   698                              <1> 	NASMX_RESERVE thread_exit, 	uint32_t, 1
   699                              <1> 	NASMX_RESERVE thread_set_priority, 	uint32_t, 1
   700                              <1> 	NASMX_RESERVE thread_self, 	uint32_t, 1
   701                              <1> 	NASMX_RESERVE thread_equal, 	uint32_t, 1
   702                              <1> NASMX_ENDSTRUC
   703                              <1> 
   704                              <1> NASMX_STRUC GStaticPrivate
   705                              <1> 	NASMX_RESERVE index,	uint32_t, 1
   706                              <1> NASMX_ENDSTRUC
   707                              <1> 
   708                              <1> NASMX_STRUC GStaticRecMutex
   709                              <1> 	NASMX_RESERVE mutex,	uint32_t, 1
   710                              <1> 	NASMX_RESERVE depth,	uint32_t, 1
   711                              <1> 	NASMX_RESERVE owner,	int8_t, 4 ; GSystemThread_size
   712                              <1> NASMX_ENDSTRUC
   713                              <1> 
   714                              <1> NASMX_STRUC GStaticRWLock
   715                              <1> 	NASMX_RESERVE mutex,	uint32_t, 1
   716                              <1> 	NASMX_RESERVE read_cond, 	uint32_t, 1
   717                              <1> 	NASMX_RESERVE write_cond, 	uint32_t, 1
   718                              <1> 	NASMX_RESERVE read_counter, 	uint32_t, 1
   719                              <1> 	NASMX_RESERVE have_writer, 	uint32_t, 1
   720                              <1> 	NASMX_RESERVE want_to_read, 	uint32_t, 1
   721                              <1> 	NASMX_RESERVE want_to_write, 	uint32_t, 1
   722                              <1> NASMX_ENDSTRUC
   723                              <1> 
   724                              <1> NASMX_STRUC GOnce
   725                              <1> 	NASMX_RESERVE status,	uint32_t, 1
   726                              <1> 	NASMX_RESERVE retval,	uint32_t, 1
   727                              <1> NASMX_ENDSTRUC
   728                              <1> 
   729                              <1> NASMX_STRUC GList
   730                              <1> 	NASMX_RESERVE data,	uint32_t, 1
   731                              <1> 	NASMX_RESERVE next,	uint32_t, 1
   732                              <1> 	NASMX_RESERVE prev,	uint32_t, 1
   733                              <1> NASMX_ENDSTRUC
   734                              <1> 
   735                              <1> NASMX_STRUC GCompletion
   736                              <1> 	NASMX_RESERVE items,	uint32_t, 1
   737                              <1> 	NASMX_RESERVE func,	uint32_t, 1
   738                              <1> 	NASMX_RESERVE prefix,	uint32_t, 1
   739                              <1> 	NASMX_RESERVE cache,	uint32_t, 1
   740                              <1> 	NASMX_RESERVE strncmp_func, 	uint32_t, 1
   741                              <1> NASMX_ENDSTRUC
   742                              <1> 
   743                              <1> NASMX_STRUC GDate
   744                              <1> 	NASMX_RESERVE julian_days, 	uint32_t, 1
   745                              <1> 	NASMX_RESERVE julian,	uint32_t, 1
   746                              <1> 	NASMX_RESERVE dmy,	uint32_t, 1
   747                              <1> 	NASMX_RESERVE day,	uint32_t, 1
   748                              <1> 	NASMX_RESERVE month,	uint32_t, 1
   749                              <1> 	NASMX_RESERVE year,	uint32_t, 1
   750                              <1> NASMX_ENDSTRUC
   751                              <1> 
   752                              <1> NASMX_STRUC GHashTableIter
   753                              <1> 	NASMX_RESERVE dummy1,	uint32_t, 1
   754                              <1> 	NASMX_RESERVE dummy2,	uint32_t, 1
   755                              <1> 	NASMX_RESERVE dummy3,	uint32_t, 1
   756                              <1> 	NASMX_RESERVE dummy4,	uint32_t, 1
   757                              <1> 	NASMX_RESERVE dummy5,	uint32_t, 1
   758                              <1> 	NASMX_RESERVE dummy6,	uint32_t, 1
   759                              <1> NASMX_ENDSTRUC
   760                              <1> 
   761                              <1> NASMX_STRUC GHookList
   762                              <1> 	NASMX_RESERVE seq_id,	uint32_t, 1
   763                              <1> 	NASMX_RESERVE hook_size, 	uint32_t, 1
   764                              <1> ;;;;.is_setup:		RESD 1
   765                              <1> 	NASMX_RESERVE hooks,	uint32_t, 1
   766                              <1> 	NASMX_RESERVE dummy3,	uint32_t, 1
   767                              <1> 	NASMX_RESERVE finalize_hook, 	uint32_t, 1
   768                              <1> 	NASMX_RESERVE dummy,	uint32_t, 2
   769                              <1> NASMX_ENDSTRUC
   770                              <1> 
   771                              <1> %macro  GHookList.hook_size__DATA__ 1
   772                              <1> ;;**TODO**
   773                              <1> ;;mov eax,%1 + GHookList.hook_size 
   774                              <1> ;;mov eax,[eax]
   775                              <1> 
   776                              <1> %endmacro
   777                              <1> 
   778                              <1> 
   779                              <1> NASMX_STRUC GHook
   780                              <1> 	NASMX_RESERVE data,	uint32_t, 1
   781                              <1> 	NASMX_RESERVE next,	uint32_t, 1
   782                              <1> 	NASMX_RESERVE prev,	uint32_t, 1
   783                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
   784                              <1> 	NASMX_RESERVE hook_id,	uint32_t, 1
   785                              <1> 	NASMX_RESERVE flags,	uint32_t, 1
   786                              <1> 	NASMX_RESERVE func,	uint32_t, 1
   787                              <1> 	NASMX_RESERVE destroy,	uint32_t, 1
   788                              <1> NASMX_ENDSTRUC
   789                              <1> 
   790                              <1> NASMX_STRUC GPollFD
   791                              <1> 	NASMX_RESERVE fd,	uint32_t, 1
   792                              <1> 	NASMX_RESERVE events,	uint16_t, 1
   793                              <1> 	NASMX_RESERVE revents,	uint16_t, 1
   794                              <1> NASMX_ENDSTRUC
   795                              <1> 
   796                              <1> NASMX_STRUC GSList
   797                              <1> 	NASMX_RESERVE data,	uint32_t, 1
   798                              <1> 	NASMX_RESERVE next,	uint32_t, 1
   799                              <1> NASMX_ENDSTRUC
   800                              <1> 
   801                              <1> NASMX_STRUC _GSource
   802                              <1> 	NASMX_RESERVE callback_data, 	uint32_t, 1
   803                              <1> 	NASMX_RESERVE callback_funcs, 	uint32_t, 1
   804                              <1> 	NASMX_RESERVE source_funcs, 	uint32_t, 1
   805                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
   806                              <1> 	NASMX_RESERVE context,	uint32_t, 1
   807                              <1> 	NASMX_RESERVE priority, 	uint32_t, 1
   808                              <1> 	NASMX_RESERVE flags,	uint32_t, 1
   809                              <1> 	NASMX_RESERVE source_id, 	uint32_t, 1
   810                              <1> 	NASMX_RESERVE poll_fds, 	uint32_t, 1
   811                              <1> 	NASMX_RESERVE prev,	uint32_t, 1
   812                              <1> 	NASMX_RESERVE next,	uint32_t, 1
   813                              <1> 	NASMX_RESERVE name,	uint32_t, 1
   814                              <1> 	NASMX_RESERVE priv,	uint32_t, 1
   815                              <1> NASMX_ENDSTRUC
   816                              <1> 
   817                              <1> NASMX_STRUC _GSourceCallbackFuncs
   818                              <1> 	NASMX_RESERVE ref,	uint32_t, 1
   819                              <1> 	NASMX_RESERVE unref,	uint32_t, 1
   820                              <1> 	NASMX_RESERVE get,	uint32_t, 1
   821                              <1> NASMX_ENDSTRUC
   822                              <1> 
   823                              <1> NASMX_STRUC _GSourceFuncs
   824                              <1> 	NASMX_RESERVE prepare,	uint32_t, 1
   825                              <1> 	NASMX_RESERVE check,	uint32_t, 1
   826                              <1> 	NASMX_RESERVE dispatch, 	uint32_t, 1
   827                              <1> 	NASMX_RESERVE finalize, 	uint32_t, 1
   828                              <1> 	NASMX_RESERVE closure_callback, uint32_t, 1
   829                              <1> 	NASMX_RESERVE closure_marshal, 	uint32_t, 1
   830                              <1> NASMX_ENDSTRUC
   831                              <1> 
   832                              <1> NASMX_STRUC GString
   833                              <1> 	NASMX_RESERVE str,	uint32_t, 1
   834                              <1> 	NASMX_RESERVE len,	uint32_t, 1
   835                              <1> 	NASMX_RESERVE allocated_len, 	uint32_t, 1
   836                              <1> NASMX_ENDSTRUC
   837                              <1> 
   838                              <1> NASMX_STRUC GIOChannel
   839                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
   840                              <1> 	NASMX_RESERVE funcs,	uint32_t, 1
   841                              <1> 	NASMX_RESERVE encoding, 	uint32_t, 1
   842                              <1> 	NASMX_RESERVE read_cd,	uint32_t, 1
   843                              <1> 	NASMX_RESERVE write_cd, 	uint32_t, 1
   844                              <1> 	NASMX_RESERVE line_term, 	uint32_t, 1
   845                              <1> 	NASMX_RESERVE line_term_len, 	uint32_t, 1
   846                              <1> 	NASMX_RESERVE buf_size, 	uint32_t, 1
   847                              <1> 	NASMX_RESERVE read_buf, 	uint32_t, 1
   848                              <1> 	NASMX_RESERVE encoded_read_buf, uint32_t, 1
   849                              <1> 	NASMX_RESERVE write_buf, 	uint32_t, 1
   850                              <1> 	NASMX_RESERVE partial_write_buf, 	int8_t, 6
   851                              <1> 	NASMX_RESERVE __PADDING1__, 	int8_t, 2
   852                              <1> 	NASMX_RESERVE use_buffer, 	uint32_t, 1
   853                              <1> ;;.do_encode:		RESD 1
   854                              <1> ;;.close_on_unref:	RESD 1
   855                              <1> ;;.is_readable:		RESD 1
   856                              <1> ;;.is_writeable:	RESD 1
   857                              <1> ;;.is_seekable:		RESD 1
   858                              <1> 	NASMX_RESERVE reserved1, 	uint32_t, 1
   859                              <1> 	NASMX_RESERVE reserved2, 	uint32_t, 1
   860                              <1> NASMX_ENDSTRUC
   861                              <1> 
   862                              <1> NASMX_STRUC GIOFuncs
   863                              <1> 	NASMX_RESERVE io_read,	uint32_t, 1
   864                              <1> 	NASMX_RESERVE io_write, 	uint32_t, 1
   865                              <1> 	NASMX_RESERVE io_seek,	uint32_t, 1
   866                              <1> 	NASMX_RESERVE io_close, 	uint32_t, 1
   867                              <1> 	NASMX_RESERVE io_create_watch, 	uint32_t, 1
   868                              <1> 	NASMX_RESERVE io_free,	uint32_t, 1
   869                              <1> 	NASMX_RESERVE io_set_flags, 	uint32_t, 1
   870                              <1> 	NASMX_RESERVE io_get_flags, 	uint32_t, 1
   871                              <1> NASMX_ENDSTRUC
   872                              <1> 
   873                              <1> NASMX_STRUC GMarkupParser
   874                              <1> 	NASMX_RESERVE start_element, 	uint32_t, 1
   875                              <1> 	NASMX_RESERVE end_element, 	uint32_t, 1
   876                              <1> 	NASMX_RESERVE text,	uint32_t, 1
   877                              <1> 	NASMX_RESERVE passthrough, 	uint32_t, 1
   878                              <1> 	NASMX_RESERVE error,	uint32_t, 1
   879                              <1> NASMX_ENDSTRUC
   880                              <1> 
   881                              <1> NASMX_STRUC GNode
   882                              <1> 	NASMX_RESERVE data,	uint32_t, 1
   883                              <1> 	NASMX_RESERVE next,	uint32_t, 1
   884                              <1> 	NASMX_RESERVE prev,	uint32_t, 1
   885                              <1> 	NASMX_RESERVE parent,	uint32_t, 1
   886                              <1> 	NASMX_RESERVE children, 	uint32_t, 1
   887                              <1> NASMX_ENDSTRUC
   888                              <1> 
   889                              <1> NASMX_STRUC GOptionEntry
   890                              <1> 	NASMX_RESERVE long_name, 	uint32_t, 1
   891                              <1> 	NASMX_RESERVE short_name, 	int8_t, 1
   892                              <1> 	NASMX_RESERVE __PADDING1__, 	int8_t, 3
   893                              <1> 	NASMX_RESERVE flags,	uint32_t, 1
   894                              <1> 	NASMX_RESERVE arg,	uint32_t, 1
   895                              <1> 	NASMX_RESERVE arg_data, 	uint32_t, 1
   896                              <1> 	NASMX_RESERVE description, 	uint32_t, 1
   897                              <1> 	NASMX_RESERVE arg_description, 	uint32_t, 1
   898                              <1> NASMX_ENDSTRUC
   899                              <1> 
   900                              <1> NASMX_STRUC GQueue
   901                              <1> 	NASMX_RESERVE head,	uint32_t, 1
   902                              <1> 	NASMX_RESERVE tail,	uint32_t, 1
   903                              <1> 	NASMX_RESERVE length,	uint32_t, 1
   904                              <1> NASMX_ENDSTRUC
   905                              <1> 
   906                              <1> NASMX_STRUC GTuples
   907                              <1> 	NASMX_RESERVE len,	uint32_t, 1
   908                              <1> NASMX_ENDSTRUC
   909                              <1> 
   910                              <1> NASMX_STRUC GScannerConfig
   911                              <1> 	NASMX_RESERVE cset_skip_characters, 	uint32_t, 1
   912                              <1> 	NASMX_RESERVE cset_identifier_first, 	uint32_t, 1
   913                              <1> 	NASMX_RESERVE cset_identifier_nth, 	uint32_t, 1
   914                              <1> 	NASMX_RESERVE cpair_comment_single, 	uint32_t, 1
   915                              <1> 	NASMX_RESERVE case_sensitive,	uint32_t, 1
   916                              <1> ;.skip_comment_multi:		RESD 1
   917                              <1> ;.skip_comment_single:		RESD 1
   918                              <1> ;.scan_comment_multi:		RESD 1
   919                              <1> ;.scan_identifier:		RESD 1
   920                              <1> ;.scan_identifier_1char:	RESD 1
   921                              <1> ;.scan_identifier_NULL:		RESD 1
   922                              <1> ;.scan_symbols:			RESD 1
   923                              <1> ;.scan_binary:			RESD 1
   924                              <1> ;.scan_octal:			RESD 1
   925                              <1> ;.scan_float:			RESD 1
   926                              <1> ;.scan_hex:			RESD 1
   927                              <1> ;.scan_hex_dollar:		RESD 1
   928                              <1> ;.scan_string_sq:		RESD 1
   929                              <1> ;.scan_string_dq:		RESD 1
   930                              <1> ;.numbers_2_int:		RESD 1
   931                              <1> ;.int_2_float:			RESD 1
   932                              <1> ;.identifier_2_string:		RESD 1
   933                              <1> ;.char_2_token:			RESD 1
   934                              <1> ;.symbol_2_token:		RESD 1
   935                              <1> ;.scope_0_fallback:		RESD 1
   936                              <1> ;.store_int64:			RESD 1
   937                              <1> 	NASMX_RESERVE padding_dummy, 	uint32_t, 1
   938                              <1> NASMX_ENDSTRUC
   939                              <1> 
   940                              <1> NASMX_STRUC GScanner
   941                              <1> 	NASMX_RESERVE user_data, 	uint32_t, 1
   942                              <1> 	NASMX_RESERVE max_parse_errors, uint32_t, 1
   943                              <1> 	NASMX_RESERVE parse_errors, 	uint32_t, 1
   944                              <1> 	NASMX_RESERVE input_name, 	uint32_t, 1
   945                              <1> 	NASMX_RESERVE qdata,	uint32_t, 1
   946                              <1> 	NASMX_RESERVE config,	uint32_t, 1
   947                              <1> 	NASMX_RESERVE token,	uint32_t, 1
   948                              <1> 	NASMX_RESERVE value,	int8_t,  4 ; GTokenValue_size
   949                              <1> 	NASMX_RESERVE line,	uint32_t, 1
   950                              <1> 	NASMX_RESERVE position, 	uint32_t, 1
   951                              <1> 	NASMX_RESERVE next_token, 	uint32_t, 1
   952                              <1> 	NASMX_RESERVE next_value, 	int8_t, 4 ; GTokenValue_size
   953                              <1> 	NASMX_RESERVE next_line, 	uint32_t, 1
   954                              <1> 	NASMX_RESERVE next_position, 	uint32_t, 1
   955                              <1> 	NASMX_RESERVE symbol_table, 	uint32_t, 1
   956                              <1> 	NASMX_RESERVE input_fd, 	uint32_t, 1
   957                              <1> 	NASMX_RESERVE text,	uint32_t, 1
   958                              <1> 	NASMX_RESERVE text_end, 	uint32_t, 1
   959                              <1> 	NASMX_RESERVE buffer,	uint32_t, 1
   960                              <1> 	NASMX_RESERVE scope_id, 	uint32_t, 1
   961                              <1> 	NASMX_RESERVE msg_handler, 	uint32_t, 1
   962                              <1> NASMX_ENDSTRUC
   963                              <1> 
   964                              <1> NASMX_STRUC GThreadPool
   965                              <1> 	NASMX_RESERVE func,		uint32_t, 1
   966                              <1> 	NASMX_RESERVE user_data, 	uint32_t, 1
   967                              <1> 	NASMX_RESERVE exclusive, 	uint32_t, 1
   968                              <1> NASMX_ENDSTRUC
   969                              <1> 
   970                              <1> NASMX_STRUC GTypeClass
   971                              <1> 	NASMX_RESERVE g_type,		uint32_t, 1
   972                              <1> NASMX_ENDSTRUC
   973                              <1> 
   974                              <1> NASMX_STRUC GTypeInstance
   975                              <1> 	NASMX_RESERVE g_class,		uint32_t, 1
   976                              <1> NASMX_ENDSTRUC
   977                              <1> 
   978                              <1> NASMX_STRUC GTypeInterface
   979                              <1> 	NASMX_RESERVE g_type,		uint32_t, 1
   980                              <1> 	NASMX_RESERVE g_instance_type, 	uint32_t, 1
   981                              <1> NASMX_ENDSTRUC
   982                              <1> 
   983                              <1> NASMX_STRUC GTypeQuery
   984                              <1> 	NASMX_RESERVE type,		uint32_t, 1
   985                              <1> 	NASMX_RESERVE type_name, 	uint32_t, 1
   986                              <1> 	NASMX_RESERVE class_size, 	uint32_t, 1
   987                              <1> 	NASMX_RESERVE instance_size, 	uint32_t, 1
   988                              <1> NASMX_ENDSTRUC
   989                              <1> 
   990                              <1> NASMX_STRUC GTypeInfo
   991                              <1> 	NASMX_RESERVE class_size, 	uint16_t, 1
   992                              <1> 	NASMX_RESERVE __PADDING1__, 	int8_t, 2
   993                              <1> 	NASMX_RESERVE base_init, 	uint32_t, 1
   994                              <1> 	NASMX_RESERVE base_finalize, 	uint32_t, 1
   995                              <1> 	NASMX_RESERVE class_init, 	uint32_t, 1
   996                              <1> 	NASMX_RESERVE class_finalize, 	uint32_t, 1
   997                              <1> 	NASMX_RESERVE class_data, 	uint32_t, 1
   998                              <1> 	NASMX_RESERVE instance_size, 	uint16_t, 1
   999                              <1> 	NASMX_RESERVE n_preallocs, 	uint16_t, 1
  1000                              <1> 	NASMX_RESERVE instance_init, 	uint32_t, 1
  1001                              <1> 	NASMX_RESERVE value_table, 	uint32_t, 1
  1002                              <1> NASMX_ENDSTRUC
  1003                              <1> 
  1004                              <1> NASMX_STRUC GTypeFundamentalInfo
  1005                              <1> 	NASMX_RESERVE type_flags, 	uint32_t, 1
  1006                              <1> NASMX_ENDSTRUC
  1007                              <1> 
  1008                              <1> NASMX_STRUC GInterfaceInfo
  1009                              <1> 	NASMX_RESERVE interface_init, 	uint32_t, 1
  1010                              <1> 	NASMX_RESERVE interface_finalize, 	uint32_t, 1
  1011                              <1> 	NASMX_RESERVE interface_data, 	uint32_t, 1
  1012                              <1> NASMX_ENDSTRUC
  1013                              <1> 
  1014                              <1> NASMX_STRUC GTypeValueTable
  1015                              <1> 	NASMX_RESERVE value_init, 	uint32_t, 1
  1016                              <1> 	NASMX_RESERVE value_free, 	uint32_t, 1
  1017                              <1> 	NASMX_RESERVE value_copy, 	uint32_t, 1
  1018                              <1> 	NASMX_RESERVE value_peek_pointer, 	uint32_t, 1
  1019                              <1> 	NASMX_RESERVE collect_format, 	uint32_t, 1
  1020                              <1> 	NASMX_RESERVE collect_value, 	uint32_t, 1
  1021                              <1> 	NASMX_RESERVE lcopy_format, 	uint32_t, 1
  1022                              <1> 	NASMX_RESERVE lcopy_value, 	uint32_t, 1
  1023                              <1> NASMX_ENDSTRUC
  1024                              <1> 
  1025                              <1> NASMX_STRUC GValue
  1026                              <1> 	NASMX_RESERVE g_type,	uint32_t, 1
  1027                              <1> 	NASMX_RESERVE __PADDING1__, 	int8_t, 4
  1028                              <1> ;;;;;UNION conversion
  1029                              <1> ;;.v_int:		RESD 1
  1030                              <1> ;;.v_uint:		RESD 1
  1031                              <1> ;;.v_long:		RESD 1
  1032                              <1> ;;.v_ulong:		RESD 1
  1033                              <1> ;;.v_int64:		RESQ 1
  1034                              <1> 	NASMX_RESERVE v_uint64_data, 	uint64_t, 2
  1035                              <1> ;;.v_float:		RESD 1
  1036                              <1> ;;.v_double:		RESD 1
  1037                              <1> ;;.v_pointer:		RESD 1
  1038                              <1> NASMX_ENDSTRUC
  1039                              <1> 
  1040                              <1> NASMX_STRUC GParamSpec
  1041                              <1> 	NASMX_RESERVE g_type_instance, 	int8_t, GTypeInstance_size
  1042                              <1> 	NASMX_RESERVE name,	uint32_t, 1
  1043                              <1> 	NASMX_RESERVE flags,	uint32_t, 1
  1044                              <1> 	NASMX_RESERVE value_type, 	uint32_t, 1
  1045                              <1> 	NASMX_RESERVE owner_type, 	uint32_t, 1
  1046                              <1> 	NASMX_RESERVE _nick,	uint32_t, 1
  1047                              <1> 	NASMX_RESERVE _blurb,	uint32_t, 1
  1048                              <1> 	NASMX_RESERVE qdata,	uint32_t, 1
  1049                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
  1050                              <1> 	NASMX_RESERVE param_id, 	uint32_t, 1
  1051                              <1> NASMX_ENDSTRUC
  1052                              <1> 
  1053                              <1> NASMX_STRUC GParamSpecClass
  1054                              <1> 	NASMX_RESERVE g_type_class, 	int8_t, GTypeClass_size
  1055                              <1> 	NASMX_RESERVE value_type, 	uint32_t, 1
  1056                              <1> 	NASMX_RESERVE finalize, 	uint32_t, 1
  1057                              <1> 	NASMX_RESERVE value_set_default, 	uint32_t, 1
  1058                              <1> 	NASMX_RESERVE value_validate, 	uint32_t, 1
  1059                              <1> 	NASMX_RESERVE values_cmp, 	uint32_t, 1
  1060                              <1> NASMX_ENDSTRUC
  1061                              <1> 
  1062                              <1> NASMX_STRUC GParameter
  1063                              <1> 	NASMX_RESERVE name,	uint32_t, 1
  1064                              <1> 	NASMX_RESERVE value,	int8_t, GValue_size
  1065                              <1> NASMX_ENDSTRUC
  1066                              <1> 
  1067                              <1> NASMX_STRUC GParamSpecTypeInfo
  1068                              <1> 	NASMX_RESERVE instance_size, 	uint16_t, 1
  1069                              <1> 	NASMX_RESERVE n_preallocs, 	uint16_t, 1
  1070                              <1> 	NASMX_RESERVE instance_init, 	uint32_t, 1
  1071                              <1> 	NASMX_RESERVE value_type, 	uint32_t, 1
  1072                              <1> 	NASMX_RESERVE finalize, 	uint32_t, 1
  1073                              <1> 	NASMX_RESERVE value_set_default, 	uint32_t, 1
  1074                              <1> 	NASMX_RESERVE value_validate, 	uint32_t, 1
  1075                              <1> 	NASMX_RESERVE values_cmp, 	uint32_t, 1
  1076                              <1> NASMX_ENDSTRUC
  1077                              <1> 
  1078                              <1> NASMX_STRUC GClosureNotifyData
  1079                              <1> 	NASMX_RESERVE data,	uint32_t, 1
  1080                              <1> 	NASMX_RESERVE notify,	uint32_t, 1
  1081                              <1> NASMX_ENDSTRUC
  1082                              <1> 
  1083                              <1> NASMX_STRUC GClosure
  1084                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
  1085                              <1> ;.meta_marshal:		RESD 1
  1086                              <1> ;.n_guards:		RESD 1
  1087                              <1> ;.n_fnotifiers:		RESD 1
  1088                              <1> ;.n_inotifiers:		RESD 1
  1089                              <1> ;.in_inotify:		RESD 1
  1090                              <1> ;.floating:		RESD 1
  1091                              <1> ;.derivative_flag:		RESD 1
  1092                              <1> ;.in_marshal:		RESD 1
  1093                              <1> ;.is_invalid:		RESD 1
  1094                              <1> 	NASMX_RESERVE marshal,	uint32_t, 1
  1095                              <1> 	NASMX_RESERVE data,	uint32_t, 1
  1096                              <1> 	NASMX_RESERVE notifiers, 	uint32_t, 1
  1097                              <1> NASMX_ENDSTRUC
  1098                              <1> 
  1099                              <1> NASMX_STRUC GCClosure
  1100                              <1> 	NASMX_RESERVE closure,	int8_t, GClosure_size
  1101                              <1> 	NASMX_RESERVE callback, 	uint32_t, 1
  1102                              <1> NASMX_ENDSTRUC
  1103                              <1> 
  1104                              <1> NASMX_STRUC GSignalInvocationHint
  1105                              <1> 	NASMX_RESERVE signal_id, 	uint32_t, 1
  1106                              <1> 	NASMX_RESERVE detail,	uint32_t, 1
  1107                              <1> 	NASMX_RESERVE run_type, 	uint32_t, 1
  1108                              <1> NASMX_ENDSTRUC
  1109                              <1> 
  1110                              <1> NASMX_STRUC GSignalQuery
  1111                              <1> 	NASMX_RESERVE signal_id, 	uint32_t, 1
  1112                              <1> 	NASMX_RESERVE signal_name, 	uint32_t, 1
  1113                              <1> 	NASMX_RESERVE itype,	uint32_t, 1
  1114                              <1> 	NASMX_RESERVE signal_flags, 	uint32_t, 1
  1115                              <1> 	NASMX_RESERVE return_type, 	uint32_t, 1
  1116                              <1> 	NASMX_RESERVE n_params, 	uint32_t, 1
  1117                              <1> 	NASMX_RESERVE param_types, 	uint32_t, 1
  1118                              <1> NASMX_ENDSTRUC
  1119                              <1> 
  1120                              <1> NASMX_STRUC GObject
  1121                              <1> 	NASMX_RESERVE g_type_instance, 	int8_t, GTypeInstance_size
  1122                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
  1123                              <1> 	NASMX_RESERVE qdata,	uint32_t, 1
  1124                              <1> NASMX_ENDSTRUC
  1125                              <1> 
  1126                              <1> NASMX_STRUC GObjectClass
  1127                              <1> 	NASMX_RESERVE g_type_class, 	int8_t, GTypeClass_size
  1128                              <1> 	NASMX_RESERVE construct_properties, 	uint32_t, 1
  1129                              <1> 	NASMX_RESERVE constructor, 	uint32_t, 1
  1130                              <1> 	NASMX_RESERVE set_property, 	uint32_t, 1
  1131                              <1> 	NASMX_RESERVE get_property, 	uint32_t, 1
  1132                              <1> 	NASMX_RESERVE dispose,	uint32_t, 1
  1133                              <1> 	NASMX_RESERVE finalize, 	uint32_t, 1
  1134                              <1> 	NASMX_RESERVE dispatch_properties_changed, 	uint32_t, 1
  1135                              <1> 	NASMX_RESERVE notify,	uint32_t, 1
  1136                              <1> 	NASMX_RESERVE constructed, 	uint32_t, 1
  1137                              <1> 	NASMX_RESERVE flags,	uint32_t, 1
  1138                              <1> 	NASMX_RESERVE pdummy,	uint32_t, 6
  1139                              <1> NASMX_ENDSTRUC
  1140                              <1> 
  1141                              <1> NASMX_STRUC GObjectConstructParam
  1142                              <1> 	NASMX_RESERVE pspec,	uint32_t, 1
  1143                              <1> 	NASMX_RESERVE value,	uint32_t, 1
  1144                              <1> NASMX_ENDSTRUC
  1145                              <1> 
  1146                              <1> NASMX_STRUC GEnumClass
  1147                              <1> 	NASMX_RESERVE g_type_class, 	int8_t, GTypeClass_size
  1148                              <1> 	NASMX_RESERVE minimum,	uint32_t, 1
  1149                              <1> 	NASMX_RESERVE maximum,	uint32_t, 1
  1150                              <1> 	NASMX_RESERVE n_values, 	uint32_t, 1
  1151                              <1> 	NASMX_RESERVE values,	uint32_t, 1
  1152                              <1> NASMX_ENDSTRUC
  1153                              <1> 
  1154                              <1> NASMX_STRUC GFlagsClass
  1155                              <1> 	NASMX_RESERVE g_type_class, 	int8_t, GTypeClass_size
  1156                              <1> 	NASMX_RESERVE mask,	uint32_t, 1
  1157                              <1> 	NASMX_RESERVE n_values, 	uint32_t, 1
  1158                              <1> 	NASMX_RESERVE values,	uint32_t, 1
  1159                              <1> NASMX_ENDSTRUC
  1160                              <1> 
  1161                              <1> NASMX_STRUC GEnumValue
  1162                              <1> 	NASMX_RESERVE value,	uint32_t, 1
  1163                              <1> 	NASMX_RESERVE value_name, 	uint32_t, 1
  1164                              <1> 	NASMX_RESERVE value_nick, 	uint32_t, 1
  1165                              <1> NASMX_ENDSTRUC
  1166                              <1> 
  1167                              <1> NASMX_STRUC GFlagsValue
  1168                              <1> 	NASMX_RESERVE value,	uint32_t, 1
  1169                              <1> 	NASMX_RESERVE value_name, 	uint32_t, 1
  1170                              <1> 	NASMX_RESERVE value_nick, 	uint32_t, 1
  1171                              <1> NASMX_ENDSTRUC
  1172                              <1> 
  1173                              <1> NASMX_STRUC GParamSpecChar
  1174                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1175                              <1> 	NASMX_RESERVE minimum,	int8_t, 1
  1176                              <1> 	NASMX_RESERVE maximum,	int8_t, 1
  1177                              <1> 	NASMX_RESERVE default_value, 	int8_t, 1
  1178                              <1> NASMX_ENDSTRUC
  1179                              <1> 
  1180                              <1> NASMX_STRUC GParamSpecUChar
  1181                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1182                              <1> 	NASMX_RESERVE minimum,	int8_t, 1
  1183                              <1> 	NASMX_RESERVE maximum,	int8_t, 1
  1184                              <1> 	NASMX_RESERVE default_value, 	int8_t, 1
  1185                              <1> NASMX_ENDSTRUC
  1186                              <1> 
  1187                              <1> NASMX_STRUC GParamSpecBoolean
  1188                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1189                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1190                              <1> NASMX_ENDSTRUC
  1191                              <1> 
  1192                              <1> NASMX_STRUC GParamSpecInt
  1193                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1194                              <1> 	NASMX_RESERVE minimum,	uint32_t, 1
  1195                              <1> 	NASMX_RESERVE maximum,	uint32_t, 1
  1196                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1197                              <1> NASMX_ENDSTRUC
  1198                              <1> 
  1199                              <1> NASMX_STRUC GParamSpecUInt
  1200                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1201                              <1> 	NASMX_RESERVE minimum,	uint32_t, 1
  1202                              <1> 	NASMX_RESERVE maximum,	uint32_t, 1
  1203                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1204                              <1> NASMX_ENDSTRUC
  1205                              <1> 
  1206                              <1> NASMX_STRUC GParamSpecLong
  1207                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1208                              <1> 	NASMX_RESERVE minimum,	uint32_t, 1
  1209                              <1> 	NASMX_RESERVE maximum,	uint32_t, 1
  1210                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1211                              <1> NASMX_ENDSTRUC
  1212                              <1> 
  1213                              <1> NASMX_STRUC GParamSpecULong
  1214                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1215                              <1> 	NASMX_RESERVE minimum,	uint32_t, 1
  1216                              <1> 	NASMX_RESERVE maximum,	uint32_t, 1
  1217                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1218                              <1> NASMX_ENDSTRUC
  1219                              <1> 
  1220                              <1> NASMX_STRUC GParamSpecInt64
  1221                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1222                              <1> 	NASMX_RESERVE minimum,	uint64_t, 1
  1223                              <1> 	NASMX_RESERVE maximum,	uint64_t, 1
  1224                              <1> 	NASMX_RESERVE default_value, 	uint64_t, 1
  1225                              <1> NASMX_ENDSTRUC
  1226                              <1> 
  1227                              <1> NASMX_STRUC GParamSpecUInt64
  1228                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1229                              <1> 	NASMX_RESERVE minimum,	uint64_t, 1
  1230                              <1> 	NASMX_RESERVE maximum,	uint64_t, 1
  1231                              <1> 	NASMX_RESERVE default_value, 	uint64_t, 1
  1232                              <1> NASMX_ENDSTRUC
  1233                              <1> 
  1234                              <1> NASMX_STRUC GParamSpecUnichar
  1235                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1236                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1237                              <1> NASMX_ENDSTRUC
  1238                              <1> 
  1239                              <1> NASMX_STRUC GParamSpecEnum
  1240                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1241                              <1> 	NASMX_RESERVE enum_class, 	uint32_t, 1
  1242                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1243                              <1> NASMX_ENDSTRUC
  1244                              <1> 
  1245                              <1> NASMX_STRUC GParamSpecFlags
  1246                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1247                              <1> 	NASMX_RESERVE flags_class, 	uint32_t, 1
  1248                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1249                              <1> NASMX_ENDSTRUC
  1250                              <1> 
  1251                              <1> NASMX_STRUC GParamSpecFloat
  1252                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1253                              <1> 	NASMX_RESERVE minimum,	uint32_t, 1
  1254                              <1> 	NASMX_RESERVE maximum,	uint32_t, 1
  1255                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1256                              <1> 	NASMX_RESERVE epsilon,	uint32_t, 1
  1257                              <1> NASMX_ENDSTRUC
  1258                              <1> 
  1259                              <1> NASMX_STRUC GParamSpecDouble
  1260                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1261                              <1> 	NASMX_RESERVE minimum,	uint32_t, 1
  1262                              <1> 	NASMX_RESERVE maximum,	uint32_t, 1
  1263                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1264                              <1> 	NASMX_RESERVE epsilon,	uint32_t, 1
  1265                              <1> NASMX_ENDSTRUC
  1266                              <1> 
  1267                              <1> NASMX_STRUC GParamSpecString
  1268                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1269                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1270                              <1> 	NASMX_RESERVE cset_first, 	uint32_t, 1
  1271                              <1> 	NASMX_RESERVE cset_nth, 	uint32_t, 1
  1272                              <1> 	NASMX_RESERVE substitutor, 	int8_t, 1
  1273                              <1> 	NASMX_RESERVE __PADDING1__, 	int8_t, 3
  1274                              <1> 	NASMX_RESERVE null_fold_if_empty, 	uint32_t, 1
  1275                              <1> ;.ensure_non_null:		RESD 1
  1276                              <1> NASMX_ENDSTRUC
  1277                              <1> 
  1278                              <1> NASMX_STRUC GParamSpecParam
  1279                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1280                              <1> NASMX_ENDSTRUC
  1281                              <1> 
  1282                              <1> NASMX_STRUC GParamSpecBoxed
  1283                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1284                              <1> NASMX_ENDSTRUC
  1285                              <1> 
  1286                              <1> NASMX_STRUC GParamSpecPointer
  1287                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1288                              <1> NASMX_ENDSTRUC
  1289                              <1> 
  1290                              <1> NASMX_STRUC GParamSpecValueArray
  1291                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1292                              <1> 	NASMX_RESERVE element_spec, 	uint32_t, 1
  1293                              <1> 	NASMX_RESERVE fixed_n_elements, uint32_t, 1
  1294                              <1> NASMX_ENDSTRUC
  1295                              <1> 
  1296                              <1> NASMX_STRUC GParamSpecObject
  1297                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1298                              <1> NASMX_ENDSTRUC
  1299                              <1> 
  1300                              <1> NASMX_STRUC GParamSpecOverride
  1301                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1302                              <1> 	NASMX_RESERVE overridden, 	uint32_t, 1
  1303                              <1> NASMX_ENDSTRUC
  1304                              <1> 
  1305                              <1> NASMX_STRUC GParamSpecGType
  1306                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1307                              <1> 	NASMX_RESERVE is_a_type, 	uint32_t, 1
  1308                              <1> NASMX_ENDSTRUC
  1309                              <1> 
  1310                              <1> NASMX_STRUC GParamSpecVariant
  1311                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GParamSpec_size
  1312                              <1> 	NASMX_RESERVE type,	uint32_t, 1
  1313                              <1> 	NASMX_RESERVE default_value, 	uint32_t, 1
  1314                              <1> NASMX_ENDSTRUC
  1315                              <1> 
  1316                              <1> NASMX_STRUC GTypeModule
  1317                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GObject_size
  1318                              <1> 	NASMX_RESERVE use_count, 	uint32_t, 1
  1319                              <1> 	NASMX_RESERVE type_infos, 	uint32_t, 1
  1320                              <1> 	NASMX_RESERVE interface_infos, 	uint32_t, 1
  1321                              <1> 	NASMX_RESERVE name,	uint32_t, 1
  1322                              <1> NASMX_ENDSTRUC
  1323                              <1> 
  1324                              <1> NASMX_STRUC GTypeModuleClass
  1325                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1326                              <1> 	NASMX_RESERVE load,	uint32_t, 1
  1327                              <1> 	NASMX_RESERVE unload,	uint32_t, 1
  1328                              <1> 	NASMX_RESERVE reserved1, 	uint32_t, 1
  1329                              <1> 	NASMX_RESERVE reserved2, 	uint32_t, 1
  1330                              <1> 	NASMX_RESERVE reserved3, 	uint32_t, 1
  1331                              <1> 	NASMX_RESERVE reserved4, 	uint32_t, 1
  1332                              <1> NASMX_ENDSTRUC
  1333                              <1> 
  1334                              <1> NASMX_STRUC GTypePluginClass
  1335                              <1> 	NASMX_RESERVE base_iface, 	int8_t, GTypeInterface_size
  1336                              <1> 	NASMX_RESERVE use_plugin, 	uint32_t, 1
  1337                              <1> 	NASMX_RESERVE unuse_plugin, 	uint32_t, 1
  1338                              <1> 	NASMX_RESERVE complete_type_info, 	uint32_t, 1
  1339                              <1> 	NASMX_RESERVE complete_interface_info, 	uint32_t, 1
  1340                              <1> NASMX_ENDSTRUC
  1341                              <1> 
  1342                              <1> NASMX_STRUC GValueArray
  1343                              <1> 	NASMX_RESERVE n_values, 	uint32_t, 1
  1344                              <1> 	NASMX_RESERVE values,		uint32_t, 1
  1345                              <1> 	NASMX_RESERVE n_prealloced, 	uint32_t, 1
  1346                              <1> NASMX_ENDSTRUC
  1347                              <1> 
  1348                              <1> NASMX_STRUC GAppInfoIface
  1349                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  1350                              <1> 	NASMX_RESERVE dup,		uint32_t, 1
  1351                              <1> 	NASMX_RESERVE equal,		uint32_t, 1
  1352                              <1> 	NASMX_RESERVE get_id,		uint32_t, 1
  1353                              <1> 	NASMX_RESERVE get_name, 	uint32_t, 1
  1354                              <1> 	NASMX_RESERVE get_description, 	uint32_t, 1
  1355                              <1> 	NASMX_RESERVE get_executable, 	uint32_t, 1
  1356                              <1> 	NASMX_RESERVE get_icon, 	uint32_t, 1
  1357                              <1> 	NASMX_RESERVE launch,		uint32_t, 1
  1358                              <1> 	NASMX_RESERVE supports_uris, 	uint32_t, 1
  1359                              <1> 	NASMX_RESERVE supports_files, 	uint32_t, 1
  1360                              <1> 	NASMX_RESERVE launch_uris, 	uint32_t, 1
  1361                              <1> 	NASMX_RESERVE should_show, 	uint32_t, 1
  1362                              <1> 	NASMX_RESERVE set_as_default_for_type, uint32_t, 1
  1363                              <1> 	NASMX_RESERVE set_as_default_for_extension, uint32_t, 1
  1364                              <1> 	NASMX_RESERVE add_supports_type, 	uint32_t, 1
  1365                              <1> 	NASMX_RESERVE can_remove_supports_type, uint32_t, 1
  1366                              <1> 	NASMX_RESERVE remove_supports_type, 	uint32_t, 1
  1367                              <1> 	NASMX_RESERVE can_delete, 	uint32_t, 1
  1368                              <1> 	NASMX_RESERVE do_delete, 	uint32_t, 1
  1369                              <1> 	NASMX_RESERVE get_commandline, 	uint32_t, 1
  1370                              <1> 	NASMX_RESERVE get_display_name, uint32_t, 1
  1371                              <1> 	NASMX_RESERVE set_as_last_used_for_type, uint32_t, 1
  1372                              <1> NASMX_ENDSTRUC
  1373                              <1> 
  1374                              <1> NASMX_STRUC GAppLaunchContext
  1375                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  1376                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1377                              <1> NASMX_ENDSTRUC
  1378                              <1> 
  1379                              <1> NASMX_STRUC GAppLaunchContextClass
  1380                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1381                              <1> 	NASMX_RESERVE get_display, 	uint32_t, 1
  1382                              <1> 	NASMX_RESERVE get_startup_notify_id,	uint32_t, 1
  1383                              <1> 	NASMX_RESERVE launch_failed, 	uint32_t, 1
  1384                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1385                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1386                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1387                              <1> 	NASMX_RESERVE _g_reserved4, 	uint32_t, 1
  1388                              <1> 	NASMX_RESERVE _g_reserved5, 	uint32_t, 1
  1389                              <1> NASMX_ENDSTRUC
  1390                              <1> 
  1391                              <1> NASMX_STRUC GActionInterface
  1392                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  1393                              <1> 	NASMX_RESERVE get_name, 	uint32_t, 1
  1394                              <1> 	NASMX_RESERVE get_parameter_type, 	uint32_t, 1
  1395                              <1> 	NASMX_RESERVE get_state_type, 	uint32_t, 1
  1396                              <1> 	NASMX_RESERVE get_state_hint, 	uint32_t, 1
  1397                              <1> 	NASMX_RESERVE get_enabled, 	uint32_t, 1
  1398                              <1> 	NASMX_RESERVE get_state, 	uint32_t, 1
  1399                              <1> 	NASMX_RESERVE set_state, 	uint32_t, 1
  1400                              <1> 	NASMX_RESERVE activate, 	uint32_t, 1
  1401                              <1> NASMX_ENDSTRUC
  1402                              <1> 
  1403                              <1> NASMX_STRUC GSimpleAction
  1404                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GObject_size
  1405                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1406                              <1> NASMX_ENDSTRUC
  1407                              <1> 
  1408                              <1> NASMX_STRUC GSimpleActionClass
  1409                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1410                              <1> 	NASMX_RESERVE activate, 	uint32_t, 1
  1411                              <1> NASMX_ENDSTRUC
  1412                              <1> 
  1413                              <1> NASMX_STRUC GActionGroupInterface
  1414                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  1415                              <1> 	NASMX_RESERVE has_action, 	uint32_t, 1
  1416                              <1> 	NASMX_RESERVE list_actions, 	uint32_t, 1
  1417                              <1> 	NASMX_RESERVE get_action_enabled, 	uint32_t, 1
  1418                              <1> 	NASMX_RESERVE get_action_parameter_type,	uint32_t, 1
  1419                              <1> 	NASMX_RESERVE get_action_state_type,	uint32_t, 1
  1420                              <1> 	NASMX_RESERVE get_action_state_hint,	uint32_t, 1
  1421                              <1> 	NASMX_RESERVE get_action_state,	uint32_t, 1
  1422                              <1> 	NASMX_RESERVE change_action_state,	uint32_t, 1
  1423                              <1> 	NASMX_RESERVE activate_action, 	uint32_t, 1
  1424                              <1> 	NASMX_RESERVE action_added, 	uint32_t, 1
  1425                              <1> 	NASMX_RESERVE action_removed, 	uint32_t, 1
  1426                              <1> 	NASMX_RESERVE action_enabled_changed,	uint32_t, 1
  1427                              <1> 	NASMX_RESERVE action_state_changed, 	uint32_t, 1
  1428                              <1> NASMX_ENDSTRUC
  1429                              <1> 
  1430                              <1> NASMX_STRUC GSimpleActionGroup
  1431                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GObject_size
  1432                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1433                              <1> NASMX_ENDSTRUC
  1434                              <1> 
  1435                              <1> NASMX_STRUC GSimpleActionGroupClass
  1436                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1437                              <1> NASMX_ENDSTRUC
  1438                              <1> 
  1439                              <1> NASMX_STRUC GApplication
  1440                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GObject_size
  1441                              <1> 	NASMX_RESERVE priv,	uint32_t, 1
  1442                              <1> NASMX_ENDSTRUC
  1443                              <1> 
  1444                              <1> NASMX_STRUC GApplicationClass
  1445                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1446                              <1> 	NASMX_RESERVE startup,		uint32_t, 1
  1447                              <1> 	NASMX_RESERVE activate,		uint32_t, 1
  1448                              <1> 	NASMX_RESERVE open,		uint32_t, 1
  1449                              <1> 	NASMX_RESERVE command_line, 	uint32_t, 1
  1450                              <1> 	NASMX_RESERVE local_command_line,	uint32_t, 1
  1451                              <1> 	NASMX_RESERVE before_emit, 	uint32_t, 1
  1452                              <1> 	NASMX_RESERVE after_emit, 	uint32_t, 1
  1453                              <1> 	NASMX_RESERVE add_platform_data, 	uint32_t, 1
  1454                              <1> 	NASMX_RESERVE quit_mainloop, 	uint32_t, 1
  1455                              <1> 	NASMX_RESERVE run_mainloop, 	uint32_t, 1
  1456                              <1> NASMX_ENDSTRUC
  1457                              <1> 
  1458                              <1> NASMX_STRUC GApplicationCommandLine
  1459                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GObject_size
  1460                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1461                              <1> NASMX_ENDSTRUC
  1462                              <1> 
  1463                              <1> NASMX_STRUC GApplicationCommandLineClass
  1464                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1465                              <1> 	NASMX_RESERVE print_literal, 	uint32_t, 1
  1466                              <1> 	NASMX_RESERVE printerr_literal,	uint32_t, 1
  1467                              <1> NASMX_ENDSTRUC
  1468                              <1> 
  1469                              <1> NASMX_STRUC GInitableIface
  1470                              <1> 	NASMX_RESERVE g_iface,	int8_t, GTypeInterface_size
  1471                              <1> 	NASMX_RESERVE init,	uint32_t, 1
  1472                              <1> NASMX_ENDSTRUC
  1473                              <1> 
  1474                              <1> NASMX_STRUC GAsyncInitableIface
  1475                              <1> 	NASMX_RESERVE g_iface,	int8_t, GTypeInterface_size
  1476                              <1> 	NASMX_RESERVE init_async, 	uint32_t, 1
  1477                              <1> 	NASMX_RESERVE init_finish, 	uint32_t, 1
  1478                              <1> NASMX_ENDSTRUC
  1479                              <1> 
  1480                              <1> NASMX_STRUC GAsyncResultIface
  1481                              <1> 	NASMX_RESERVE g_iface,	int8_t, GTypeInterface_size
  1482                              <1> 	NASMX_RESERVE get_user_data, 	uint32_t, 1
  1483                              <1> 	NASMX_RESERVE get_source_object,	uint32_t, 1
  1484                              <1> NASMX_ENDSTRUC
  1485                              <1> 
  1486                              <1> NASMX_STRUC GInputStream
  1487                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GObject_size
  1488                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1489                              <1> NASMX_ENDSTRUC
  1490                              <1> 
  1491                              <1> NASMX_STRUC GInputStreamClass
  1492                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1493                              <1> 	NASMX_RESERVE read_fn,		uint32_t, 1
  1494                              <1> 	NASMX_RESERVE skip,		uint32_t, 1
  1495                              <1> 	NASMX_RESERVE close_fn, 	uint32_t, 1
  1496                              <1> 	NASMX_RESERVE read_async, 	uint32_t, 1
  1497                              <1> 	NASMX_RESERVE read_finish, 	uint32_t, 1
  1498                              <1> 	NASMX_RESERVE skip_async, 	uint32_t, 1
  1499                              <1> 	NASMX_RESERVE skip_finish, 	uint32_t, 1
  1500                              <1> 	NASMX_RESERVE close_async, 	uint32_t, 1
  1501                              <1> 	NASMX_RESERVE close_finish, 	uint32_t, 1
  1502                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1503                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1504                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1505                              <1> 	NASMX_RESERVE _g_reserved4, 	uint32_t, 1
  1506                              <1> 	NASMX_RESERVE _g_reserved5, 	uint32_t, 1
  1507                              <1> NASMX_ENDSTRUC
  1508                              <1> 
  1509                              <1> NASMX_STRUC GFilterInputStream
  1510                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GInputStream_size
  1511                              <1> 	NASMX_RESERVE base_stream, 	uint32_t, 1
  1512                              <1> NASMX_ENDSTRUC
  1513                              <1> 
  1514                              <1> NASMX_STRUC GFilterInputStreamClass
  1515                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GInputStreamClass_size
  1516                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1517                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1518                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1519                              <1> NASMX_ENDSTRUC
  1520                              <1> 
  1521                              <1> NASMX_STRUC GBufferedInputStream
  1522                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GFilterInputStream_size
  1523                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1524                              <1> NASMX_ENDSTRUC
  1525                              <1> 
  1526                              <1> NASMX_STRUC GBufferedInputStreamClass
  1527                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GFilterInputStreamClass_size
  1528                              <1> 	NASMX_RESERVE fill,		uint32_t, 1
  1529                              <1> 	NASMX_RESERVE fill_async, 	uint32_t, 1
  1530                              <1> 	NASMX_RESERVE fill_finish, 	uint32_t, 1
  1531                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1532                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1533                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1534                              <1> 	NASMX_RESERVE _g_reserved4, 	uint32_t, 1
  1535                              <1> 	NASMX_RESERVE _g_reserved5, 	uint32_t, 1
  1536                              <1> NASMX_ENDSTRUC
  1537                              <1> 
  1538                              <1> NASMX_STRUC GOutputStream
  1539                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GObject_size
  1540                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1541                              <1> NASMX_ENDSTRUC
  1542                              <1> 
  1543                              <1> NASMX_STRUC GOutputStreamClass
  1544                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1545                              <1> 	NASMX_RESERVE write_fn, 	uint32_t, 1
  1546                              <1> 	NASMX_RESERVE splice,		uint32_t, 1
  1547                              <1> 	NASMX_RESERVE flush,		uint32_t, 1
  1548                              <1> 	NASMX_RESERVE close_fn, 	uint32_t, 1
  1549                              <1> 	NASMX_RESERVE write_async, 	uint32_t, 1
  1550                              <1> 	NASMX_RESERVE write_finish, 	uint32_t, 1
  1551                              <1> 	NASMX_RESERVE splice_async, 	uint32_t, 1
  1552                              <1> 	NASMX_RESERVE splice_finish, 	uint32_t, 1
  1553                              <1> 	NASMX_RESERVE flush_async, 	uint32_t, 1
  1554                              <1> 	NASMX_RESERVE flush_finish, 	uint32_t, 1
  1555                              <1> 	NASMX_RESERVE close_async, 	uint32_t, 1
  1556                              <1> 	NASMX_RESERVE close_finish, 	uint32_t, 1
  1557                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1558                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1559                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1560                              <1> 	NASMX_RESERVE _g_reserved4, 	uint32_t, 1
  1561                              <1> 	NASMX_RESERVE _g_reserved5, 	uint32_t, 1
  1562                              <1> 	NASMX_RESERVE _g_reserved6, 	uint32_t, 1
  1563                              <1> 	NASMX_RESERVE _g_reserved7, 	uint32_t, 1
  1564                              <1> 	NASMX_RESERVE _g_reserved8, 	uint32_t, 1
  1565                              <1> NASMX_ENDSTRUC
  1566                              <1> 
  1567                              <1> NASMX_STRUC GFilterOutputStream
  1568                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GOutputStream_size
  1569                              <1> 	NASMX_RESERVE base_stream, 	uint32_t, 1
  1570                              <1> NASMX_ENDSTRUC
  1571                              <1> 
  1572                              <1> NASMX_STRUC GFilterOutputStreamClass
  1573                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GOutputStreamClass_size
  1574                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1575                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1576                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1577                              <1> NASMX_ENDSTRUC
  1578                              <1> 
  1579                              <1> NASMX_STRUC GBufferedOutputStream
  1580                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GFilterOutputStream_size
  1581                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1582                              <1> NASMX_ENDSTRUC
  1583                              <1> 
  1584                              <1> NASMX_STRUC GBufferedOutputStreamClass
  1585                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GFilterOutputStreamClass_size
  1586                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1587                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1588                              <1> NASMX_ENDSTRUC
  1589                              <1> 
  1590                              <1> NASMX_STRUC GCancellable
  1591                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GObject_size
  1592                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1593                              <1> NASMX_ENDSTRUC
  1594                              <1> 
  1595                              <1> NASMX_STRUC GCancellableClass
  1596                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1597                              <1> 	NASMX_RESERVE cancelled, 	uint32_t, 1
  1598                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1599                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1600                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1601                              <1> 	NASMX_RESERVE _g_reserved4, 	uint32_t, 1
  1602                              <1> 	NASMX_RESERVE _g_reserved5, 	uint32_t, 1
  1603                              <1> NASMX_ENDSTRUC
  1604                              <1> 
  1605                              <1> NASMX_STRUC GConverterIface
  1606                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  1607                              <1> 	NASMX_RESERVE convert,		uint32_t, 1
  1608                              <1> 	NASMX_RESERVE reset,		uint32_t, 1
  1609                              <1> NASMX_ENDSTRUC
  1610                              <1> 
  1611                              <1> NASMX_STRUC GCharsetConverterClass
  1612                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1613                              <1> 
  1614                              <1> 
  1615                              <1> NASMX_ENDSTRUC
  1616                              <1> 
  1617                              <1> NASMX_STRUC GConverterInputStream
  1618                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GFilterInputStream_size
  1619                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1620                              <1> NASMX_ENDSTRUC
  1621                              <1> 
  1622                              <1> NASMX_STRUC GConverterInputStreamClass
  1623                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GFilterInputStreamClass_size
  1624                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1625                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1626                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1627                              <1> 	NASMX_RESERVE _g_reserved4, 	uint32_t, 1
  1628                              <1> 	NASMX_RESERVE _g_reserved5, 	uint32_t, 1
  1629                              <1> NASMX_ENDSTRUC
  1630                              <1> 
  1631                              <1> NASMX_STRUC GConverterOutputStream
  1632                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GFilterOutputStream_size
  1633                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1634                              <1> NASMX_ENDSTRUC
  1635                              <1> 
  1636                              <1> NASMX_STRUC GConverterOutputStreamClass
  1637                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GFilterOutputStreamClass_size
  1638                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1639                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1640                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1641                              <1> 	NASMX_RESERVE _g_reserved4, 	uint32_t, 1
  1642                              <1> 	NASMX_RESERVE _g_reserved5, 	uint32_t, 1
  1643                              <1> NASMX_ENDSTRUC
  1644                              <1> 
  1645                              <1> NASMX_STRUC GDataInputStream
  1646                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GBufferedInputStream_size
  1647                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1648                              <1> NASMX_ENDSTRUC
  1649                              <1> 
  1650                              <1> NASMX_STRUC GDataInputStreamClass
  1651                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GBufferedInputStreamClass_size
  1652                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1653                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1654                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1655                              <1> 	NASMX_RESERVE _g_reserved4, 	uint32_t, 1
  1656                              <1> 	NASMX_RESERVE _g_reserved5, 	uint32_t, 1
  1657                              <1> NASMX_ENDSTRUC
  1658                              <1> 
  1659                              <1> NASMX_STRUC GDataOutputStream
  1660                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GFilterOutputStream_size
  1661                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1662                              <1> NASMX_ENDSTRUC
  1663                              <1> 
  1664                              <1> NASMX_STRUC GDataOutputStreamClass
  1665                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GFilterOutputStreamClass_size
  1666                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1667                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1668                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1669                              <1> 	NASMX_RESERVE _g_reserved4, 	uint32_t, 1
  1670                              <1> 	NASMX_RESERVE _g_reserved5, 	uint32_t, 1
  1671                              <1> NASMX_ENDSTRUC
  1672                              <1> 
  1673                              <1> NASMX_STRUC GDBusInterfaceVTable
  1674                              <1> 	NASMX_RESERVE method_call, 	uint32_t, 1
  1675                              <1> 	NASMX_RESERVE get_property, 	uint32_t, 1
  1676                              <1> 	NASMX_RESERVE set_property, 	uint32_t, 1
  1677                              <1> NASMX_ENDSTRUC
  1678                              <1> 
  1679                              <1> NASMX_STRUC GDBusSubtreeVTable
  1680                              <1> 	NASMX_RESERVE enumerate, 	uint32_t, 1
  1681                              <1> 	NASMX_RESERVE introspect, 	uint32_t, 1
  1682                              <1> 	NASMX_RESERVE dispatch, 	uint32_t, 1
  1683                              <1> NASMX_ENDSTRUC
  1684                              <1> 
  1685                              <1> NASMX_STRUC GDBusErrorEntry
  1686                              <1> 	NASMX_RESERVE error_code, 	uint32_t, 1
  1687                              <1> 	NASMX_RESERVE dbus_error_name, 	uint32_t, 1
  1688                              <1> NASMX_ENDSTRUC
  1689                              <1> 
  1690                              <1> NASMX_STRUC GDBusAnnotationInfo
  1691                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
  1692                              <1> 	NASMX_RESERVE key,		uint32_t, 1
  1693                              <1> 	NASMX_RESERVE value,		uint32_t, 1
  1694                              <1> 	NASMX_RESERVE annotations, 	uint32_t, 1
  1695                              <1> NASMX_ENDSTRUC
  1696                              <1> 
  1697                              <1> NASMX_STRUC GDBusArgInfo
  1698                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
  1699                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  1700                              <1> 	NASMX_RESERVE signature, 	uint32_t, 1
  1701                              <1> 	NASMX_RESERVE annotations, 	uint32_t, 1
  1702                              <1> NASMX_ENDSTRUC
  1703                              <1> 
  1704                              <1> NASMX_STRUC GDBusMethodInfo
  1705                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
  1706                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  1707                              <1> 	NASMX_RESERVE in_args,		uint32_t, 1
  1708                              <1> 	NASMX_RESERVE out_args, 	uint32_t, 1
  1709                              <1> 	NASMX_RESERVE annotations, 	uint32_t, 1
  1710                              <1> NASMX_ENDSTRUC
  1711                              <1> 
  1712                              <1> NASMX_STRUC GDBusSignalInfo
  1713                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
  1714                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  1715                              <1> 	NASMX_RESERVE args,		uint32_t, 1
  1716                              <1> 	NASMX_RESERVE annotations, 	uint32_t, 1
  1717                              <1> NASMX_ENDSTRUC
  1718                              <1> 
  1719                              <1> NASMX_STRUC GDBusPropertyInfo
  1720                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
  1721                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  1722                              <1> 	NASMX_RESERVE signature, 	uint32_t, 1
  1723                              <1> 	NASMX_RESERVE flags,		uint32_t, 1
  1724                              <1> 	NASMX_RESERVE annotations, 	uint32_t, 1
  1725                              <1> NASMX_ENDSTRUC
  1726                              <1> 
  1727                              <1> NASMX_STRUC GDBusInterfaceInfo
  1728                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
  1729                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  1730                              <1> 	NASMX_RESERVE methods,		uint32_t, 1
  1731                              <1> 	NASMX_RESERVE signals,		uint32_t, 1
  1732                              <1> 	NASMX_RESERVE properties, 	uint32_t, 1
  1733                              <1> 	NASMX_RESERVE annotations, 	uint32_t, 1
  1734                              <1> NASMX_ENDSTRUC
  1735                              <1> 
  1736                              <1> NASMX_STRUC GDBusNodeInfo
  1737                              <1> 	NASMX_RESERVE ref_count, 	uint32_t, 1
  1738                              <1> 	NASMX_RESERVE path,		uint32_t, 1
  1739                              <1> 	NASMX_RESERVE interfaces, 	uint32_t, 1
  1740                              <1> 	NASMX_RESERVE nodes,		uint32_t, 1
  1741                              <1> 	NASMX_RESERVE annotations, 	uint32_t, 1
  1742                              <1> NASMX_ENDSTRUC
  1743                              <1> 
  1744                              <1> NASMX_STRUC GDBusProxy
  1745                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GObject_size
  1746                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1747                              <1> NASMX_ENDSTRUC
  1748                              <1> 
  1749                              <1> NASMX_STRUC GDBusProxyClass
  1750                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1751                              <1> 	NASMX_RESERVE g_properties_changed, 	uint32_t, 1
  1752                              <1> 	NASMX_RESERVE g_signal, 	uint32_t, 1
  1753                              <1> NASMX_ENDSTRUC
  1754                              <1> 
  1755                              <1> NASMX_STRUC GDriveIface
  1756                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  1757                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  1758                              <1> 	NASMX_RESERVE disconnected, 	uint32_t, 1
  1759                              <1> 	NASMX_RESERVE eject_button, 	uint32_t, 1
  1760                              <1> 	NASMX_RESERVE get_name, 	uint32_t, 1
  1761                              <1> 	NASMX_RESERVE get_icon, 	uint32_t, 1
  1762                              <1> 	NASMX_RESERVE has_volumes, 	uint32_t, 1
  1763                              <1> 	NASMX_RESERVE get_volumes, 	uint32_t, 1
  1764                              <1> 	NASMX_RESERVE is_media_removable, 	uint32_t, 1
  1765                              <1> 	NASMX_RESERVE has_media, 	uint32_t, 1
  1766                              <1> 	NASMX_RESERVE is_media_check_automatic, 	uint32_t, 1
  1767                              <1> 	NASMX_RESERVE can_eject, 	uint32_t, 1
  1768                              <1> 	NASMX_RESERVE can_poll_for_media, 	uint32_t, 1
  1769                              <1> 	NASMX_RESERVE eject,		uint32_t, 1
  1770                              <1> 	NASMX_RESERVE eject_finish, 	uint32_t, 1
  1771                              <1> 	NASMX_RESERVE poll_for_media, 	uint32_t, 1
  1772                              <1> 	NASMX_RESERVE poll_for_media_finish, 	uint32_t, 1
  1773                              <1> 	NASMX_RESERVE get_identifier, 	uint32_t, 1
  1774                              <1> 	NASMX_RESERVE enumerate_identifiers, 	uint32_t, 1
  1775                              <1> 	NASMX_RESERVE get_start_stop_type, 	uint32_t, 1
  1776                              <1> 	NASMX_RESERVE can_start, 	uint32_t, 1
  1777                              <1> 	NASMX_RESERVE can_start_degraded, 	uint32_t, 1
  1778                              <1> 	NASMX_RESERVE start,		uint32_t, 1
  1779                              <1> 	NASMX_RESERVE start_finish, 	uint32_t, 1
  1780                              <1> 	NASMX_RESERVE can_stop, 	uint32_t, 1
  1781                              <1> 	NASMX_RESERVE stop,		uint32_t, 1
  1782                              <1> 	NASMX_RESERVE stop_finish, 	uint32_t, 1
  1783                              <1> 	NASMX_RESERVE stop_button, 	uint32_t, 1
  1784                              <1> 	NASMX_RESERVE eject_with_operation,	uint32_t, 1
  1785                              <1> 	NASMX_RESERVE eject_with_operation_finish, uint32_t, 1
  1786                              <1> NASMX_ENDSTRUC
  1787                              <1> 
  1788                              <1> NASMX_STRUC GIconIface
  1789                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  1790                              <1> 	NASMX_RESERVE hash,		uint32_t, 1
  1791                              <1> 	NASMX_RESERVE equal,		uint32_t, 1
  1792                              <1> 	NASMX_RESERVE to_tokens, 	uint32_t, 1
  1793                              <1> 	NASMX_RESERVE from_tokens, 	uint32_t, 1
  1794                              <1> NASMX_ENDSTRUC
  1795                              <1> 
  1796                              <1> NASMX_STRUC GEmblemedIcon
  1797                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GObject_size
  1798                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1799                              <1> NASMX_ENDSTRUC
  1800                              <1> 
  1801                              <1> NASMX_STRUC GEmblemedIconClass
  1802                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1803                              <1> NASMX_ENDSTRUC
  1804                              <1> 
  1805                              <1> NASMX_STRUC GFileAttributeInfo
  1806                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  1807                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  1808                              <1> 	NASMX_RESERVE flags,		uint32_t, 1
  1809                              <1> NASMX_ENDSTRUC
  1810                              <1> 
  1811                              <1> NASMX_STRUC GFileAttributeInfoList
  1812                              <1> 	NASMX_RESERVE infos,		uint32_t, 1
  1813                              <1> 	NASMX_RESERVE n_infos,		uint32_t, 1
  1814                              <1> NASMX_ENDSTRUC
  1815                              <1> 
  1816                              <1> NASMX_STRUC GFileEnumerator
  1817                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GObject_size
  1818                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1819                              <1> NASMX_ENDSTRUC
  1820                              <1> 
  1821                              <1> NASMX_STRUC GFileEnumeratorClass
  1822                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1823                              <1> 	NASMX_RESERVE next_file, 	uint32_t, 1
  1824                              <1> 	NASMX_RESERVE close_fn, 	uint32_t, 1
  1825                              <1> 	NASMX_RESERVE next_files_async, uint32_t, 1
  1826                              <1> 	NASMX_RESERVE next_files_finish, uint32_t, 1
  1827                              <1> 	NASMX_RESERVE close_async, 	uint32_t, 1
  1828                              <1> 	NASMX_RESERVE close_finish, 	uint32_t, 1
  1829                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1830                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1831                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1832                              <1> 	NASMX_RESERVE _g_reserved4, 	uint32_t, 1
  1833                              <1> 	NASMX_RESERVE _g_reserved5, 	uint32_t, 1
  1834                              <1> 	NASMX_RESERVE _g_reserved6, 	uint32_t, 1
  1835                              <1> 	NASMX_RESERVE _g_reserved7, 	uint32_t, 1
  1836                              <1> NASMX_ENDSTRUC
  1837                              <1> 
  1838                              <1> NASMX_STRUC GFileIface
  1839                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  1840                              <1> 	NASMX_RESERVE dup,		uint32_t, 1
  1841                              <1> 	NASMX_RESERVE hash,		uint32_t, 1
  1842                              <1> 	NASMX_RESERVE equal,		uint32_t, 1
  1843                              <1> 	NASMX_RESERVE is_native, 	uint32_t, 1
  1844                              <1> 	NASMX_RESERVE has_uri_scheme, 	uint32_t, 1
  1845                              <1> 	NASMX_RESERVE get_uri_scheme, 	uint32_t, 1
  1846                              <1> 	NASMX_RESERVE get_basename, 	uint32_t, 1
  1847                              <1> 	NASMX_RESERVE get_path, 	uint32_t, 1
  1848                              <1> 	NASMX_RESERVE get_uri,		uint32_t, 1
  1849                              <1> 	NASMX_RESERVE get_parse_name, 	uint32_t, 1
  1850                              <1> 	NASMX_RESERVE get_parent, 	uint32_t, 1
  1851                              <1> 	NASMX_RESERVE prefix_matches, 	uint32_t, 1
  1852                              <1> 	NASMX_RESERVE get_relative_path, 	uint32_t, 1
  1853                              <1> 	NASMX_RESERVE resolve_relative_path, 	uint32_t, 1
  1854                              <1> 	NASMX_RESERVE get_child_for_display_name, 	uint32_t, 1
  1855                              <1> 	NASMX_RESERVE enumerate_children,	uint32_t, 1
  1856                              <1> 	NASMX_RESERVE enumerate_children_async, 	uint32_t, 1
  1857                              <1> 	NASMX_RESERVE enumerate_children_finish, 	uint32_t, 1
  1858                              <1> 	NASMX_RESERVE query_info,	uint32_t, 1
  1859                              <1> 	NASMX_RESERVE query_info_async,	uint32_t, 1
  1860                              <1> 	NASMX_RESERVE query_info_finish,	uint32_t, 1
  1861                              <1> 	NASMX_RESERVE query_filesystem_info,	uint32_t, 1
  1862                              <1> 	NASMX_RESERVE query_filesystem_info_async, 	uint32_t, 1
  1863                              <1> 	NASMX_RESERVE query_filesystem_info_finish, 	uint32_t, 1
  1864                              <1> 	NASMX_RESERVE find_enclosing_mount,	uint32_t, 1
  1865                              <1> 	NASMX_RESERVE find_enclosing_mount_async, 	uint32_t, 1
  1866                              <1> 	NASMX_RESERVE find_enclosing_mount_finish, 	uint32_t, 1
  1867                              <1> 	NASMX_RESERVE set_display_name,	uint32_t, 1
  1868                              <1> 	NASMX_RESERVE set_display_name_async,	uint32_t, 1
  1869                              <1> 	NASMX_RESERVE set_display_name_finish,	uint32_t, 1
  1870                              <1> 	NASMX_RESERVE query_settable_attributes, 	uint32_t, 1
  1871                              <1> 	NASMX_RESERVE _query_settable_attributes_async, 	uint32_t, 1
  1872                              <1> 	NASMX_RESERVE _query_settable_attributes_finish, 	uint32_t, 1
  1873                              <1> 	NASMX_RESERVE query_writable_namespaces,	uint32_t, 1
  1874                              <1> 	NASMX_RESERVE _query_writable_namespaces_async, 	uint32_t, 1
  1875                              <1> 	NASMX_RESERVE _query_writable_namespaces_finish, 	uint32_t, 1
  1876                              <1> 	NASMX_RESERVE set_attribute,	uint32_t, 1
  1877                              <1> 	NASMX_RESERVE set_attributes_from_info, uint32_t, 1
  1878                              <1> 	NASMX_RESERVE set_attributes_async, 	uint32_t, 1
  1879                              <1> 	NASMX_RESERVE set_attributes_finish, 	uint32_t, 1
  1880                              <1> 	NASMX_RESERVE read_fn,		uint32_t, 1
  1881                              <1> 	NASMX_RESERVE read_async,	uint32_t, 1
  1882                              <1> 	NASMX_RESERVE read_finish,	uint32_t, 1
  1883                              <1> 	NASMX_RESERVE append_to,	uint32_t, 1
  1884                              <1> 	NASMX_RESERVE append_to_async,	uint32_t, 1
  1885                              <1> 	NASMX_RESERVE append_to_finish, 	uint32_t, 1
  1886                              <1> 	NASMX_RESERVE create,		uint32_t, 1
  1887                              <1> 	NASMX_RESERVE create_async,	uint32_t, 1
  1888                              <1> 	NASMX_RESERVE create_finish,	uint32_t, 1
  1889                              <1> 	NASMX_RESERVE replace,		uint32_t, 1
  1890                              <1> 	NASMX_RESERVE replace_async,	uint32_t, 1
  1891                              <1> 	NASMX_RESERVE replace_finish,	uint32_t, 1
  1892                              <1> 	NASMX_RESERVE delete_file,	uint32_t, 1
  1893                              <1> 	NASMX_RESERVE _delete_file_async, 	uint32_t, 1
  1894                              <1> 	NASMX_RESERVE _delete_file_finish, 	uint32_t, 1
  1895                              <1> 	NASMX_RESERVE trash,		uint32_t, 1
  1896                              <1> 	NASMX_RESERVE _trash_async,	uint32_t, 1
  1897                              <1> 	NASMX_RESERVE _trash_finish,	uint32_t, 1
  1898                              <1> 	NASMX_RESERVE make_directory,	uint32_t, 1
  1899                              <1> 	NASMX_RESERVE _make_directory_async, 	uint32_t, 1
  1900                              <1> 	NASMX_RESERVE _make_directory_finish, 	uint32_t, 1
  1901                              <1> 	NASMX_RESERVE make_symbolic_link, 	uint32_t, 1
  1902                              <1> 	NASMX_RESERVE _make_symbolic_link_async, uint32_t, 1
  1903                              <1> 	NASMX_RESERVE _make_symbolic_link_finish, uint32_t, 1
  1904                              <1> 	NASMX_RESERVE copy,		uint32_t, 1
  1905                              <1> 	NASMX_RESERVE copy_async, 	uint32_t, 1
  1906                              <1> 	NASMX_RESERVE copy_finish, 	uint32_t, 1
  1907                              <1> 	NASMX_RESERVE move,		uint32_t, 1
  1908                              <1> 	NASMX_RESERVE _move_async, 	uint32_t, 1
  1909                              <1> 	NASMX_RESERVE _move_finish, 	uint32_t, 1
  1910                              <1> 	NASMX_RESERVE mount_mountable, 	uint32_t, 1
  1911                              <1> 	NASMX_RESERVE mount_mountable_finish,	uint32_t, 1
  1912                              <1> 	NASMX_RESERVE unmount_mountable,	uint32_t, 1
  1913                              <1> 	NASMX_RESERVE unmount_mountable_finish,	uint32_t, 1
  1914                              <1> 	NASMX_RESERVE eject_mountable,	uint32_t, 1
  1915                              <1> 	NASMX_RESERVE eject_mountable_finish, 	uint32_t, 1
  1916                              <1> 	NASMX_RESERVE mount_enclosing_volume, 	uint32_t, 1
  1917                              <1> 	NASMX_RESERVE mount_enclosing_volume_finish, uint32_t, 1
  1918                              <1> 	NASMX_RESERVE monitor_dir,	uint32_t, 1
  1919                              <1> 	NASMX_RESERVE monitor_file,	uint32_t, 1
  1920                              <1> 	NASMX_RESERVE open_readwrite,	uint32_t, 1
  1921                              <1> 	NASMX_RESERVE open_readwrite_async, 	uint32_t, 1
  1922                              <1> 	NASMX_RESERVE open_readwrite_finish, 	uint32_t, 1
  1923                              <1> 	NASMX_RESERVE create_readwrite, 	uint32_t, 1
  1924                              <1> 	NASMX_RESERVE create_readwrite_async, 	uint32_t, 1
  1925                              <1> 	NASMX_RESERVE create_readwrite_finish, 	uint32_t, 1
  1926                              <1> 	NASMX_RESERVE replace_readwrite, 	uint32_t, 1
  1927                              <1> 	NASMX_RESERVE replace_readwrite_async, 	uint32_t, 1
  1928                              <1> 	NASMX_RESERVE replace_readwrite_finish,	uint32_t, 1
  1929                              <1> 	NASMX_RESERVE start_mountable,	uint32_t, 1
  1930                              <1> 	NASMX_RESERVE start_mountable_finish, 	uint32_t, 1
  1931                              <1> 	NASMX_RESERVE stop_mountable,	uint32_t, 1
  1932                              <1> 	NASMX_RESERVE stop_mountable_finish, 	uint32_t, 1
  1933                              <1> 	NASMX_RESERVE supports_thread_contexts, uint32_t, 1
  1934                              <1> 	NASMX_RESERVE unmount_mountable_with_operation,	uint32_t, 1
  1935                              <1> 	NASMX_RESERVE unmount_mountable_with_operation_finish,	uint32_t, 1
  1936                              <1> 	NASMX_RESERVE eject_mountable_with_operation,		uint32_t, 1
  1937                              <1> 	NASMX_RESERVE eject_mountable_with_operation_finish,	uint32_t, 1
  1938                              <1> 	NASMX_RESERVE poll_mountable,	uint32_t, 1
  1939                              <1> 	NASMX_RESERVE poll_mountable_finish,	uint32_t, 1
  1940                              <1> NASMX_ENDSTRUC
  1941                              <1> 
  1942                              <1> NASMX_STRUC GFileInputStream
  1943                              <1> 	NASMX_RESERVE parent_instance, 	int8_t, GInputStream_size
  1944                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1945                              <1> NASMX_ENDSTRUC
  1946                              <1> 
  1947                              <1> NASMX_STRUC GFileInputStreamClass
  1948                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GInputStreamClass_size
  1949                              <1> 	NASMX_RESERVE tell,		uint32_t, 1
  1950                              <1> 	NASMX_RESERVE can_seek, 	uint32_t, 1
  1951                              <1> 	NASMX_RESERVE seek,		uint32_t, 1
  1952                              <1> 	NASMX_RESERVE query_info, 	uint32_t, 1
  1953                              <1> 	NASMX_RESERVE query_info_async, uint32_t, 1
  1954                              <1> 	NASMX_RESERVE query_info_finish,	uint32_t, 1
  1955                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1956                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1957                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  1958                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  1959                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  1960                              <1> NASMX_ENDSTRUC
  1961                              <1> 
  1962                              <1> NASMX_STRUC GIOStream
  1963                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  1964                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1965                              <1> NASMX_ENDSTRUC
  1966                              <1> 
  1967                              <1> NASMX_STRUC GIOStreamClass
  1968                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  1969                              <1> 	NASMX_RESERVE get_input_stream,	uint32_t, 1
  1970                              <1> 	NASMX_RESERVE get_output_stream,	uint32_t, 1
  1971                              <1> 	NASMX_RESERVE close_fn,		uint32_t, 1
  1972                              <1> 	NASMX_RESERVE close_async, 	uint32_t, 1
  1973                              <1> 	NASMX_RESERVE close_finish, 	uint32_t, 1
  1974                              <1> 	NASMX_RESERVE _g_reserved1, 	uint32_t, 1
  1975                              <1> 	NASMX_RESERVE _g_reserved2, 	uint32_t, 1
  1976                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  1977                              <1> 	NASMX_RESERVE _g_reserved4, 	uint32_t, 1
  1978                              <1> 	NASMX_RESERVE _g_reserved5, 	uint32_t, 1
  1979                              <1> 	NASMX_RESERVE _g_reserved6, 	uint32_t, 1
  1980                              <1> 	NASMX_RESERVE _g_reserved7, 	uint32_t, 1
  1981                              <1> 	NASMX_RESERVE _g_reserved8, 	uint32_t, 1
  1982                              <1> 	NASMX_RESERVE _g_reserved9, 	uint32_t, 1
  1983                              <1> 	NASMX_RESERVE _g_reserved10, 	uint32_t, 1
  1984                              <1> NASMX_ENDSTRUC
  1985                              <1> 
  1986                              <1> NASMX_STRUC GFileIOStream
  1987                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GIOStream_size
  1988                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  1989                              <1> NASMX_ENDSTRUC
  1990                              <1> 
  1991                              <1> NASMX_STRUC GFileIOStreamClass
  1992                              <1> 	NASMX_RESERVE parent_class,	int8_t, GIOStreamClass_size
  1993                              <1> 	NASMX_RESERVE tell,		uint32_t, 1
  1994                              <1> 	NASMX_RESERVE can_seek,		uint32_t, 1
  1995                              <1> 	NASMX_RESERVE seek,		uint32_t, 1
  1996                              <1> 	NASMX_RESERVE can_truncate,	uint32_t, 1
  1997                              <1> 	NASMX_RESERVE truncate_fn,	uint32_t, 1
  1998                              <1> 	NASMX_RESERVE query_info, 	uint32_t, 1
  1999                              <1> 	NASMX_RESERVE query_info_async,	uint32_t, 1
  2000                              <1> 	NASMX_RESERVE query_info_finish,	uint32_t, 1
  2001                              <1> 	NASMX_RESERVE get_etag,		uint32_t, 1
  2002                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2003                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2004                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2005                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2006                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2007                              <1> NASMX_ENDSTRUC
  2008                              <1> 
  2009                              <1> NASMX_STRUC GFileMonitor
  2010                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2011                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2012                              <1> NASMX_ENDSTRUC
  2013                              <1> 
  2014                              <1> NASMX_STRUC GFileMonitorClass
  2015                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2016                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  2017                              <1> 	NASMX_RESERVE cancel,		uint32_t, 1
  2018                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2019                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2020                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2021                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2022                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2023                              <1> NASMX_ENDSTRUC
  2024                              <1> 
  2025                              <1> NASMX_STRUC GFilenameCompleterClass
  2026                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2027                              <1> 	NASMX_RESERVE got_completion_data,	uint32_t, 1
  2028                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2029                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2030                              <1> 	NASMX_RESERVE _g_reserved3, 	uint32_t, 1
  2031                              <1> NASMX_ENDSTRUC
  2032                              <1> 
  2033                              <1> NASMX_STRUC GFileOutputStream
  2034                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GOutputStream_size
  2035                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2036                              <1> NASMX_ENDSTRUC
  2037                              <1> 
  2038                              <1> NASMX_STRUC GFileOutputStreamClass
  2039                              <1> 	NASMX_RESERVE parent_class,	int8_t, GOutputStreamClass_size
  2040                              <1> 	NASMX_RESERVE tell,		uint32_t, 1
  2041                              <1> 	NASMX_RESERVE can_seek,		uint32_t, 1
  2042                              <1> 	NASMX_RESERVE seek,		uint32_t, 1
  2043                              <1> 	NASMX_RESERVE can_truncate,	uint32_t, 1
  2044                              <1> 	NASMX_RESERVE truncate_fn,	uint32_t, 1
  2045                              <1> 	NASMX_RESERVE query_info,	uint32_t, 1
  2046                              <1> 	NASMX_RESERVE query_info_async, uint32_t, 1
  2047                              <1> 	NASMX_RESERVE query_info_finish, uint32_t, 1
  2048                              <1> 	NASMX_RESERVE get_etag,		uint32_t, 1
  2049                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2050                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2051                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2052                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2053                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2054                              <1> NASMX_ENDSTRUC
  2055                              <1> 
  2056                              <1> NASMX_STRUC GInetAddress
  2057                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2058                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2059                              <1> NASMX_ENDSTRUC
  2060                              <1> 
  2061                              <1> NASMX_STRUC GInetAddressClass
  2062                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2063                              <1> 	NASMX_RESERVE to_string,	uint32_t, 1
  2064                              <1> 	NASMX_RESERVE to_bytes,		uint32_t, 1
  2065                              <1> NASMX_ENDSTRUC
  2066                              <1> 
  2067                              <1> NASMX_STRUC GSocketAddress
  2068                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2069                              <1> NASMX_ENDSTRUC
  2070                              <1> 
  2071                              <1> NASMX_STRUC GSocketAddressClass
  2072                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GObjectClass_size
  2073                              <1> 	NASMX_RESERVE get_family,	uint32_t, 1
  2074                              <1> 	NASMX_RESERVE get_native_size,	uint32_t, 1
  2075                              <1> 	NASMX_RESERVE to_native,	uint32_t, 1
  2076                              <1> NASMX_ENDSTRUC
  2077                              <1> 
  2078                              <1> NASMX_STRUC GInetSocketAddress
  2079                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GSocketAddress_size
  2080                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2081                              <1> NASMX_ENDSTRUC
  2082                              <1> 
  2083                              <1> NASMX_STRUC GInetSocketAddressClass
  2084                              <1> 	NASMX_RESERVE parent_class,	int8_t, GSocketAddressClass_size
  2085                              <1> NASMX_ENDSTRUC
  2086                              <1> 
  2087                              <1> NASMX_STRUC GLoadableIconIface
  2088                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  2089                              <1> 	NASMX_RESERVE load,		uint32_t, 1
  2090                              <1> 	NASMX_RESERVE load_async,	uint32_t, 1
  2091                              <1> 	NASMX_RESERVE load_finish,	uint32_t, 1
  2092                              <1> NASMX_ENDSTRUC
  2093                              <1> 
  2094                              <1> NASMX_STRUC GMemoryInputStream
  2095                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GInputStream_size
  2096                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2097                              <1> NASMX_ENDSTRUC
  2098                              <1> 
  2099                              <1> NASMX_STRUC GMemoryInputStreamClass
  2100                              <1> 	NASMX_RESERVE parent_class,	int8_t, GInputStreamClass_size
  2101                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2102                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2103                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2104                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2105                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2106                              <1> NASMX_ENDSTRUC
  2107                              <1> 
  2108                              <1> NASMX_STRUC GMemoryOutputStream
  2109                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GOutputStream_size
  2110                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2111                              <1> NASMX_ENDSTRUC
  2112                              <1> 
  2113                              <1> NASMX_STRUC GMemoryOutputStreamClass
  2114                              <1> 	NASMX_RESERVE parent_class,	int8_t, GOutputStreamClass_size
  2115                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2116                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2117                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2118                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2119                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2120                              <1> NASMX_ENDSTRUC
  2121                              <1> 
  2122                              <1> NASMX_STRUC GMountIface
  2123                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  2124                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  2125                              <1> 	NASMX_RESERVE unmounted,	uint32_t, 1
  2126                              <1> 	NASMX_RESERVE get_root,		uint32_t, 1
  2127                              <1> 	NASMX_RESERVE get_name,		uint32_t, 1
  2128                              <1> 	NASMX_RESERVE get_icon,		uint32_t, 1
  2129                              <1> 	NASMX_RESERVE get_uuid,		uint32_t, 1
  2130                              <1> 	NASMX_RESERVE get_volume,	uint32_t, 1
  2131                              <1> 	NASMX_RESERVE get_drive, 	uint32_t, 1
  2132                              <1> 	NASMX_RESERVE can_unmount,	uint32_t, 1
  2133                              <1> 	NASMX_RESERVE can_eject,	uint32_t, 1
  2134                              <1> 	NASMX_RESERVE unmount,		uint32_t, 1
  2135                              <1> 	NASMX_RESERVE unmount_finish,	uint32_t, 1
  2136                              <1> 	NASMX_RESERVE eject,		uint32_t, 1
  2137                              <1> 	NASMX_RESERVE eject_finish,	uint32_t, 1
  2138                              <1> 	NASMX_RESERVE remount,		uint32_t, 1
  2139                              <1> 	NASMX_RESERVE remount_finish,	uint32_t, 1
  2140                              <1> 	NASMX_RESERVE guess_content_type,	uint32_t, 1
  2141                              <1> 	NASMX_RESERVE guess_content_type_finish,	uint32_t, 1
  2142                              <1> 	NASMX_RESERVE guess_content_type_sync,	uint32_t, 1
  2143                              <1> 	NASMX_RESERVE pre_unmount,			uint32_t, 1
  2144                              <1> 	NASMX_RESERVE unmount_with_operation,	uint32_t, 1
  2145                              <1> 	NASMX_RESERVE unmount_with_operation_finish,	uint32_t, 1
  2146                              <1> 	NASMX_RESERVE eject_with_operation,	uint32_t, 1
  2147                              <1> 	NASMX_RESERVE eject_with_operation_finish,	uint32_t, 1
  2148                              <1> 	NASMX_RESERVE get_default_location,	uint32_t, 1
  2149                              <1> NASMX_ENDSTRUC
  2150                              <1> 
  2151                              <1> NASMX_STRUC GMountOperation
  2152                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2153                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2154                              <1> NASMX_ENDSTRUC
  2155                              <1> 
  2156                              <1> NASMX_STRUC GMountOperationClass
  2157                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2158                              <1> 	NASMX_RESERVE ask_password,	uint32_t, 1
  2159                              <1> 	NASMX_RESERVE ask_question,	uint32_t, 1
  2160                              <1> 	NASMX_RESERVE reply,		uint32_t, 1
  2161                              <1> 	NASMX_RESERVE aborted,		uint32_t, 1
  2162                              <1> 	NASMX_RESERVE show_processes,	uint32_t, 1
  2163                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2164                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2165                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2166                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2167                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2168                              <1> 	NASMX_RESERVE _g_reserved6,	uint32_t, 1
  2169                              <1> 	NASMX_RESERVE _g_reserved7,	uint32_t, 1
  2170                              <1> 	NASMX_RESERVE _g_reserved8,	uint32_t, 1
  2171                              <1> 	NASMX_RESERVE _g_reserved9,	uint32_t, 1
  2172                              <1> 	NASMX_RESERVE _g_reserved10,	uint32_t, 1
  2173                              <1> NASMX_ENDSTRUC
  2174                              <1> 
  2175                              <1> NASMX_STRUC GVolumeMonitor
  2176                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2177                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2178                              <1> NASMX_ENDSTRUC
  2179                              <1> 
  2180                              <1> NASMX_STRUC GVolumeMonitorClass
  2181                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2182                              <1> 	NASMX_RESERVE volume_added,	uint32_t, 1
  2183                              <1> 	NASMX_RESERVE volume_removed,	uint32_t, 1
  2184                              <1> 	NASMX_RESERVE volume_changed,	uint32_t, 1
  2185                              <1> 	NASMX_RESERVE mount_added,	uint32_t, 1
  2186                              <1> 	NASMX_RESERVE mount_removed,	uint32_t, 1
  2187                              <1> 	NASMX_RESERVE mount_pre_unmount,	uint32_t, 1
  2188                              <1> 	NASMX_RESERVE mount_changed,	uint32_t, 1
  2189                              <1> 	NASMX_RESERVE drive_connected,	uint32_t, 1
  2190                              <1> 	NASMX_RESERVE drive_disconnected,	uint32_t, 1
  2191                              <1> 	NASMX_RESERVE drive_changed,	uint32_t, 1
  2192                              <1> 	NASMX_RESERVE is_supported,	uint32_t, 1
  2193                              <1> 	NASMX_RESERVE get_connected_drives,	uint32_t, 1
  2194                              <1> 	NASMX_RESERVE get_volumes,	uint32_t, 1
  2195                              <1> 	NASMX_RESERVE get_mounts,	uint32_t, 1
  2196                              <1> 	NASMX_RESERVE get_volume_for_uuid,	uint32_t, 1
  2197                              <1> 	NASMX_RESERVE get_mount_for_uuid,	uint32_t, 1
  2198                              <1> 	NASMX_RESERVE adopt_orphan_mount,	uint32_t, 1
  2199                              <1> 	NASMX_RESERVE drive_eject_button,	uint32_t, 1
  2200                              <1> 	NASMX_RESERVE drive_stop_button,	uint32_t, 1
  2201                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2202                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2203                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2204                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2205                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2206                              <1> 	NASMX_RESERVE _g_reserved6,	uint32_t, 1
  2207                              <1> NASMX_ENDSTRUC
  2208                              <1> 
  2209                              <1> NASMX_STRUC GNativeVolumeMonitor
  2210                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GVolumeMonitor_size
  2211                              <1> NASMX_ENDSTRUC
  2212                              <1> 
  2213                              <1> NASMX_STRUC GNativeVolumeMonitorClass
  2214                              <1> 	NASMX_RESERVE parent_class,	int8_t, GVolumeMonitorClass_size
  2215                              <1> 	NASMX_RESERVE get_mount_for_mount_path,	uint32_t, 1
  2216                              <1> NASMX_ENDSTRUC
  2217                              <1> 
  2218                              <1> NASMX_STRUC GNetworkAddress
  2219                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2220                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2221                              <1> NASMX_ENDSTRUC
  2222                              <1> 
  2223                              <1> NASMX_STRUC GNetworkAddressClass
  2224                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2225                              <1> NASMX_ENDSTRUC
  2226                              <1> 
  2227                              <1> NASMX_STRUC GNetworkService
  2228                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2229                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2230                              <1> NASMX_ENDSTRUC
  2231                              <1> 
  2232                              <1> NASMX_STRUC GNetworkServiceClass
  2233                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2234                              <1> NASMX_ENDSTRUC
  2235                              <1> 
  2236                              <1> NASMX_STRUC GPermission
  2237                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2238                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2239                              <1> NASMX_ENDSTRUC
  2240                              <1> 
  2241                              <1> NASMX_STRUC GPollableInputStreamInterface
  2242                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  2243                              <1> 	NASMX_RESERVE can_poll,		uint32_t, 1
  2244                              <1> 	NASMX_RESERVE is_readable,	uint32_t, 1
  2245                              <1> 	NASMX_RESERVE create_source,	uint32_t, 1
  2246                              <1> 	NASMX_RESERVE read_nonblocking,	uint32_t, 1
  2247                              <1> NASMX_ENDSTRUC
  2248                              <1> 
  2249                              <1> NASMX_STRUC GPollableOutputStreamInterface
  2250                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  2251                              <1> 	NASMX_RESERVE can_poll,		uint32_t, 1
  2252                              <1> 	NASMX_RESERVE is_writable,	uint32_t, 1
  2253                              <1> 	NASMX_RESERVE create_source,	uint32_t, 1
  2254                              <1> 	NASMX_RESERVE write_nonblocking,	uint32_t, 1
  2255                              <1> NASMX_ENDSTRUC
  2256                              <1> 
  2257                              <1> NASMX_STRUC GProxyInterface
  2258                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  2259                              <1> 	NASMX_RESERVE connect,		uint32_t, 1
  2260                              <1> 	NASMX_RESERVE connect_async,	uint32_t, 1
  2261                              <1> 	NASMX_RESERVE connect_finish,	uint32_t, 1
  2262                              <1> 	NASMX_RESERVE supports_hostname,	uint32_t, 1
  2263                              <1> NASMX_ENDSTRUC
  2264                              <1> 
  2265                              <1> NASMX_STRUC GProxyAddress
  2266                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GInetSocketAddress_size
  2267                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2268                              <1> NASMX_ENDSTRUC
  2269                              <1> 
  2270                              <1> NASMX_STRUC GProxyAddressClass
  2271                              <1> 	NASMX_RESERVE parent_class,	int8_t, GInetSocketAddressClass_size
  2272                              <1> NASMX_ENDSTRUC
  2273                              <1> 
  2274                              <1> NASMX_STRUC GSocketAddressEnumerator
  2275                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2276                              <1> NASMX_ENDSTRUC
  2277                              <1> 
  2278                              <1> NASMX_STRUC GSocketAddressEnumeratorClass
  2279                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2280                              <1> 	NASMX_RESERVE next,		uint32_t, 1
  2281                              <1> 	NASMX_RESERVE next_async,	uint32_t, 1
  2282                              <1> 	NASMX_RESERVE next_finish,	uint32_t, 1
  2283                              <1> NASMX_ENDSTRUC
  2284                              <1> 
  2285                              <1> NASMX_STRUC GProxyAddressEnumerator
  2286                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GSocketAddressEnumerator_size
  2287                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2288                              <1> NASMX_ENDSTRUC
  2289                              <1> 
  2290                              <1> NASMX_STRUC GProxyAddressEnumeratorClass
  2291                              <1> 	NASMX_RESERVE parent_class,	int8_t, GSocketAddressEnumeratorClass_size
  2292                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2293                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2294                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2295                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2296                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2297                              <1> 	NASMX_RESERVE _g_reserved6,	uint32_t, 1
  2298                              <1> 	NASMX_RESERVE _g_reserved7,	uint32_t, 1
  2299                              <1> NASMX_ENDSTRUC
  2300                              <1> 
  2301                              <1> NASMX_STRUC GSeekableIface
  2302                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  2303                              <1> 	NASMX_RESERVE tell,		uint32_t, 1
  2304                              <1> 	NASMX_RESERVE can_seek,		uint32_t, 1
  2305                              <1> 	NASMX_RESERVE seek,		uint32_t, 1
  2306                              <1> 	NASMX_RESERVE can_truncate,	uint32_t, 1
  2307                              <1> 	NASMX_RESERVE truncate_fn,	uint32_t, 1
  2308                              <1> NASMX_ENDSTRUC
  2309                              <1> 
  2310                              <1> NASMX_STRUC GSettingsClass
  2311                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2312                              <1> 	NASMX_RESERVE writable_changed,	uint32_t, 1
  2313                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  2314                              <1> 	NASMX_RESERVE writable_change_event,	uint32_t, 1
  2315                              <1> 	NASMX_RESERVE change_event,	uint32_t, 1
  2316                              <1> NASMX_ENDSTRUC
  2317                              <1> 
  2318                              <1> NASMX_STRUC GSettings
  2319                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2320                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2321                              <1> NASMX_ENDSTRUC
  2322                              <1> 
  2323                              <1> NASMX_STRUC GSocketClientClass
  2324                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2325                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2326                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2327                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2328                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2329                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2330                              <1> NASMX_ENDSTRUC
  2331                              <1> 
  2332                              <1> NASMX_STRUC GSocketClient
  2333                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2334                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2335                              <1> NASMX_ENDSTRUC
  2336                              <1> 
  2337                              <1> NASMX_STRUC GSocketConnectableIface
  2338                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  2339                              <1> 	NASMX_RESERVE enumerate,	uint32_t, 1
  2340                              <1> 	NASMX_RESERVE proxy_enumerate,	uint32_t, 1
  2341                              <1> NASMX_ENDSTRUC
  2342                              <1> 
  2343                              <1> NASMX_STRUC GSocketClass
  2344                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2345                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2346                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2347                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2348                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2349                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2350                              <1> 	NASMX_RESERVE _g_reserved6,	uint32_t, 1
  2351                              <1> 	NASMX_RESERVE _g_reserved7,	uint32_t, 1
  2352                              <1> 	NASMX_RESERVE _g_reserved8,	uint32_t, 1
  2353                              <1> 	NASMX_RESERVE _g_reserved9,	uint32_t, 1
  2354                              <1> 	NASMX_RESERVE _g_reserved10,	uint32_t, 1
  2355                              <1> NASMX_ENDSTRUC
  2356                              <1> 
  2357                              <1> NASMX_STRUC GSocket
  2358                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2359                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2360                              <1> NASMX_ENDSTRUC
  2361                              <1> 
  2362                              <1> NASMX_STRUC GSocketConnectionClass
  2363                              <1> 	NASMX_RESERVE parent_class,	int8_t, GIOStreamClass_size
  2364                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2365                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2366                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2367                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2368                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2369                              <1> 	NASMX_RESERVE _g_reserved6,	uint32_t, 1
  2370                              <1> NASMX_ENDSTRUC
  2371                              <1> 
  2372                              <1> NASMX_STRUC GSocketConnection
  2373                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GIOStream_size
  2374                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2375                              <1> NASMX_ENDSTRUC
  2376                              <1> 
  2377                              <1> NASMX_STRUC GSocketControlMessageClass
  2378                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2379                              <1> 	NASMX_RESERVE get_size,		uint32_t, 1
  2380                              <1> 	NASMX_RESERVE get_level,	uint32_t, 1
  2381                              <1> 	NASMX_RESERVE get_type,		uint32_t, 1
  2382                              <1> 	NASMX_RESERVE serialize,	uint32_t, 1
  2383                              <1> 	NASMX_RESERVE deserialize,	uint32_t, 1
  2384                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2385                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2386                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2387                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2388                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2389                              <1> NASMX_ENDSTRUC
  2390                              <1> 
  2391                              <1> NASMX_STRUC GSocketControlMessage
  2392                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2393                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2394                              <1> NASMX_ENDSTRUC
  2395                              <1> 
  2396                              <1> NASMX_STRUC GSocketListenerClass
  2397                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2398                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  2399                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2400                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2401                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2402                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2403                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2404                              <1> 	NASMX_RESERVE _g_reserved6,	uint32_t, 1
  2405                              <1> NASMX_ENDSTRUC
  2406                              <1> 
  2407                              <1> NASMX_STRUC GSocketListener
  2408                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2409                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2410                              <1> NASMX_ENDSTRUC
  2411                              <1> 
  2412                              <1> NASMX_STRUC GSocketServiceClass
  2413                              <1> 	NASMX_RESERVE parent_class,	int8_t, GSocketListenerClass_size
  2414                              <1> 	NASMX_RESERVE incoming,		uint32_t, 1
  2415                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2416                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2417                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2418                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2419                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2420                              <1> 	NASMX_RESERVE _g_reserved6,	uint32_t, 1
  2421                              <1> NASMX_ENDSTRUC
  2422                              <1> 
  2423                              <1> NASMX_STRUC GSocketService
  2424                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GSocketListener_size
  2425                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2426                              <1> NASMX_ENDSTRUC
  2427                              <1> 
  2428                              <1> NASMX_STRUC GTcpConnectionClass
  2429                              <1> 	NASMX_RESERVE parent_class,	int8_t, GSocketConnectionClass_size
  2430                              <1> NASMX_ENDSTRUC
  2431                              <1> 
  2432                              <1> NASMX_STRUC GTcpConnection
  2433                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GSocketConnection_size
  2434                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2435                              <1> NASMX_ENDSTRUC
  2436                              <1> 
  2437                              <1> NASMX_STRUC GTcpWrapperConnectionClass
  2438                              <1> 	NASMX_RESERVE parent_class,	int8_t, GTcpConnectionClass_size
  2439                              <1> NASMX_ENDSTRUC
  2440                              <1> 
  2441                              <1> NASMX_STRUC GTcpWrapperConnection
  2442                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GTcpConnection_size
  2443                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2444                              <1> NASMX_ENDSTRUC
  2445                              <1> 
  2446                              <1> NASMX_STRUC GThreadedSocketServiceClass
  2447                              <1> 	NASMX_RESERVE parent_class,	int8_t, GSocketServiceClass_size
  2448                              <1> 	NASMX_RESERVE run,		uint32_t, 1
  2449                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2450                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2451                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2452                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2453                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2454                              <1> NASMX_ENDSTRUC
  2455                              <1> 
  2456                              <1> NASMX_STRUC GThreadedSocketService
  2457                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GSocketService_size
  2458                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2459                              <1> NASMX_ENDSTRUC
  2460                              <1> 
  2461                              <1> NASMX_STRUC GTlsBackendInterface
  2462                              <1> 	NASMX_RESERVE g_iface,			int8_t, GTypeInterface_size
  2463                              <1> 	NASMX_RESERVE supports_tls,		uint32_t, 1
  2464                              <1> 	NASMX_RESERVE get_certificate_type,	uint32_t, 1
  2465                              <1> 	NASMX_RESERVE get_client_connection_type,	uint32_t, 1
  2466                              <1> 	NASMX_RESERVE get_server_connection_type,	uint32_t, 1
  2467                              <1> NASMX_ENDSTRUC
  2468                              <1> 
  2469                              <1> NASMX_STRUC GTlsCertificateClass
  2470                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2471                              <1> 	NASMX_RESERVE verify,		uint32_t, 1
  2472                              <1> NASMX_ENDSTRUC
  2473                              <1> 
  2474                              <1> NASMX_STRUC GTlsConnectionClass
  2475                              <1> 	NASMX_RESERVE parent_class,	int8_t, GIOStreamClass_size
  2476                              <1> 	NASMX_RESERVE accept_certificate,	uint32_t, 1
  2477                              <1> 	NASMX_RESERVE handshake,	uint32_t, 1
  2478                              <1> 	NASMX_RESERVE handshake_async,	uint32_t, 1
  2479                              <1> 	NASMX_RESERVE handshake_finish,	uint32_t, 1
  2480                              <1> NASMX_ENDSTRUC
  2481                              <1> 
  2482                              <1> NASMX_STRUC GTlsClientConnectionInterface
  2483                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  2484                              <1> NASMX_ENDSTRUC
  2485                              <1> 
  2486                              <1> NASMX_STRUC GTlsServerConnectionInterface
  2487                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  2488                              <1> NASMX_ENDSTRUC
  2489                              <1> 
  2490                              <1> NASMX_STRUC GVfs
  2491                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2492                              <1> NASMX_ENDSTRUC
  2493                              <1> 
  2494                              <1> NASMX_STRUC GVfsClass
  2495                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2496                              <1> 	NASMX_RESERVE is_active,	uint32_t, 1
  2497                              <1> 	NASMX_RESERVE get_file_for_path,	uint32_t, 1
  2498                              <1> 	NASMX_RESERVE get_file_for_uri,		uint32_t, 1
  2499                              <1> 	NASMX_RESERVE get_supported_uri_schemes,	uint32_t, 1
  2500                              <1> 	NASMX_RESERVE parse_name,	uint32_t, 1
  2501                              <1> 	NASMX_RESERVE local_file_add_info,	uint32_t, 1
  2502                              <1> 	NASMX_RESERVE add_writable_namespaces,	uint32_t, 1
  2503                              <1> 	NASMX_RESERVE local_file_set_attributes,	uint32_t, 1
  2504                              <1> 	NASMX_RESERVE local_file_removed,	uint32_t, 1
  2505                              <1> 	NASMX_RESERVE local_file_moved,	uint32_t, 1
  2506                              <1> 	NASMX_RESERVE _g_reserved1,	uint32_t, 1
  2507                              <1> 	NASMX_RESERVE _g_reserved2,	uint32_t, 1
  2508                              <1> 	NASMX_RESERVE _g_reserved3,	uint32_t, 1
  2509                              <1> 	NASMX_RESERVE _g_reserved4,	uint32_t, 1
  2510                              <1> 	NASMX_RESERVE _g_reserved5,	uint32_t, 1
  2511                              <1> 	NASMX_RESERVE _g_reserved6,	uint32_t, 1
  2512                              <1> 	NASMX_RESERVE _g_reserved7,	uint32_t, 1
  2513                              <1> NASMX_ENDSTRUC
  2514                              <1> 
  2515                              <1> NASMX_STRUC GVolumeIface
  2516                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  2517                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  2518                              <1> 	NASMX_RESERVE removed,		uint32_t, 1
  2519                              <1> 	NASMX_RESERVE get_name,		uint32_t, 1
  2520                              <1> 	NASMX_RESERVE get_icon,		uint32_t, 1
  2521                              <1> 	NASMX_RESERVE get_uuid,		uint32_t, 1
  2522                              <1> 	NASMX_RESERVE get_drive,	uint32_t, 1
  2523                              <1> 	NASMX_RESERVE get_mount,	uint32_t, 1
  2524                              <1> 	NASMX_RESERVE can_mount,	uint32_t, 1
  2525                              <1> 	NASMX_RESERVE can_eject,	uint32_t, 1
  2526                              <1> 	NASMX_RESERVE mount_fn,		uint32_t, 1
  2527                              <1> 	NASMX_RESERVE mount_finish,	uint32_t, 1
  2528                              <1> 	NASMX_RESERVE eject,		uint32_t, 1
  2529                              <1> 	NASMX_RESERVE eject_finish,	uint32_t, 1
  2530                              <1> 	NASMX_RESERVE get_identifier,	uint32_t, 1
  2531                              <1> 	NASMX_RESERVE enumerate_identifiers,	uint32_t, 1
  2532                              <1> 	NASMX_RESERVE should_automount,		uint32_t, 1
  2533                              <1> 	NASMX_RESERVE get_activation_root,	uint32_t, 1
  2534                              <1> 	NASMX_RESERVE eject_with_operation,	uint32_t, 1
  2535                              <1> 	NASMX_RESERVE eject_with_operation_finish,	uint32_t, 1
  2536                              <1> NASMX_ENDSTRUC
  2537                              <1> 
  2538                              <1> NASMX_STRUC GZlibCompressorClass
  2539                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2540                              <1> NASMX_ENDSTRUC
  2541                              <1> 
  2542                              <1> NASMX_STRUC GZlibDecompressorClass
  2543                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2544                              <1> NASMX_ENDSTRUC
  2545                              <1> 
  2546                              <1> NASMX_STRUC PangoRectangle
  2547                              <1> 	NASMX_RESERVE x,	uint32_t, 1
  2548                              <1> 	NASMX_RESERVE y,	uint32_t, 1
  2549                              <1> 	NASMX_RESERVE width,	uint32_t, 1
  2550                              <1> 	NASMX_RESERVE height,	uint32_t, 1
  2551                              <1> NASMX_ENDSTRUC
  2552                              <1> 
  2553                              <1> NASMX_STRUC PangoMatrix
  2554                              <1> 	NASMX_RESERVE xx,	uint32_t, 1
  2555                              <1> 	NASMX_RESERVE xy,	uint32_t, 1
  2556                              <1> 	NASMX_RESERVE yx,	uint32_t, 1
  2557                              <1> 	NASMX_RESERVE yy,	uint32_t, 1
  2558                              <1> 	NASMX_RESERVE x0,	uint32_t, 1
  2559                              <1> 	NASMX_RESERVE y0,	uint32_t, 1
  2560                              <1> NASMX_ENDSTRUC
  2561                              <1> 
  2562                              <1> NASMX_STRUC PangoColor
  2563                              <1> 	NASMX_RESERVE red,	uint16_t, 1
  2564                              <1> 	NASMX_RESERVE green,	uint16_t, 1
  2565                              <1> 	NASMX_RESERVE blue,	uint16_t, 1
  2566                              <1> NASMX_ENDSTRUC
  2567                              <1> 
  2568                              <1> NASMX_STRUC PangoAttribute
  2569                              <1> 	NASMX_RESERVE klass,		uint32_t, 1
  2570                              <1> 	NASMX_RESERVE start_index,	uint32_t, 1
  2571                              <1> 	NASMX_RESERVE end_index,	uint32_t, 1
  2572                              <1> NASMX_ENDSTRUC
  2573                              <1> 
  2574                              <1> NASMX_STRUC PangoAttrClass
  2575                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2576                              <1> 	NASMX_RESERVE copy,		uint32_t, 1
  2577                              <1> 	NASMX_RESERVE destroy,		uint32_t, 1
  2578                              <1> 	NASMX_RESERVE equal,		uint32_t, 1
  2579                              <1> NASMX_ENDSTRUC
  2580                              <1> 
  2581                              <1> NASMX_STRUC PangoAttrString
  2582                              <1> 	NASMX_RESERVE attr,		int8_t, PangoAttribute_size
  2583                              <1> 	NASMX_RESERVE value,		uint32_t, 1
  2584                              <1> NASMX_ENDSTRUC
  2585                              <1> 
  2586                              <1> NASMX_STRUC PangoAttrLanguage
  2587                              <1> 	NASMX_RESERVE attr,		int8_t, PangoAttribute_size
  2588                              <1> 	NASMX_RESERVE value,		uint32_t, 1
  2589                              <1> NASMX_ENDSTRUC
  2590                              <1> 
  2591                              <1> NASMX_STRUC PangoAttrInt
  2592                              <1> 	NASMX_RESERVE attr,		int8_t, PangoAttribute_size
  2593                              <1> 	NASMX_RESERVE value,		uint32_t, 1
  2594                              <1> NASMX_ENDSTRUC
  2595                              <1> 
  2596                              <1> NASMX_STRUC PangoAttrFloat
  2597                              <1> 	NASMX_RESERVE attr,		int8_t, PangoAttribute_size
  2598                              <1> 	NASMX_RESERVE value,		uint32_t, 1
  2599                              <1> NASMX_ENDSTRUC
  2600                              <1> 
  2601                              <1> NASMX_STRUC PangoAttrColor
  2602                              <1> 	NASMX_RESERVE attr,		int8_t, PangoAttribute_size
  2603                              <1> 	NASMX_RESERVE color,		int8_t, PangoColor_size
  2604                              <1> NASMX_ENDSTRUC
  2605                              <1> 
  2606                              <1> NASMX_STRUC PangoAttrSize
  2607                              <1> 	NASMX_RESERVE attr,		int8_t, PangoAttribute_size
  2608                              <1> 	NASMX_RESERVE size,		uint32_t, 1
  2609                              <1> 	NASMX_RESERVE absolute,		uint32_t, 1
  2610                              <1> NASMX_ENDSTRUC
  2611                              <1> 
  2612                              <1> NASMX_STRUC PangoAttrShape
  2613                              <1> 	NASMX_RESERVE attr,		int8_t, PangoAttribute_size
  2614                              <1> 	NASMX_RESERVE ink_rect,		int8_t, PangoRectangle_size
  2615                              <1> 	NASMX_RESERVE logical_rect,	int8_t, PangoRectangle_size
  2616                              <1> 	NASMX_RESERVE data,		uint32_t, 1
  2617                              <1> 	NASMX_RESERVE copy_func,	uint32_t, 1
  2618                              <1> 	NASMX_RESERVE destroy_func,	uint32_t, 1
  2619                              <1> NASMX_ENDSTRUC
  2620                              <1> 
  2621                              <1> NASMX_STRUC PangoAttrFontDesc
  2622                              <1> 	NASMX_RESERVE attr,		int8_t, PangoAttribute_size
  2623                              <1> 	NASMX_RESERVE desc,		uint32_t, 1
  2624                              <1> NASMX_ENDSTRUC
  2625                              <1> 
  2626                              <1> NASMX_STRUC PangoAnalysis
  2627                              <1> 	NASMX_RESERVE shape_engine,	uint32_t, 1
  2628                              <1> 	NASMX_RESERVE lang_engine,	uint32_t, 1
  2629                              <1> 	NASMX_RESERVE font,		uint32_t, 1
  2630                              <1> 	NASMX_RESERVE level,		int8_t, 1
  2631                              <1> 	NASMX_RESERVE gravity,		int8_t, 1
  2632                              <1> 	NASMX_RESERVE flags,		int8_t, 1
  2633                              <1> 	NASMX_RESERVE script,		int8_t, 1
  2634                              <1> 	NASMX_RESERVE language,		uint32_t, 1
  2635                              <1> 	NASMX_RESERVE extra_attrs,	uint32_t, 1
  2636                              <1> NASMX_ENDSTRUC
  2637                              <1> 
  2638                              <1> NASMX_STRUC PangoItem
  2639                              <1> 	NASMX_RESERVE offset,		uint32_t, 1
  2640                              <1> 	NASMX_RESERVE length,		uint32_t, 1
  2641                              <1> 	NASMX_RESERVE num_chars,	uint32_t, 1
  2642                              <1> 	NASMX_RESERVE analysis,		int8_t, PangoAnalysis_size
  2643                              <1> NASMX_ENDSTRUC
  2644                              <1> 
  2645                              <1> NASMX_STRUC PangoLogAttr
  2646                              <1> 	NASMX_RESERVE is_line_break,	uint32_t, 1
  2647                              <1> ;.is_mandatory_break:	RESD 1
  2648                              <1> ;.is_char_break:	RESD 1
  2649                              <1> ;.is_white:		RESD 1
  2650                              <1> ;.is_cursor_position:	RESD 1
  2651                              <1> ;.is_word_start:	RESD 1
  2652                              <1> ;.is_word_end:		RESD 1
  2653                              <1> ;.is_sentence_boundary:	RESD 1
  2654                              <1> 	NASMX_RESERVE is_sentence_start, uint32_t, 1
  2655                              <1> ;.is_sentence_end:	RESD 1
  2656                              <1> ;.backspace_deletes_character:	RESD 1
  2657                              <1> ;.is_expandable_space:	RESD 1
  2658                              <1> ;.is_word_boundary:	RESD 1
  2659                              <1> NASMX_ENDSTRUC
  2660                              <1> 
  2661                              <1> NASMX_STRUC PangoGlyphGeometry
  2662                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  2663                              <1> 	NASMX_RESERVE x_offset,		uint32_t, 1
  2664                              <1> 	NASMX_RESERVE y_offset,		uint32_t, 1
  2665                              <1> NASMX_ENDSTRUC
  2666                              <1> 
  2667                              <1> NASMX_STRUC PangoGlyphVisAttr
  2668                              <1> 	NASMX_RESERVE is_cluster_start,	uint32_t, 1
  2669                              <1> NASMX_ENDSTRUC
  2670                              <1> 
  2671                              <1> NASMX_STRUC PangoGlyphInfo
  2672                              <1> 	NASMX_RESERVE glyph,		uint32_t, 1
  2673                              <1> 	NASMX_RESERVE geometry,		int8_t, PangoGlyphGeometry_size
  2674                              <1> 	NASMX_RESERVE attr,		int8_t, PangoGlyphVisAttr_size
  2675                              <1> NASMX_ENDSTRUC
  2676                              <1> 
  2677                              <1> NASMX_STRUC PangoGlyphItem
  2678                              <1> 	NASMX_RESERVE item,		uint32_t, 1
  2679                              <1> 	NASMX_RESERVE glyphs,		uint32_t, 1
  2680                              <1> NASMX_ENDSTRUC
  2681                              <1> 
  2682                              <1> NASMX_STRUC PangoGlyphItemIter
  2683                              <1> 	NASMX_RESERVE glyph_item,	uint32_t, 1
  2684                              <1> 	NASMX_RESERVE text,		uint32_t, 1
  2685                              <1> 	NASMX_RESERVE start_glyph,	uint32_t, 1
  2686                              <1> 	NASMX_RESERVE start_index,	uint32_t, 1
  2687                              <1> 	NASMX_RESERVE start_char,	uint32_t, 1
  2688                              <1> 	NASMX_RESERVE end_glyph,	uint32_t, 1
  2689                              <1> 	NASMX_RESERVE end_index,	uint32_t, 1
  2690                              <1> 	NASMX_RESERVE end_char,		uint32_t, 1
  2691                              <1> NASMX_ENDSTRUC
  2692                              <1> 
  2693                              <1> NASMX_STRUC PangoLayoutLine
  2694                              <1> 	NASMX_RESERVE layout,		uint32_t, 1
  2695                              <1> 	NASMX_RESERVE start_index,	uint32_t, 1
  2696                              <1> 	NASMX_RESERVE length,		uint32_t, 1
  2697                              <1> 	NASMX_RESERVE runs,		uint32_t, 1
  2698                              <1> 	NASMX_RESERVE is_paragraph_start,	uint32_t, 1
  2699                              <1> ;.resolved_dir:		RESD 1
  2700                              <1> NASMX_ENDSTRUC
  2701                              <1> 
  2702                              <1> NASMX_STRUC PangoRenderer
  2703                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2704                              <1> 	NASMX_RESERVE underline,	uint32_t, 1
  2705                              <1> 	NASMX_RESERVE strikethrough,	uint32_t, 1
  2706                              <1> 	NASMX_RESERVE active_count,	uint32_t, 1
  2707                              <1> 	NASMX_RESERVE matrix,		uint32_t, 1
  2708                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  2709                              <1> NASMX_ENDSTRUC
  2710                              <1> 
  2711                              <1> NASMX_STRUC PangoRendererClass
  2712                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2713                              <1> 	NASMX_RESERVE draw_glyphs,	uint32_t, 1
  2714                              <1> 	NASMX_RESERVE draw_rectangle,	uint32_t, 1
  2715                              <1> 	NASMX_RESERVE draw_error_underline,	uint32_t, 1
  2716                              <1> 	NASMX_RESERVE draw_shape,	uint32_t, 1
  2717                              <1> 	NASMX_RESERVE draw_trapezoid,	uint32_t, 1
  2718                              <1> 	NASMX_RESERVE draw_glyph,	uint32_t, 1
  2719                              <1> 	NASMX_RESERVE part_changed,	uint32_t, 1
  2720                              <1> 	NASMX_RESERVE begin,		uint32_t, 1
  2721                              <1> 	NASMX_RESERVE end,		uint32_t, 1
  2722                              <1> 	NASMX_RESERVE prepare_run,	uint32_t, 1
  2723                              <1> 	NASMX_RESERVE draw_glyph_item,	uint32_t, 1
  2724                              <1> 	NASMX_RESERVE _pango_reserved2,	uint32_t, 1
  2725                              <1> 	NASMX_RESERVE _pango_reserved3,	uint32_t, 1
  2726                              <1> 	NASMX_RESERVE _pango_reserved4,	uint32_t, 1
  2727                              <1> NASMX_ENDSTRUC
  2728                              <1> 
  2729                              <1> NASMX_STRUC GdkPoint
  2730                              <1> 	NASMX_RESERVE x,		uint32_t, 1
  2731                              <1> 	NASMX_RESERVE y,		uint32_t, 1
  2732                              <1> NASMX_ENDSTRUC
  2733                              <1> 
  2734                              <1> NASMX_STRUC GdkRectangle
  2735                              <1> 	NASMX_RESERVE x,		uint32_t, 1
  2736                              <1> 	NASMX_RESERVE y,		uint32_t, 1
  2737                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  2738                              <1> 	NASMX_RESERVE height,		uint32_t, 1
  2739                              <1> NASMX_ENDSTRUC
  2740                              <1> 
  2741                              <1> NASMX_STRUC GdkSegment
  2742                              <1> 	NASMX_RESERVE x1,		uint32_t, 1
  2743                              <1> 	NASMX_RESERVE y1,		uint32_t, 1
  2744                              <1> 	NASMX_RESERVE x2,		uint32_t, 1
  2745                              <1> 	NASMX_RESERVE y2,		uint32_t, 1
  2746                              <1> NASMX_ENDSTRUC
  2747                              <1> 
  2748                              <1> NASMX_STRUC GdkSpan
  2749                              <1> 	NASMX_RESERVE x,		uint32_t, 1
  2750                              <1> 	NASMX_RESERVE y,		uint32_t, 1
  2751                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  2752                              <1> NASMX_ENDSTRUC
  2753                              <1> 
  2754                              <1> NASMX_STRUC GdkColor
  2755                              <1> 	NASMX_RESERVE pixel,		uint32_t, 1
  2756                              <1> 	NASMX_RESERVE red,		uint16_t, 1
  2757                              <1> 	NASMX_RESERVE green,		uint16_t, 1
  2758                              <1> 	NASMX_RESERVE blue,		uint16_t, 1
  2759                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 2
  2760                              <1> NASMX_ENDSTRUC
  2761                              <1> 
  2762                              <1> NASMX_STRUC GdkColormap
  2763                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2764                              <1> 	NASMX_RESERVE size,		uint32_t, 1
  2765                              <1> 	NASMX_RESERVE colors,		uint32_t, 1
  2766                              <1> 	NASMX_RESERVE visual,		uint32_t, 1
  2767                              <1> 	NASMX_RESERVE windowing_data,	uint32_t, 1
  2768                              <1> NASMX_ENDSTRUC
  2769                              <1> 
  2770                              <1> NASMX_STRUC GdkColormapClass
  2771                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  2772                              <1> NASMX_ENDSTRUC
  2773                              <1> 
  2774                              <1> NASMX_STRUC GdkDeviceKey
  2775                              <1> 	NASMX_RESERVE keyval,		uint32_t, 1
  2776                              <1> 	NASMX_RESERVE modifiers,	uint32_t, 1
  2777                              <1> NASMX_ENDSTRUC
  2778                              <1> 
  2779                              <1> NASMX_STRUC GdkDeviceAxis
  2780                              <1> 	NASMX_RESERVE use,		uint32_t, 1
  2781                              <1> 	NASMX_RESERVE min,		uint32_t, 1
  2782                              <1> 	NASMX_RESERVE max,		uint32_t, 1
  2783                              <1> NASMX_ENDSTRUC
  2784                              <1> 
  2785                              <1> NASMX_STRUC GdkDevice
  2786                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  2787                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  2788                              <1> 	NASMX_RESERVE source,		uint32_t, 1
  2789                              <1> 	NASMX_RESERVE mode,		uint32_t, 1
  2790                              <1> 	NASMX_RESERVE has_cursor,	uint32_t, 1
  2791                              <1> 	NASMX_RESERVE num_axes,		uint32_t, 1
  2792                              <1> 	NASMX_RESERVE axes,		uint32_t, 1
  2793                              <1> 	NASMX_RESERVE num_keys,		uint32_t, 1
  2794                              <1> 	NASMX_RESERVE keys,		uint32_t, 1
  2795                              <1> NASMX_ENDSTRUC
  2796                              <1> 
  2797                              <1> NASMX_STRUC GdkTimeCoord
  2798                              <1> 	NASMX_RESERVE time,		uint32_t, 1
  2799                              <1> NASMX_ENDSTRUC
  2800                              <1> 
  2801                              <1> NASMX_STRUC GdkEventAny
  2802                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2803                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2804                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2805                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2806                              <1> NASMX_ENDSTRUC
  2807                              <1> 
  2808                              <1> NASMX_STRUC GdkEventExpose
  2809                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2810                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2811                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2812                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2813                              <1> 	NASMX_RESERVE area,		int8_t, GdkRectangle_size
  2814                              <1> 	NASMX_RESERVE region,		uint32_t, 1
  2815                              <1> 	NASMX_RESERVE count,		uint32_t, 1
  2816                              <1> NASMX_ENDSTRUC
  2817                              <1> 
  2818                              <1> NASMX_STRUC GdkEventNoExpose
  2819                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2820                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2821                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2822                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2823                              <1> NASMX_ENDSTRUC
  2824                              <1> 
  2825                              <1> NASMX_STRUC GdkEventVisibility
  2826                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2827                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2828                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2829                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2830                              <1> 	NASMX_RESERVE state,		uint32_t, 1
  2831                              <1> NASMX_ENDSTRUC
  2832                              <1> 
  2833                              <1> NASMX_STRUC GdkEventMotion
  2834                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2835                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2836                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2837                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2838                              <1> 	NASMX_RESERVE time,		uint32_t, 1
  2839                              <1> 	NASMX_RESERVE x,		uint64_t, 1
  2840                              <1> 	NASMX_RESERVE y,		uint64_t, 1
  2841                              <1> 	NASMX_RESERVE axes,		uint32_t, 1
  2842                              <1> 	NASMX_RESERVE state,		uint32_t, 1
  2843                              <1> 	NASMX_RESERVE is_hint,		uint16_t, 1
  2844                              <1> 	NASMX_RESERVE __PADDING2__,	int8_t, 2
  2845                              <1> 	NASMX_RESERVE device,		uint32_t, 1
  2846                              <1> 	NASMX_RESERVE x_root,		uint64_t, 1
  2847                              <1> 	NASMX_RESERVE y_root,		uint64_t, 1
  2848                              <1> NASMX_ENDSTRUC
  2849                              <1> 
  2850                              <1> NASMX_STRUC GdkEventButton
  2851                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2852                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2853                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2854                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2855                              <1> 	NASMX_RESERVE time,		uint32_t, 1
  2856                              <1> 	NASMX_RESERVE x,		uint64_t, 1
  2857                              <1> 	NASMX_RESERVE y,		uint64_t, 1
  2858                              <1> 	NASMX_RESERVE axes,		uint32_t, 1
  2859                              <1> 	NASMX_RESERVE state,		uint32_t, 1
  2860                              <1> 	NASMX_RESERVE button,		uint32_t, 1
  2861                              <1> 	NASMX_RESERVE device,		uint32_t, 1
  2862                              <1> 	NASMX_RESERVE x_root,		uint64_t, 1
  2863                              <1> 	NASMX_RESERVE y_root,		uint64_t, 1
  2864                              <1> NASMX_ENDSTRUC
  2865                              <1> 
  2866                              <1> NASMX_STRUC GdkEventScroll
  2867                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2868                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2869                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2870                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2871                              <1> 	NASMX_RESERVE time,		uint32_t, 1
  2872                              <1> 	NASMX_RESERVE x,		uint64_t, 1
  2873                              <1> 	NASMX_RESERVE y,		uint64_t, 1
  2874                              <1> 	NASMX_RESERVE state,		uint32_t, 1
  2875                              <1> 	NASMX_RESERVE direction,	uint32_t, 1
  2876                              <1> 	NASMX_RESERVE device,		uint32_t, 1
  2877                              <1> 	NASMX_RESERVE __PADDING2__,	int8_t, 4
  2878                              <1> 	NASMX_RESERVE x_root,		uint64_t, 1
  2879                              <1> 	NASMX_RESERVE y_root,		uint64_t, 1
  2880                              <1> NASMX_ENDSTRUC
  2881                              <1> 
  2882                              <1> NASMX_STRUC GdkEventKey
  2883                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2884                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2885                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2886                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2887                              <1> 	NASMX_RESERVE time,		uint32_t, 1
  2888                              <1> 	NASMX_RESERVE state,		uint32_t, 1
  2889                              <1> 	NASMX_RESERVE keyval,		uint32_t, 1
  2890                              <1> 	NASMX_RESERVE length,		uint32_t, 1
  2891                              <1> 	NASMX_RESERVE string,		uint32_t, 1
  2892                              <1> 	NASMX_RESERVE hardware_keycode,	uint16_t, 1
  2893                              <1> 	NASMX_RESERVE group,		int8_t, 1
  2894                              <1> 	NASMX_RESERVE __PADDING2__,	int8_t, 1
  2895                              <1> 	NASMX_RESERVE is_modifier,	uint32_t, 1
  2896                              <1> NASMX_ENDSTRUC
  2897                              <1> 
  2898                              <1> NASMX_STRUC GdkEventCrossing
  2899                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2900                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2901                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2902                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2903                              <1> 	NASMX_RESERVE subwindow,	uint32_t, 1
  2904                              <1> 	NASMX_RESERVE time,		uint32_t, 1
  2905                              <1> 	NASMX_RESERVE __PADDING2__,	int8_t, 4
  2906                              <1> 	NASMX_RESERVE x,		uint64_t, 1
  2907                              <1> 	NASMX_RESERVE y,		uint64_t, 1
  2908                              <1> 	NASMX_RESERVE x_root,		uint64_t, 1
  2909                              <1> 	NASMX_RESERVE y_root,		uint64_t, 1
  2910                              <1> 	NASMX_RESERVE mode,		uint32_t, 1
  2911                              <1> 	NASMX_RESERVE detail,		uint32_t, 1
  2912                              <1> 	NASMX_RESERVE focus,		uint32_t, 1
  2913                              <1> 	NASMX_RESERVE state,		uint32_t, 1
  2914                              <1> NASMX_ENDSTRUC
  2915                              <1> 
  2916                              <1> NASMX_STRUC GdkEventFocus
  2917                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2918                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2919                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2920                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 1
  2921                              <1> 	NASMX_RESERVE in,		uint16_t, 1
  2922                              <1> NASMX_ENDSTRUC
  2923                              <1> 
  2924                              <1> NASMX_STRUC GdkEventConfigure
  2925                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2926                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2927                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2928                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2929                              <1> 	NASMX_RESERVE x,		uint32_t, 1
  2930                              <1> 	NASMX_RESERVE y,		uint32_t, 1
  2931                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  2932                              <1> 	NASMX_RESERVE height,		uint32_t, 1
  2933                              <1> NASMX_ENDSTRUC
  2934                              <1> 
  2935                              <1> NASMX_STRUC GdkEventProperty
  2936                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2937                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2938                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2939                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2940                              <1> 	NASMX_RESERVE atom,		uint32_t, 1
  2941                              <1> 	NASMX_RESERVE time,		uint32_t, 1
  2942                              <1> 	NASMX_RESERVE state,		uint32_t, 1
  2943                              <1> NASMX_ENDSTRUC
  2944                              <1> 
  2945                              <1> NASMX_STRUC GdkEventSelection
  2946                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2947                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2948                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2949                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2950                              <1> 	NASMX_RESERVE selection,	uint32_t, 1
  2951                              <1> 	NASMX_RESERVE target,		uint32_t, 1
  2952                              <1> 	NASMX_RESERVE property,		uint32_t, 1
  2953                              <1> 	NASMX_RESERVE time,		uint32_t, 1
  2954                              <1> 	NASMX_RESERVE requestor,	uint32_t, 1
  2955                              <1> NASMX_ENDSTRUC
  2956                              <1> 
  2957                              <1> NASMX_STRUC GdkEventOwnerChange
  2958                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2959                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2960                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2961                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2962                              <1> 	NASMX_RESERVE owner,		uint32_t, 1
  2963                              <1> 	NASMX_RESERVE reason,		uint32_t, 1
  2964                              <1> 	NASMX_RESERVE selection,	uint32_t, 1
  2965                              <1> 	NASMX_RESERVE time,		uint32_t, 1
  2966                              <1> 	NASMX_RESERVE selection_time,	uint32_t, 1
  2967                              <1> NASMX_ENDSTRUC
  2968                              <1> 
  2969                              <1> NASMX_STRUC GdkEventProximity
  2970                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2971                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2972                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2973                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2974                              <1> 	NASMX_RESERVE time,		uint32_t, 1
  2975                              <1> 	NASMX_RESERVE device,		uint32_t, 1
  2976                              <1> NASMX_ENDSTRUC
  2977                              <1> 
  2978                              <1> NASMX_STRUC GdkEventClient
  2979                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2980                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2981                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2982                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2983                              <1> 	NASMX_RESERVE message_type,	uint32_t, 1
  2984                              <1> 	NASMX_RESERVE data_format,	uint16_t, 1
  2985                              <1> 	NASMX_RESERVE __PADDING2__,	int8_t, 2
  2986                              <1> NASMX_ENDSTRUC
  2987                              <1> 
  2988                              <1> NASMX_STRUC GdkEventSetting
  2989                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2990                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  2991                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  2992                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  2993                              <1> 	NASMX_RESERVE action,		uint32_t, 1
  2994                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  2995                              <1> NASMX_ENDSTRUC
  2996                              <1> 
  2997                              <1> NASMX_STRUC GdkEventWindowState
  2998                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  2999                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  3000                              <1> 	NASMX_RESERVE send_event,	int8_t, 1
  3001                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  3002                              <1> 	NASMX_RESERVE changed_mask,	uint32_t, 1
  3003                              <1> 	NASMX_RESERVE new_window_state,	uint32_t, 1
  3004                              <1> NASMX_ENDSTRUC
  3005                              <1> 
  3006                              <1> NASMX_STRUC GdkDisplay
  3007                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3008                              <1> 	NASMX_RESERVE queued_events,	uint32_t, 1
  3009                              <1> 	NASMX_RESERVE queued_tail,	uint32_t, 1
  3010                              <1> 	NASMX_RESERVE button_click_time,	uint32_t, 2
  3011                              <1> 	NASMX_RESERVE button_window,	uint32_t, 2
  3012                              <1> 	NASMX_RESERVE button_number,	uint32_t, 2
  3013                              <1> 	NASMX_RESERVE double_click_time,	uint32_t, 1
  3014                              <1> 	NASMX_RESERVE core_pointer,	uint32_t, 1
  3015                              <1> 	NASMX_RESERVE pointer_hooks,	uint32_t, 1
  3016                              <1> 	NASMX_RESERVE closed,		uint32_t, 1
  3017                              <1> ;.ignore_core_events:		RESD 1
  3018                              <1> 	NASMX_RESERVE double_click_distance,	uint32_t, 1
  3019                              <1> 	NASMX_RESERVE button_x,		uint32_t, 2
  3020                              <1> 	NASMX_RESERVE button_y,		uint32_t, 2
  3021                              <1> 	NASMX_RESERVE pointer_grabs,	uint32_t, 1
  3022                              <1> 	NASMX_RESERVE keyboard_grab,	uint32_t, 1
  3023                              <1> 	NASMX_RESERVE pointer_info,	uint32_t, 1
  3024                              <1> 	NASMX_RESERVE last_event_time,	uint32_t, 1
  3025                              <1> NASMX_ENDSTRUC
  3026                              <1> 
  3027                              <1> NASMX_STRUC GdkDisplayClass
  3028                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3029                              <1> 	NASMX_RESERVE get_display_name,	uint32_t, 1
  3030                              <1> 	NASMX_RESERVE get_n_screens,	uint32_t, 1
  3031                              <1> 	NASMX_RESERVE get_screen,	uint32_t, 1
  3032                              <1> 	NASMX_RESERVE get_default_screen,	uint32_t, 1
  3033                              <1> 	NASMX_RESERVE closed,		uint32_t, 1
  3034                              <1> NASMX_ENDSTRUC
  3035                              <1> 
  3036                              <1> NASMX_STRUC GdkDisplayPointerHooks
  3037                              <1> 	NASMX_RESERVE get_pointer,	uint32_t, 1
  3038                              <1> 	NASMX_RESERVE window_get_pointer,	uint32_t, 1
  3039                              <1> 	NASMX_RESERVE window_at_pointer,	uint32_t, 1
  3040                              <1> NASMX_ENDSTRUC
  3041                              <1> 
  3042                              <1> NASMX_STRUC GdkScreen
  3043                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3044                              <1> 	NASMX_RESERVE closed,		uint32_t, 1
  3045                              <1> 	NASMX_RESERVE normal_gcs,	uint32_t, 32
  3046                              <1> 	NASMX_RESERVE exposure_gcs,	uint32_t, 32
  3047                              <1> 	NASMX_RESERVE subwindow_gcs,	uint32_t, 32
  3048                              <1> 	NASMX_RESERVE font_options,	uint32_t, 1
  3049                              <1> 	NASMX_RESERVE resolution,	uint32_t, 1
  3050                              <1> NASMX_ENDSTRUC
  3051                              <1> 
  3052                              <1> NASMX_STRUC GdkScreenClass
  3053                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3054                              <1> 	NASMX_RESERVE size_changed,	uint32_t, 1
  3055                              <1> 	NASMX_RESERVE composited_changed,	uint32_t, 1
  3056                              <1> 	NASMX_RESERVE monitors_changed,		uint32_t, 1
  3057                              <1> NASMX_ENDSTRUC
  3058                              <1> 
  3059                              <1> NASMX_STRUC GdkAppLaunchContext
  3060                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GAppLaunchContext_size
  3061                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  3062                              <1> NASMX_ENDSTRUC
  3063                              <1> 
  3064                              <1> NASMX_STRUC GdkAppLaunchContextClass
  3065                              <1> 	NASMX_RESERVE parent_class,	int8_t, GAppLaunchContextClass_size
  3066                              <1> NASMX_ENDSTRUC
  3067                              <1> 
  3068                              <1> NASMX_STRUC GdkPixbufLoader
  3069                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3070                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  3071                              <1> NASMX_ENDSTRUC
  3072                              <1> 
  3073                              <1> NASMX_STRUC GdkPixbufLoaderClass
  3074                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3075                              <1> 	NASMX_RESERVE size_prepared,	uint32_t, 1
  3076                              <1> 	NASMX_RESERVE area_prepared,	uint32_t, 1
  3077                              <1> 	NASMX_RESERVE area_updated,	uint32_t, 1
  3078                              <1> 	NASMX_RESERVE closed,		uint32_t, 1
  3079                              <1> NASMX_ENDSTRUC
  3080                              <1> 
  3081                              <1> NASMX_STRUC GdkCursor
  3082                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  3083                              <1> 	NASMX_RESERVE ref_count,	uint32_t, 1
  3084                              <1> NASMX_ENDSTRUC
  3085                              <1> 
  3086                              <1> NASMX_STRUC GdkDisplayManagerClass
  3087                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3088                              <1> 	NASMX_RESERVE display_opened,	uint32_t, 1
  3089                              <1> NASMX_ENDSTRUC
  3090                              <1> 
  3091                              <1> NASMX_STRUC GdkGCValues
  3092                              <1> 	NASMX_RESERVE foreground,	int8_t, GdkColor_size
  3093                              <1> 	NASMX_RESERVE background,	int8_t, GdkColor_size
  3094                              <1> 	NASMX_RESERVE font,		uint32_t, 1
  3095                              <1> 	NASMX_RESERVE function,		uint32_t, 1
  3096                              <1> 	NASMX_RESERVE fill,		uint32_t, 1
  3097                              <1> 	NASMX_RESERVE tile,		uint32_t, 1
  3098                              <1> 	NASMX_RESERVE stipple,		uint32_t, 1
  3099                              <1> 	NASMX_RESERVE clip_mask,	uint32_t, 1
  3100                              <1> 	NASMX_RESERVE subwindow_mode,	uint32_t, 1
  3101                              <1> 	NASMX_RESERVE ts_x_origin,	uint32_t, 1
  3102                              <1> 	NASMX_RESERVE ts_y_origin,	uint32_t, 1
  3103                              <1> 	NASMX_RESERVE clip_x_origin,	uint32_t, 1
  3104                              <1> 	NASMX_RESERVE clip_y_origin,	uint32_t, 1
  3105                              <1> 	NASMX_RESERVE graphics_exposures,	uint32_t, 1
  3106                              <1> 	NASMX_RESERVE line_width,	uint32_t, 1
  3107                              <1> 	NASMX_RESERVE line_style,	uint32_t, 1
  3108                              <1> 	NASMX_RESERVE cap_style,	uint32_t, 1
  3109                              <1> 	NASMX_RESERVE join_style,	uint32_t, 1
  3110                              <1> NASMX_ENDSTRUC
  3111                              <1> 
  3112                              <1> NASMX_STRUC GdkGC
  3113                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3114                              <1> 	NASMX_RESERVE clip_x_origin,	uint32_t, 1
  3115                              <1> 	NASMX_RESERVE clip_y_origin,	uint32_t, 1
  3116                              <1> 	NASMX_RESERVE ts_x_origin,	uint32_t, 1
  3117                              <1> 	NASMX_RESERVE ts_y_origin,	uint32_t, 1
  3118                              <1> 	NASMX_RESERVE colormap,		uint32_t, 1
  3119                              <1> NASMX_ENDSTRUC
  3120                              <1> 
  3121                              <1> NASMX_STRUC GdkGCClass
  3122                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3123                              <1> 	NASMX_RESERVE get_values,	uint32_t, 1
  3124                              <1> 	NASMX_RESERVE set_values,	uint32_t, 1
  3125                              <1> 	NASMX_RESERVE set_dashes,	uint32_t, 1
  3126                              <1> 	NASMX_RESERVE _gdk_reserved1,	uint32_t, 1
  3127                              <1> 	NASMX_RESERVE _gdk_reserved2,	uint32_t, 1
  3128                              <1> 	NASMX_RESERVE _gdk_reserved3,	uint32_t, 1
  3129                              <1> 	NASMX_RESERVE _gdk_reserved4,	uint32_t, 1
  3130                              <1> NASMX_ENDSTRUC
  3131                              <1> 
  3132                              <1> NASMX_STRUC GdkDrawable
  3133                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3134                              <1> NASMX_ENDSTRUC
  3135                              <1> 
  3136                              <1> NASMX_STRUC GdkDrawableClass
  3137                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3138                              <1> 	NASMX_RESERVE create_gc,	uint32_t, 1
  3139                              <1> 	NASMX_RESERVE draw_rectangle,	uint32_t, 1
  3140                              <1> 	NASMX_RESERVE draw_arc,		uint32_t, 1
  3141                              <1> 	NASMX_RESERVE draw_polygon,	uint32_t, 1
  3142                              <1> 	NASMX_RESERVE draw_text,	uint32_t, 1
  3143                              <1> 	NASMX_RESERVE draw_text_wc,	uint32_t, 1
  3144                              <1> 	NASMX_RESERVE draw_drawable,	uint32_t, 1
  3145                              <1> 	NASMX_RESERVE draw_points,	uint32_t, 1
  3146                              <1> 	NASMX_RESERVE draw_segments,	uint32_t, 1
  3147                              <1> 	NASMX_RESERVE draw_lines,	uint32_t, 1
  3148                              <1> 	NASMX_RESERVE draw_glyphs,	uint32_t, 1
  3149                              <1> 	NASMX_RESERVE draw_image,	uint32_t, 1
  3150                              <1> 	NASMX_RESERVE get_depth,	uint32_t, 1
  3151                              <1> 	NASMX_RESERVE get_size,		uint32_t, 1
  3152                              <1> 	NASMX_RESERVE set_colormap,	uint32_t, 1
  3153                              <1> 	NASMX_RESERVE get_colormap,	uint32_t, 1
  3154                              <1> 	NASMX_RESERVE get_visual,	uint32_t, 1
  3155                              <1> 	NASMX_RESERVE get_screen,	uint32_t, 1
  3156                              <1> 	NASMX_RESERVE get_image,	uint32_t, 1
  3157                              <1> 	NASMX_RESERVE get_clip_region,	uint32_t, 1
  3158                              <1> 	NASMX_RESERVE get_visible_region,	uint32_t, 1
  3159                              <1> 	NASMX_RESERVE get_composite_drawable,	uint32_t, 1
  3160                              <1> 	NASMX_RESERVE draw_pixbuf,	uint32_t, 1
  3161                              <1> 	NASMX_RESERVE _copy_to_image,	uint32_t, 1
  3162                              <1> 	NASMX_RESERVE draw_glyphs_transformed,	uint32_t, 1
  3163                              <1> 	NASMX_RESERVE draw_trapezoids,	uint32_t, 1
  3164                              <1> 	NASMX_RESERVE ref_cairo_surface,	uint32_t, 1
  3165                              <1> 	NASMX_RESERVE get_source_drawable,	uint32_t, 1
  3166                              <1> 	NASMX_RESERVE set_cairo_clip,	uint32_t, 1
  3167                              <1> 	NASMX_RESERVE create_cairo_surface,	uint32_t, 1
  3168                              <1> 	NASMX_RESERVE draw_drawable_with_src,	uint32_t, 1
  3169                              <1> 	NASMX_RESERVE _gdk_reserved7,	uint32_t, 1
  3170                              <1> 	NASMX_RESERVE _gdk_reserved9,	uint32_t, 1
  3171                              <1> 	NASMX_RESERVE _gdk_reserved10,	uint32_t, 1
  3172                              <1> 	NASMX_RESERVE _gdk_reserved11,	uint32_t, 1
  3173                              <1> 	NASMX_RESERVE _gdk_reserved12,	uint32_t, 1
  3174                              <1> 	NASMX_RESERVE _gdk_reserved13,	uint32_t, 1
  3175                              <1> 	NASMX_RESERVE _gdk_reserved14,	uint32_t, 1
  3176                              <1> 	NASMX_RESERVE _gdk_reserved15,	uint32_t, 1
  3177                              <1> NASMX_ENDSTRUC
  3178                              <1> 
  3179                              <1> NASMX_STRUC GdkTrapezoid
  3180                              <1> NASMX_ENDSTRUC
  3181                              <1> 
  3182                              <1> NASMX_STRUC GdkFont
  3183                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  3184                              <1> 	NASMX_RESERVE ascent,		uint32_t, 1
  3185                              <1> 	NASMX_RESERVE descent,		uint32_t, 1
  3186                              <1> NASMX_ENDSTRUC
  3187                              <1> 
  3188                              <1> NASMX_STRUC GdkImage
  3189                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3190                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  3191                              <1> 	NASMX_RESERVE visual,		uint32_t, 1
  3192                              <1> 	NASMX_RESERVE byte_order,	uint32_t, 1
  3193                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  3194                              <1> 	NASMX_RESERVE height,		uint32_t, 1
  3195                              <1> 	NASMX_RESERVE depth,		uint16_t, 1
  3196                              <1> 	NASMX_RESERVE bpp,		uint16_t, 1
  3197                              <1> 	NASMX_RESERVE bpl,		uint16_t, 1
  3198                              <1> 	NASMX_RESERVE bits_per_pixel,	uint16_t, 1
  3199                              <1> 	NASMX_RESERVE mem,		uint32_t, 1
  3200                              <1> 	NASMX_RESERVE colormap,		uint32_t, 1
  3201                              <1> 	NASMX_RESERVE windowing_data,	uint32_t, 1
  3202                              <1> NASMX_ENDSTRUC
  3203                              <1> 
  3204                              <1> NASMX_STRUC GdkImageClass
  3205                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3206                              <1> NASMX_ENDSTRUC
  3207                              <1> 
  3208                              <1> NASMX_STRUC GdkKeymapKey
  3209                              <1> 	NASMX_RESERVE keycode,		uint32_t, 1
  3210                              <1> 	NASMX_RESERVE group,		uint32_t, 1
  3211                              <1> 	NASMX_RESERVE level,		uint32_t, 1
  3212                              <1> NASMX_ENDSTRUC
  3213                              <1> 
  3214                              <1> NASMX_STRUC GdkKeymap
  3215                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3216                              <1> 	NASMX_RESERVE display,		uint32_t, 1
  3217                              <1> NASMX_ENDSTRUC
  3218                              <1> 
  3219                              <1> NASMX_STRUC GdkKeymapClass
  3220                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3221                              <1> 	NASMX_RESERVE direction_changed,	uint32_t, 1
  3222                              <1> 	NASMX_RESERVE keys_changed,	uint32_t, 1
  3223                              <1> 	NASMX_RESERVE state_changed,	uint32_t, 1
  3224                              <1> NASMX_ENDSTRUC
  3225                              <1> 
  3226                              <1> NASMX_STRUC GdkPangoRenderer
  3227                              <1> 	NASMX_RESERVE parent_instance,	int8_t, PangoRenderer_size
  3228                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  3229                              <1> NASMX_ENDSTRUC
  3230                              <1> 
  3231                              <1> NASMX_STRUC GdkPangoRendererClass
  3232                              <1> 	NASMX_RESERVE parent_class,	int8_t, PangoRendererClass_size
  3233                              <1> NASMX_ENDSTRUC
  3234                              <1> 
  3235                              <1> NASMX_STRUC GdkPangoAttrStipple
  3236                              <1> 	NASMX_RESERVE attr,		int8_t, PangoAttribute_size
  3237                              <1> 	NASMX_RESERVE stipple,		uint32_t, 1
  3238                              <1> NASMX_ENDSTRUC
  3239                              <1> 
  3240                              <1> NASMX_STRUC GdkPangoAttrEmbossed
  3241                              <1> 	NASMX_RESERVE attr,		int8_t, PangoAttribute_size
  3242                              <1> 	NASMX_RESERVE embossed,		uint32_t, 1
  3243                              <1> NASMX_ENDSTRUC
  3244                              <1> 
  3245                              <1> NASMX_STRUC GdkPangoAttrEmbossColor
  3246                              <1> 	NASMX_RESERVE attr,		int8_t, PangoAttribute_size
  3247                              <1> 	NASMX_RESERVE color,		int8_t, PangoColor_size
  3248                              <1> NASMX_ENDSTRUC
  3249                              <1> 
  3250                              <1> NASMX_STRUC GdkPixmapObject
  3251                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GdkDrawable_size
  3252                              <1> 	NASMX_RESERVE impl,		uint32_t, 1
  3253                              <1> 	NASMX_RESERVE depth,		uint32_t, 1
  3254                              <1> NASMX_ENDSTRUC
  3255                              <1> 
  3256                              <1> NASMX_STRUC GdkPixmapObjectClass
  3257                              <1> 	NASMX_RESERVE parent_class,	int8_t, GdkDrawableClass_size
  3258                              <1> NASMX_ENDSTRUC
  3259                              <1> 
  3260                              <1> NASMX_STRUC GdkWindowAttr
  3261                              <1> 	NASMX_RESERVE title,		uint32_t, 1
  3262                              <1> 	NASMX_RESERVE event_mask,	uint32_t, 1
  3263                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  3264                              <1> 	NASMX_RESERVE height,		uint32_t, 1
  3265                              <1> 	NASMX_RESERVE wclass,		uint32_t, 1
  3266                              <1> 	NASMX_RESERVE visual,		uint32_t, 1
  3267                              <1> 	NASMX_RESERVE colormap,		uint32_t, 1
  3268                              <1> 	NASMX_RESERVE window_type,	uint32_t, 1
  3269                              <1> 	NASMX_RESERVE cursor,		uint32_t, 1
  3270                              <1> 	NASMX_RESERVE wmclass_name,	uint32_t, 1
  3271                              <1> 	NASMX_RESERVE wmclass_class,	uint32_t, 1
  3272                              <1> 	NASMX_RESERVE override_redirect,	uint32_t, 1
  3273                              <1> 	NASMX_RESERVE type_hint,	uint32_t, 1
  3274                              <1> NASMX_ENDSTRUC
  3275                              <1> 
  3276                              <1> NASMX_STRUC GdkGeometry
  3277                              <1> 	NASMX_RESERVE min_width,	uint32_t, 1
  3278                              <1> 	NASMX_RESERVE min_height,	uint32_t, 1
  3279                              <1> 	NASMX_RESERVE max_width,	uint32_t, 1
  3280                              <1> 	NASMX_RESERVE max_height,	uint32_t, 1
  3281                              <1> 	NASMX_RESERVE base_width,	uint32_t, 1
  3282                              <1> 	NASMX_RESERVE base_height,	uint32_t, 1
  3283                              <1> 	NASMX_RESERVE width_inc,	uint32_t, 1
  3284                              <1> 	NASMX_RESERVE height_inc,	uint32_t, 1
  3285                              <1> 	NASMX_RESERVE min_aspect,	uint32_t, 1
  3286                              <1> 	NASMX_RESERVE max_aspect,	uint32_t, 1
  3287                              <1> 	NASMX_RESERVE win_gravity,	uint32_t, 1
  3288                              <1> NASMX_ENDSTRUC
  3289                              <1> 
  3290                              <1> NASMX_STRUC GdkPointerHooks
  3291                              <1> 	NASMX_RESERVE get_pointer,	uint32_t, 1
  3292                              <1> 	NASMX_RESERVE window_at_pointer,	uint32_t, 1
  3293                              <1> NASMX_ENDSTRUC
  3294                              <1> 
  3295                              <1> NASMX_STRUC GdkWindowObject
  3296                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GdkDrawable_size
  3297                              <1> 	NASMX_RESERVE impl,		uint32_t, 1
  3298                              <1> 	NASMX_RESERVE parent,		uint32_t, 1
  3299                              <1> 	NASMX_RESERVE user_data,	uint32_t, 1
  3300                              <1> 	NASMX_RESERVE x,		uint32_t, 1
  3301                              <1> 	NASMX_RESERVE y,		uint32_t, 1
  3302                              <1> 	NASMX_RESERVE extension_events,	uint32_t, 1
  3303                              <1> 	NASMX_RESERVE filters,		uint32_t, 1
  3304                              <1> 	NASMX_RESERVE children,		uint32_t, 1
  3305                              <1> 	NASMX_RESERVE bg_color,		int8_t, GdkColor_size
  3306                              <1> 	NASMX_RESERVE bg_pixmap,	uint32_t, 1
  3307                              <1> 	NASMX_RESERVE paint_stack,	uint32_t, 1
  3308                              <1> 	NASMX_RESERVE update_area,	uint32_t, 1
  3309                              <1> 	NASMX_RESERVE update_freeze_count,	uint32_t, 1
  3310                              <1> 	NASMX_RESERVE window_type,	int8_t, 1
  3311                              <1> 	NASMX_RESERVE depth,		int8_t, 1
  3312                              <1> 	NASMX_RESERVE resize_count,	int8_t, 1
  3313                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 1
  3314                              <1> 	NASMX_RESERVE state,		uint32_t, 1
  3315                              <1> 	NASMX_RESERVE guffaw_gravity,	uint32_t, 1
  3316                              <1> ;.input_only:		RESD 1
  3317                              <1> ;.modal_hint:		RESD 1
  3318                              <1> ;.composited:		RESD 1
  3319                              <1> ;.destroyed:		RESD 1
  3320                              <1> ;.accept_focus:		RESD 1
  3321                              <1> ;.focus_on_map:		RESD 1
  3322                              <1> ;.shaped:		RESD 1
  3323                              <1> 	NASMX_RESERVE event_mask,	uint32_t, 1
  3324                              <1> 	NASMX_RESERVE update_and_descendants_freeze_count,	uint32_t, 1
  3325                              <1> 	NASMX_RESERVE redirect,		uint32_t, 1
  3326                              <1> NASMX_ENDSTRUC
  3327                              <1> 
  3328                              <1> NASMX_STRUC GdkWindowObjectClass
  3329                              <1> 	NASMX_RESERVE parent_class,	int8_t, GdkDrawableClass_size
  3330                              <1> NASMX_ENDSTRUC
  3331                              <1> 
  3332                              <1> NASMX_STRUC GdkVisual
  3333                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3334                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  3335                              <1> 	NASMX_RESERVE depth,		uint32_t, 1
  3336                              <1> 	NASMX_RESERVE byte_order,	uint32_t, 1
  3337                              <1> 	NASMX_RESERVE colormap_size,	uint32_t, 1
  3338                              <1> 	NASMX_RESERVE bits_per_rgb,	uint32_t, 1
  3339                              <1> 	NASMX_RESERVE red_mask,		uint32_t, 1
  3340                              <1> 	NASMX_RESERVE red_shift,	uint32_t, 1
  3341                              <1> 	NASMX_RESERVE red_prec,		uint32_t, 1
  3342                              <1> 	NASMX_RESERVE green_mask,	uint32_t, 1
  3343                              <1> 	NASMX_RESERVE green_shift,	uint32_t, 1
  3344                              <1> 	NASMX_RESERVE green_prec,	uint32_t, 1
  3345                              <1> 	NASMX_RESERVE blue_mask,	uint32_t, 1
  3346                              <1> 	NASMX_RESERVE blue_shift,	uint32_t, 1
  3347                              <1> 	NASMX_RESERVE blue_prec,	uint32_t, 1
  3348                              <1> NASMX_ENDSTRUC
  3349                              <1> 
  3350                              <1> NASMX_STRUC GtkAccelGroup
  3351                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  3352                              <1> 	NASMX_RESERVE lock_count,	uint32_t, 1
  3353                              <1> 	NASMX_RESERVE modifier_mask,	uint32_t, 1
  3354                              <1> 	NASMX_RESERVE acceleratables,	uint32_t, 1
  3355                              <1> 	NASMX_RESERVE n_accels,		uint32_t, 1
  3356                              <1> 	NASMX_RESERVE priv_accels,	uint32_t, 1
  3357                              <1> NASMX_ENDSTRUC
  3358                              <1> 
  3359                              <1> NASMX_STRUC GtkAccelGroupClass
  3360                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3361                              <1> 	NASMX_RESERVE accel_changed,	uint32_t, 1
  3362                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  3363                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  3364                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  3365                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  3366                              <1> NASMX_ENDSTRUC
  3367                              <1> 
  3368                              <1> NASMX_STRUC GtkAccelKey
  3369                              <1> 	NASMX_RESERVE accel_key,	uint32_t, 1
  3370                              <1> 	NASMX_RESERVE accel_mods,	uint32_t, 1
  3371                              <1> 	NASMX_RESERVE accel_flags,	uint32_t, 1
  3372                              <1> NASMX_ENDSTRUC
  3373                              <1> 
  3374                              <1> NASMX_STRUC GtkAccelGroupEntry
  3375                              <1> 	NASMX_RESERVE key,		int8_t, GtkAccelKey_size
  3376                              <1> 	NASMX_RESERVE closure,		uint32_t, 1
  3377                              <1> 	NASMX_RESERVE accel_path_quark,	uint32_t, 1
  3378                              <1> NASMX_ENDSTRUC
  3379                              <1> 
  3380                              <1> NASMX_STRUC GtkArg
  3381                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  3382                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  3383                              <1> ;;.char_data:		RESB 1
  3384                              <1> ;;.uchar_data:		RESB 1
  3385                              <1> ;;.bool_data:		RESD 1
  3386                              <1> ;;.int_data:		RESD 1
  3387                              <1> ;;.uint_data:		RESD 1
  3388                              <1> ;;.long_data:		RESD 1
  3389                              <1> ;;.ulong_data:		RESD 1
  3390                              <1> ;;.float_data:		RESD 1
  3391                              <1> ;;.double_data:		RESD 1
  3392                              <1> ;;.string_data:		RESD 1
  3393                              <1> ;;.object_data:		RESD 1
  3394                              <1> ;;.pointer_data:	RESD 1
  3395                              <1> ;;.f:		RESD 1
  3396                              <1> 	NASMX_RESERVE d_union,		uint32_t, 2
  3397                              <1> NASMX_ENDSTRUC
  3398                              <1> 
  3399                              <1> NASMX_STRUC GtkTypeInfo
  3400                              <1> 	NASMX_RESERVE type_name,	uint32_t, 1
  3401                              <1> 	NASMX_RESERVE object_size,	uint32_t, 1
  3402                              <1> 	NASMX_RESERVE class_size,	uint32_t, 1
  3403                              <1> 	NASMX_RESERVE class_init_func,	int8_t, 4 ; GtkClassInitFunc_size
  3404                              <1> 	NASMX_RESERVE object_init_func,	int8_t, 4 ; GtkObjectInitFunc_size
  3405                              <1> 	NASMX_RESERVE reserved_1,	uint32_t, 1
  3406                              <1> 	NASMX_RESERVE reserved_2,	uint32_t, 1
  3407                              <1> 	NASMX_RESERVE base_class_init_func,	int8_t, 4 ; GtkClassInitFunc_size
  3408                              <1> NASMX_ENDSTRUC
  3409                              <1> 
  3410                              <1> NASMX_STRUC GtkObject
  3411                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3412                              <1> 	NASMX_RESERVE flags,		uint32_t, 1
  3413                              <1> NASMX_ENDSTRUC
  3414                              <1> 
  3415                              <1> NASMX_STRUC GtkObjectClass
  3416                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3417                              <1> 	NASMX_RESERVE set_arg,		uint32_t, 1
  3418                              <1> 	NASMX_RESERVE get_arg,		uint32_t, 1
  3419                              <1> 	NASMX_RESERVE destroy,		uint32_t, 1
  3420                              <1> NASMX_ENDSTRUC
  3421                              <1> 
  3422                              <1> NASMX_STRUC GtkAdjustment
  3423                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkObject_size
  3424                              <1> 	NASMX_RESERVE lower,		uint32_t, 1
  3425                              <1> 	NASMX_RESERVE upper,		uint32_t, 1
  3426                              <1> 	NASMX_RESERVE value,		uint32_t, 1
  3427                              <1> 	NASMX_RESERVE step_increment,	uint32_t, 1
  3428                              <1> 	NASMX_RESERVE page_increment,	uint32_t, 1
  3429                              <1> 	NASMX_RESERVE page_size,	uint32_t, 1
  3430                              <1> NASMX_ENDSTRUC
  3431                              <1> 
  3432                              <1> NASMX_STRUC GtkAdjustmentClass
  3433                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkObjectClass_size
  3434                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  3435                              <1> 	NASMX_RESERVE value_changed,	uint32_t, 1
  3436                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  3437                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  3438                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  3439                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  3440                              <1> NASMX_ENDSTRUC
  3441                              <1> 
  3442                              <1> NASMX_STRUC GtkStyle
  3443                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3444                              <1> 	NASMX_RESERVE black,		int8_t, GdkColor_size
  3445                              <1> 	NASMX_RESERVE white,		int8_t, GdkColor_size
  3446                              <1> 	NASMX_RESERVE font_desc,	uint32_t, 1
  3447                              <1> 	NASMX_RESERVE xthickness,	uint32_t, 1
  3448                              <1> 	NASMX_RESERVE ythickness,	uint32_t, 1
  3449                              <1> 	NASMX_RESERVE fg_gc,		uint32_t, 1
  3450                              <1> 	NASMX_RESERVE bg_gc,		uint32_t, 1
  3451                              <1> 	NASMX_RESERVE light_gc,		uint32_t, 1
  3452                              <1> 	NASMX_RESERVE dark_gc,		uint32_t, 1
  3453                              <1> 	NASMX_RESERVE mid_gc,		uint32_t, 1
  3454                              <1> 	NASMX_RESERVE text_gc,		uint32_t, 1
  3455                              <1> 	NASMX_RESERVE base_gc,		uint32_t, 1
  3456                              <1> 	NASMX_RESERVE text_aa_gc,	uint32_t, 1
  3457                              <1> 	NASMX_RESERVE black_gc,		uint32_t, 1
  3458                              <1> 	NASMX_RESERVE white_gc,		uint32_t, 1
  3459                              <1> 	NASMX_RESERVE bg_pixmap,	uint32_t, 1
  3460                              <1> 	NASMX_RESERVE attach_count,	uint32_t, 1
  3461                              <1> 	NASMX_RESERVE depth,		uint32_t, 1
  3462                              <1> 	NASMX_RESERVE colormap,		uint32_t, 1
  3463                              <1> 	NASMX_RESERVE private_font,	uint32_t, 1
  3464                              <1> 	NASMX_RESERVE private_font_desc,	uint32_t, 1
  3465                              <1> 	NASMX_RESERVE rc_style,		uint32_t, 1
  3466                              <1> 	NASMX_RESERVE styles,		uint32_t, 1
  3467                              <1> 	NASMX_RESERVE property_cache,	uint32_t, 1
  3468                              <1> 	NASMX_RESERVE icon_factories,	uint32_t, 1
  3469                              <1> NASMX_ENDSTRUC
  3470                              <1> 
  3471                              <1> NASMX_STRUC GtkStyleClass
  3472                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3473                              <1> 	NASMX_RESERVE realize,		uint32_t, 1
  3474                              <1> 	NASMX_RESERVE unrealize,	uint32_t, 1
  3475                              <1> 	NASMX_RESERVE copy,		uint32_t, 1
  3476                              <1> 	NASMX_RESERVE clone,		uint32_t, 1
  3477                              <1> 	NASMX_RESERVE init_from_rc,	uint32_t, 1
  3478                              <1> 	NASMX_RESERVE set_background,	uint32_t, 1
  3479                              <1> 	NASMX_RESERVE render_icon,	uint32_t, 1
  3480                              <1> 	NASMX_RESERVE draw_hline,	uint32_t, 1
  3481                              <1> 	NASMX_RESERVE draw_vline,	uint32_t, 1
  3482                              <1> 	NASMX_RESERVE draw_shadow,	uint32_t, 1
  3483                              <1> 	NASMX_RESERVE draw_polygon,	uint32_t, 1
  3484                              <1> 	NASMX_RESERVE draw_arrow,	uint32_t, 1
  3485                              <1> 	NASMX_RESERVE draw_diamond,	uint32_t, 1
  3486                              <1> 	NASMX_RESERVE draw_string,	uint32_t, 1
  3487                              <1> 	NASMX_RESERVE draw_box,		uint32_t, 1
  3488                              <1> 	NASMX_RESERVE draw_flat_box,	uint32_t, 1
  3489                              <1> 	NASMX_RESERVE draw_check,	uint32_t, 1
  3490                              <1> 	NASMX_RESERVE draw_option,	uint32_t, 1
  3491                              <1> 	NASMX_RESERVE draw_tab,		uint32_t, 1
  3492                              <1> 	NASMX_RESERVE draw_shadow_gap,	uint32_t, 1
  3493                              <1> 	NASMX_RESERVE draw_box_gap,	uint32_t, 1
  3494                              <1> 	NASMX_RESERVE draw_extension,	uint32_t, 1
  3495                              <1> 	NASMX_RESERVE draw_focus,	uint32_t, 1
  3496                              <1> 	NASMX_RESERVE draw_slider,	uint32_t, 1
  3497                              <1> 	NASMX_RESERVE draw_handle,	uint32_t, 1
  3498                              <1> 	NASMX_RESERVE draw_expander,	uint32_t, 1
  3499                              <1> 	NASMX_RESERVE draw_layout,	uint32_t, 1
  3500                              <1> 	NASMX_RESERVE draw_resize_grip,	uint32_t, 1
  3501                              <1> 	NASMX_RESERVE draw_spinner,	uint32_t, 1
  3502                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  3503                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  3504                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  3505                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  3506                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  3507                              <1> 	NASMX_RESERVE _gtk_reserved6,	uint32_t, 1
  3508                              <1> 	NASMX_RESERVE _gtk_reserved7,	uint32_t, 1
  3509                              <1> 	NASMX_RESERVE _gtk_reserved8,	uint32_t, 1
  3510                              <1> 	NASMX_RESERVE _gtk_reserved9,	uint32_t, 1
  3511                              <1> 	NASMX_RESERVE _gtk_reserved10,	uint32_t, 1
  3512                              <1> 	NASMX_RESERVE _gtk_reserved11,	uint32_t, 1
  3513                              <1> NASMX_ENDSTRUC
  3514                              <1> 
  3515                              <1> NASMX_STRUC GtkBorder
  3516                              <1> 	NASMX_RESERVE left,		uint32_t, 1
  3517                              <1> 	NASMX_RESERVE right,		uint32_t, 1
  3518                              <1> 	NASMX_RESERVE top,		uint32_t, 1
  3519                              <1> 	NASMX_RESERVE bottom,		uint32_t, 1
  3520                              <1> NASMX_ENDSTRUC
  3521                              <1> 
  3522                              <1> NASMX_STRUC GtkRcStyle
  3523                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3524                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  3525                              <1> 	NASMX_RESERVE bg_pixmap_name,	uint32_t, 1
  3526                              <1> 	NASMX_RESERVE font_desc,	uint32_t, 1
  3527                              <1> 	NASMX_RESERVE xthickness,	uint32_t, 1
  3528                              <1> 	NASMX_RESERVE ythickness,	uint32_t, 1
  3529                              <1> 	NASMX_RESERVE rc_properties,	uint32_t, 1
  3530                              <1> 	NASMX_RESERVE rc_style_lists,	uint32_t, 1
  3531                              <1> 	NASMX_RESERVE icon_factories,	uint32_t, 1
  3532                              <1> 	NASMX_RESERVE engine_specified,	uint32_t, 1
  3533                              <1> NASMX_ENDSTRUC
  3534                              <1> 
  3535                              <1> NASMX_STRUC GtkRcStyleClass
  3536                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3537                              <1> 	NASMX_RESERVE create_rc_style,	uint32_t, 1
  3538                              <1> 	NASMX_RESERVE parse,		uint32_t, 1
  3539                              <1> 	NASMX_RESERVE merge,		uint32_t, 1
  3540                              <1> 	NASMX_RESERVE create_style,	uint32_t, 1
  3541                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  3542                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  3543                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  3544                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  3545                              <1> NASMX_ENDSTRUC
  3546                              <1> 
  3547                              <1> NASMX_STRUC GtkRcProperty
  3548                              <1> 	NASMX_RESERVE type_name,	uint32_t, 1
  3549                              <1> 	NASMX_RESERVE property_name,	uint32_t, 1
  3550                              <1> 	NASMX_RESERVE origin,		uint32_t, 1
  3551                              <1> 	NASMX_RESERVE value,		int8_t, GValue_size
  3552                              <1> NASMX_ENDSTRUC
  3553                              <1> 
  3554                              <1> NASMX_STRUC GtkSettings
  3555                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  3556                              <1> 	NASMX_RESERVE queued_settings,	uint32_t, 1
  3557                              <1> 	NASMX_RESERVE property_values,	uint32_t, 1
  3558                              <1> 	NASMX_RESERVE rc_context,	uint32_t, 1
  3559                              <1> 	NASMX_RESERVE screen,		uint32_t, 1
  3560                              <1> NASMX_ENDSTRUC
  3561                              <1> 
  3562                              <1> NASMX_STRUC GtkSettingsClass
  3563                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3564                              <1> NASMX_ENDSTRUC
  3565                              <1> 
  3566                              <1> NASMX_STRUC GtkSettingsValue
  3567                              <1> 	NASMX_RESERVE origin,		uint32_t, 1
  3568                              <1> 	NASMX_RESERVE value,		int8_t, GValue_size
  3569                              <1> NASMX_ENDSTRUC
  3570                              <1> 
  3571                              <1> NASMX_STRUC AtkPropertyValues
  3572                              <1> 	NASMX_RESERVE property_name,	uint32_t, 1
  3573                              <1> 	NASMX_RESERVE old_value,	int8_t, GValue_size
  3574                              <1> 	NASMX_RESERVE new_value,	int8_t, GValue_size
  3575                              <1> NASMX_ENDSTRUC
  3576                              <1> 
  3577                              <1> NASMX_STRUC AtkObject
  3578                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  3579                              <1> 	NASMX_RESERVE description,	uint32_t, 1
  3580                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  3581                              <1> 	NASMX_RESERVE accessible_parent,	uint32_t, 1
  3582                              <1> 	NASMX_RESERVE role,		uint32_t, 1
  3583                              <1> 	NASMX_RESERVE relation_set,	uint32_t, 1
  3584                              <1> 	NASMX_RESERVE layer,		uint32_t, 1
  3585                              <1> NASMX_ENDSTRUC
  3586                              <1> 
  3587                              <1> NASMX_STRUC AtkObjectClass
  3588                              <1> 	NASMX_RESERVE parent,		int8_t, GObjectClass_size
  3589                              <1> 	NASMX_RESERVE get_name,		uint32_t, 1
  3590                              <1> 	NASMX_RESERVE get_description,	uint32_t, 1
  3591                              <1> 	NASMX_RESERVE get_parent,	uint32_t, 1
  3592                              <1> 	NASMX_RESERVE get_n_children,	uint32_t, 1
  3593                              <1> 	NASMX_RESERVE ref_child,	uint32_t, 1
  3594                              <1> 	NASMX_RESERVE get_index_in_parent,	uint32_t, 1
  3595                              <1> 	NASMX_RESERVE ref_relation_set,	uint32_t, 1
  3596                              <1> 	NASMX_RESERVE get_role,		uint32_t, 1
  3597                              <1> 	NASMX_RESERVE get_layer,	uint32_t, 1
  3598                              <1> 	NASMX_RESERVE get_mdi_zorder,	uint32_t, 1
  3599                              <1> 	NASMX_RESERVE ref_state_set,	uint32_t, 1
  3600                              <1> 	NASMX_RESERVE set_name,		uint32_t, 1
  3601                              <1> 	NASMX_RESERVE set_description,	uint32_t, 1
  3602                              <1> 	NASMX_RESERVE set_parent,	uint32_t, 1
  3603                              <1> 	NASMX_RESERVE set_role,		uint32_t, 1
  3604                              <1> 	NASMX_RESERVE connect_property_change_handler,	uint32_t, 1
  3605                              <1> 	NASMX_RESERVE remove_property_change_handler,	uint32_t, 1
  3606                              <1> 	NASMX_RESERVE initialize,	uint32_t, 1
  3607                              <1> 	NASMX_RESERVE children_changed,	uint32_t, 1
  3608                              <1> 	NASMX_RESERVE focus_event,	uint32_t, 1
  3609                              <1> 	NASMX_RESERVE property_change,	uint32_t, 1
  3610                              <1> 	NASMX_RESERVE state_change,	uint32_t, 1
  3611                              <1> 	NASMX_RESERVE visible_data_changed,	uint32_t, 1
  3612                              <1> 	NASMX_RESERVE active_descendant_changed,	uint32_t, 1
  3613                              <1> 	NASMX_RESERVE get_attributes,	uint32_t, 1
  3614                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3615                              <1> 	NASMX_RESERVE pad2,		uint32_t, 1
  3616                              <1> NASMX_ENDSTRUC
  3617                              <1> 
  3618                              <1> NASMX_STRUC AtkImplementorIface
  3619                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3620                              <1> 	NASMX_RESERVE ref_accessible,	uint32_t, 1
  3621                              <1> NASMX_ENDSTRUC
  3622                              <1> 
  3623                              <1> NASMX_STRUC AtkActionIface
  3624                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3625                              <1> 	NASMX_RESERVE do_action,	uint32_t, 1
  3626                              <1> 	NASMX_RESERVE get_n_actions,	uint32_t, 1
  3627                              <1> 	NASMX_RESERVE get_description,	uint32_t, 1
  3628                              <1> 	NASMX_RESERVE get_name,		uint32_t, 1
  3629                              <1> 	NASMX_RESERVE get_keybinding,	uint32_t, 1
  3630                              <1> 	NASMX_RESERVE set_description,	uint32_t, 1
  3631                              <1> 	NASMX_RESERVE get_localized_name,	uint32_t, 1
  3632                              <1> 	NASMX_RESERVE pad2,		uint32_t, 1
  3633                              <1> NASMX_ENDSTRUC
  3634                              <1> 
  3635                              <1> NASMX_STRUC AtkUtil
  3636                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  3637                              <1> NASMX_ENDSTRUC
  3638                              <1> 
  3639                              <1> NASMX_STRUC AtkUtilClass
  3640                              <1> 	NASMX_RESERVE parent,		int8_t, GObjectClass_size
  3641                              <1> 	NASMX_RESERVE add_global_event_listener,	uint32_t, 1
  3642                              <1> 	NASMX_RESERVE remove_global_event_listener,	uint32_t, 1
  3643                              <1> 	NASMX_RESERVE add_key_event_listener,	uint32_t, 1
  3644                              <1> 	NASMX_RESERVE remove_key_event_listener,	uint32_t, 1
  3645                              <1> 	NASMX_RESERVE get_root,		uint32_t, 1
  3646                              <1> 	NASMX_RESERVE get_toolkit_name,	uint32_t, 1
  3647                              <1> 	NASMX_RESERVE get_toolkit_version,	uint32_t, 1
  3648                              <1> NASMX_ENDSTRUC
  3649                              <1> 
  3650                              <1> NASMX_STRUC AtkRectangle
  3651                              <1> 	NASMX_RESERVE x,		uint32_t, 1
  3652                              <1> 	NASMX_RESERVE y,		uint32_t, 1
  3653                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  3654                              <1> 	NASMX_RESERVE height,		uint32_t, 1
  3655                              <1> NASMX_ENDSTRUC
  3656                              <1> 
  3657                              <1> NASMX_STRUC AtkComponentIface
  3658                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3659                              <1> 	NASMX_RESERVE add_focus_handler,	uint32_t, 1
  3660                              <1> 	NASMX_RESERVE contains,		uint32_t, 1
  3661                              <1> 	NASMX_RESERVE ref_accessible_at_point,	uint32_t, 1
  3662                              <1> 	NASMX_RESERVE get_extents,	uint32_t, 1
  3663                              <1> 	NASMX_RESERVE get_position,	uint32_t, 1
  3664                              <1> 	NASMX_RESERVE get_size,		uint32_t, 1
  3665                              <1> 	NASMX_RESERVE grab_focus,	uint32_t, 1
  3666                              <1> 	NASMX_RESERVE remove_focus_handler,	uint32_t, 1
  3667                              <1> 	NASMX_RESERVE set_extents,	uint32_t, 1
  3668                              <1> 	NASMX_RESERVE set_position,	uint32_t, 1
  3669                              <1> 	NASMX_RESERVE set_size,		uint32_t, 1
  3670                              <1> 	NASMX_RESERVE get_layer,	uint32_t, 1
  3671                              <1> 	NASMX_RESERVE get_mdi_zorder,	uint32_t, 1
  3672                              <1> 	NASMX_RESERVE bounds_changed,	uint32_t, 1
  3673                              <1> 	NASMX_RESERVE get_alpha,	uint32_t, 1
  3674                              <1> NASMX_ENDSTRUC
  3675                              <1> 
  3676                              <1> NASMX_STRUC AtkDocumentIface
  3677                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3678                              <1> 	NASMX_RESERVE get_document_type,	uint32_t, 1
  3679                              <1> 	NASMX_RESERVE get_document,	uint32_t, 1
  3680                              <1> 	NASMX_RESERVE get_document_locale,	uint32_t, 1
  3681                              <1> 	NASMX_RESERVE get_document_attributes,	uint32_t, 1
  3682                              <1> 	NASMX_RESERVE get_document_attribute_value,	uint32_t, 1
  3683                              <1> 	NASMX_RESERVE set_document_attribute,	uint32_t, 1
  3684                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3685                              <1> 	NASMX_RESERVE pad2,		uint32_t, 1
  3686                              <1> 	NASMX_RESERVE pad3,		uint32_t, 1
  3687                              <1> 	NASMX_RESERVE pad4,		uint32_t, 1
  3688                              <1> NASMX_ENDSTRUC
  3689                              <1> 
  3690                              <1> NASMX_STRUC AtkTextIface
  3691                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3692                              <1> 	NASMX_RESERVE get_text,		uint32_t, 1
  3693                              <1> 	NASMX_RESERVE get_text_after_offset,	uint32_t, 1
  3694                              <1> 	NASMX_RESERVE get_text_at_offset,	uint32_t, 1
  3695                              <1> 	NASMX_RESERVE get_character_at_offset,	uint32_t, 1
  3696                              <1> 	NASMX_RESERVE get_text_before_offset,	uint32_t, 1
  3697                              <1> 	NASMX_RESERVE get_caret_offset,	uint32_t, 1
  3698                              <1> 	NASMX_RESERVE get_run_attributes,	uint32_t, 1
  3699                              <1> 	NASMX_RESERVE get_default_attributes,	uint32_t, 1
  3700                              <1> 	NASMX_RESERVE get_character_extents,	uint32_t, 1
  3701                              <1> 	NASMX_RESERVE get_character_count,	uint32_t, 1
  3702                              <1> 	NASMX_RESERVE get_offset_at_point,	uint32_t, 1
  3703                              <1> 	NASMX_RESERVE get_n_selections,	uint32_t, 1
  3704                              <1> 	NASMX_RESERVE get_selection,	uint32_t, 1
  3705                              <1> 	NASMX_RESERVE add_selection,	uint32_t, 1
  3706                              <1> 	NASMX_RESERVE remove_selection,	uint32_t, 1
  3707                              <1> 	NASMX_RESERVE set_selection,	uint32_t, 1
  3708                              <1> 	NASMX_RESERVE set_caret_offset,	uint32_t, 1
  3709                              <1> 	NASMX_RESERVE text_changed,	uint32_t, 1
  3710                              <1> 	NASMX_RESERVE text_caret_moved,	uint32_t, 1
  3711                              <1> 	NASMX_RESERVE text_selection_changed,	uint32_t, 1
  3712                              <1> 	NASMX_RESERVE text_attributes_changed,	uint32_t, 1
  3713                              <1> 	NASMX_RESERVE get_range_extents,	uint32_t, 1
  3714                              <1> 	NASMX_RESERVE get_bounded_ranges,	uint32_t, 1
  3715                              <1> 	NASMX_RESERVE pad4,		uint32_t, 1
  3716                              <1> NASMX_ENDSTRUC
  3717                              <1> 
  3718                              <1> NASMX_STRUC AtkEditableTextIface
  3719                              <1> 	NASMX_RESERVE parent_interface,	int8_t, GTypeInterface_size
  3720                              <1> 	NASMX_RESERVE set_run_attributes,	uint32_t, 1
  3721                              <1> 	NASMX_RESERVE set_text_contents,	uint32_t, 1
  3722                              <1> 	NASMX_RESERVE insert_text,	uint32_t, 1
  3723                              <1> 	NASMX_RESERVE copy_text,	uint32_t, 1
  3724                              <1> 	NASMX_RESERVE cut_text,		uint32_t, 1
  3725                              <1> 	NASMX_RESERVE delete_text,	uint32_t, 1
  3726                              <1> 	NASMX_RESERVE paste_text,	uint32_t, 1
  3727                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3728                              <1> 	NASMX_RESERVE pad2,		uint32_t, 1
  3729                              <1> NASMX_ENDSTRUC
  3730                              <1> 
  3731                              <1> NASMX_STRUC AtkGObjectAccessible
  3732                              <1> 	NASMX_RESERVE parent,		int8_t, AtkObject_size
  3733                              <1> NASMX_ENDSTRUC
  3734                              <1> 
  3735                              <1> NASMX_STRUC AtkGObjectAccessibleClass
  3736                              <1> 	NASMX_RESERVE parent_class,	int8_t, AtkObjectClass_size
  3737                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3738                              <1> 	NASMX_RESERVE pad2,		uint32_t, 1
  3739                              <1> NASMX_ENDSTRUC
  3740                              <1> 
  3741                              <1> NASMX_STRUC AtkHyperlink
  3742                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  3743                              <1> NASMX_ENDSTRUC
  3744                              <1> 
  3745                              <1> NASMX_STRUC AtkHyperlinkClass
  3746                              <1> 	NASMX_RESERVE parent,		int8_t, GObjectClass_size
  3747                              <1> 	NASMX_RESERVE get_uri,		uint32_t, 1
  3748                              <1> 	NASMX_RESERVE get_object,	uint32_t, 1
  3749                              <1> 	NASMX_RESERVE get_end_index,	uint32_t, 1
  3750                              <1> 	NASMX_RESERVE get_start_index,	uint32_t, 1
  3751                              <1> 	NASMX_RESERVE is_valid,		uint32_t, 1
  3752                              <1> 	NASMX_RESERVE get_n_anchors,	uint32_t, 1
  3753                              <1> 	NASMX_RESERVE link_state,	uint32_t, 1
  3754                              <1> 	NASMX_RESERVE is_selected_link,	uint32_t, 1
  3755                              <1> 	NASMX_RESERVE link_activated,	uint32_t, 1
  3756                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3757                              <1> NASMX_ENDSTRUC
  3758                              <1> 
  3759                              <1> NASMX_STRUC AtkHyperlinkImplIface
  3760                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3761                              <1> 	NASMX_RESERVE get_hyperlink,	uint32_t, 1
  3762                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3763                              <1> NASMX_ENDSTRUC
  3764                              <1> 
  3765                              <1> NASMX_STRUC AtkHypertextIface
  3766                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3767                              <1> 	NASMX_RESERVE get_link,		uint32_t, 1
  3768                              <1> 	NASMX_RESERVE get_n_links,	uint32_t, 1
  3769                              <1> 	NASMX_RESERVE get_link_index,	uint32_t, 1
  3770                              <1> 	NASMX_RESERVE link_selected,	uint32_t, 1
  3771                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3772                              <1> 	NASMX_RESERVE pad2,		uint32_t, 1
  3773                              <1> 	NASMX_RESERVE pad3,		uint32_t, 1
  3774                              <1> NASMX_ENDSTRUC
  3775                              <1> 
  3776                              <1> NASMX_STRUC AtkImageIface
  3777                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3778                              <1> 	NASMX_RESERVE get_image_position,	uint32_t, 1
  3779                              <1> 	NASMX_RESERVE get_image_description,	uint32_t, 1
  3780                              <1> 	NASMX_RESERVE get_image_size,	uint32_t, 1
  3781                              <1> 	NASMX_RESERVE set_image_description,	uint32_t, 1
  3782                              <1> 	NASMX_RESERVE get_image_locale,		uint32_t, 1
  3783                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3784                              <1> NASMX_ENDSTRUC
  3785                              <1> 
  3786                              <1> NASMX_STRUC AtkNoOpObject
  3787                              <1> 	NASMX_RESERVE parent,		int8_t, AtkObject_size
  3788                              <1> NASMX_ENDSTRUC
  3789                              <1> 
  3790                              <1> NASMX_STRUC AtkNoOpObjectClass
  3791                              <1> 	NASMX_RESERVE parent_class,	int8_t, AtkObjectClass_size
  3792                              <1> NASMX_ENDSTRUC
  3793                              <1> 
  3794                              <1> NASMX_STRUC AtkObjectFactory
  3795                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  3796                              <1> NASMX_ENDSTRUC
  3797                              <1> 
  3798                              <1> NASMX_STRUC AtkObjectFactoryClass
  3799                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3800                              <1> 	NASMX_RESERVE create_accessible,	uint32_t, 1
  3801                              <1> 	NASMX_RESERVE invalidate,	uint32_t, 1
  3802                              <1> 	NASMX_RESERVE get_accessible_type,	uint32_t, 1
  3803                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3804                              <1> 	NASMX_RESERVE pad2,		uint32_t, 1
  3805                              <1> NASMX_ENDSTRUC
  3806                              <1> 
  3807                              <1> NASMX_STRUC AtkNoOpObjectFactory
  3808                              <1> 	NASMX_RESERVE parent,		int8_t, AtkObjectFactory_size
  3809                              <1> NASMX_ENDSTRUC
  3810                              <1> 
  3811                              <1> NASMX_STRUC AtkNoOpObjectFactoryClass
  3812                              <1> 	NASMX_RESERVE parent_class,	int8_t, AtkObjectFactoryClass_size
  3813                              <1> NASMX_ENDSTRUC
  3814                              <1> 
  3815                              <1> NASMX_STRUC AtkPlug
  3816                              <1> 	NASMX_RESERVE parent,		int8_t, AtkObject_size
  3817                              <1> NASMX_ENDSTRUC
  3818                              <1> 
  3819                              <1> NASMX_STRUC AtkPlugClass
  3820                              <1> 	NASMX_RESERVE parent_class,	int8_t, AtkObjectClass_size
  3821                              <1> 	NASMX_RESERVE get_object_id,	uint32_t, 1
  3822                              <1> NASMX_ENDSTRUC
  3823                              <1> 
  3824                              <1> NASMX_STRUC AtkRegistry
  3825                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  3826                              <1> 	NASMX_RESERVE factory_type_registry,	uint32_t, 1
  3827                              <1> 	NASMX_RESERVE factory_singleton_cache,	uint32_t, 1
  3828                              <1> NASMX_ENDSTRUC
  3829                              <1> 
  3830                              <1> NASMX_STRUC AtkRegistryClass
  3831                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  3832                              <1> NASMX_ENDSTRUC
  3833                              <1> 
  3834                              <1> NASMX_STRUC AtkRelation
  3835                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  3836                              <1> 	NASMX_RESERVE target,		uint32_t, 1
  3837                              <1> 	NASMX_RESERVE relationship,	uint32_t, 1
  3838                              <1> NASMX_ENDSTRUC
  3839                              <1> 
  3840                              <1> NASMX_STRUC AtkRelationClass
  3841                              <1> 	NASMX_RESERVE parent,		int8_t, GObjectClass_size
  3842                              <1> NASMX_ENDSTRUC
  3843                              <1> 
  3844                              <1> NASMX_STRUC AtkRelationSet
  3845                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  3846                              <1> 	NASMX_RESERVE relations,	uint32_t, 1
  3847                              <1> NASMX_ENDSTRUC
  3848                              <1> 
  3849                              <1> NASMX_STRUC AtkRelationSetClass
  3850                              <1> 	NASMX_RESERVE parent,		int8_t, GObjectClass_size
  3851                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3852                              <1> 	NASMX_RESERVE pad2,		uint32_t, 1
  3853                              <1> NASMX_ENDSTRUC
  3854                              <1> 
  3855                              <1> NASMX_STRUC AtkSelectionIface
  3856                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3857                              <1> 	NASMX_RESERVE add_selection,	uint32_t, 1
  3858                              <1> 	NASMX_RESERVE clear_selection,	uint32_t, 1
  3859                              <1> 	NASMX_RESERVE ref_selection,	uint32_t, 1
  3860                              <1> 	NASMX_RESERVE get_selection_count,	uint32_t, 1
  3861                              <1> 	NASMX_RESERVE is_child_selected,	uint32_t, 1
  3862                              <1> 	NASMX_RESERVE remove_selection,		uint32_t, 1
  3863                              <1> 	NASMX_RESERVE select_all_selection,	uint32_t, 1
  3864                              <1> 	NASMX_RESERVE selection_changed,	uint32_t, 1
  3865                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3866                              <1> 	NASMX_RESERVE pad2,		uint32_t, 1
  3867                              <1> NASMX_ENDSTRUC
  3868                              <1> 
  3869                              <1> NASMX_STRUC AtkSocket
  3870                              <1> 	NASMX_RESERVE parent,		int8_t, AtkObject_size
  3871                              <1> 	NASMX_RESERVE embedded_plug_id,	uint32_t, 1
  3872                              <1> NASMX_ENDSTRUC
  3873                              <1> 
  3874                              <1> NASMX_STRUC AtkSocketClass
  3875                              <1> 	NASMX_RESERVE parent_class,	int8_t, AtkObjectClass_size
  3876                              <1> 	NASMX_RESERVE embed,		uint32_t, 1
  3877                              <1> NASMX_ENDSTRUC
  3878                              <1> 
  3879                              <1> NASMX_STRUC AtkStateSet
  3880                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  3881                              <1> NASMX_ENDSTRUC
  3882                              <1> 
  3883                              <1> NASMX_STRUC AtkStateSetClass
  3884                              <1> 	NASMX_RESERVE parent,		int8_t, GObjectClass_size
  3885                              <1> NASMX_ENDSTRUC
  3886                              <1> 
  3887                              <1> NASMX_STRUC AtkStreamableContentIface
  3888                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3889                              <1> 	NASMX_RESERVE get_n_mime_types,	uint32_t, 1
  3890                              <1> 	NASMX_RESERVE get_mime_type,	uint32_t, 1
  3891                              <1> 	NASMX_RESERVE get_stream,	uint32_t, 1
  3892                              <1> 	NASMX_RESERVE get_uri,		uint32_t, 1
  3893                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3894                              <1> 	NASMX_RESERVE pad2,		uint32_t, 1
  3895                              <1> 	NASMX_RESERVE pad3,		uint32_t, 1
  3896                              <1> NASMX_ENDSTRUC
  3897                              <1> 
  3898                              <1> NASMX_STRUC AtkTableIface
  3899                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3900                              <1> 	NASMX_RESERVE ref_at,		uint32_t, 1
  3901                              <1> 	NASMX_RESERVE get_index_at,	uint32_t, 1
  3902                              <1> 	NASMX_RESERVE get_column_at_index,	uint32_t, 1
  3903                              <1> 	NASMX_RESERVE get_row_at_index,	uint32_t, 1
  3904                              <1> 	NASMX_RESERVE get_n_columns,	uint32_t, 1
  3905                              <1> 	NASMX_RESERVE get_n_rows,	uint32_t, 1
  3906                              <1> 	NASMX_RESERVE get_column_extent_at,	uint32_t, 1
  3907                              <1> 	NASMX_RESERVE get_row_extent_at,	uint32_t, 1
  3908                              <1> 	NASMX_RESERVE get_caption,		uint32_t, 1
  3909                              <1> 	NASMX_RESERVE get_column_description,	uint32_t, 1
  3910                              <1> 	NASMX_RESERVE get_column_header,	uint32_t, 1
  3911                              <1> 	NASMX_RESERVE get_row_description,	uint32_t, 1
  3912                              <1> 	NASMX_RESERVE get_row_header,	uint32_t, 1
  3913                              <1> 	NASMX_RESERVE get_summary,	uint32_t, 1
  3914                              <1> 	NASMX_RESERVE set_caption,	uint32_t, 1
  3915                              <1> 	NASMX_RESERVE set_column_description,	uint32_t, 1
  3916                              <1> 	NASMX_RESERVE set_column_header,	uint32_t, 1
  3917                              <1> 	NASMX_RESERVE set_row_description,	uint32_t, 1
  3918                              <1> 	NASMX_RESERVE set_row_header,	uint32_t, 1
  3919                              <1> 	NASMX_RESERVE set_summary,	uint32_t, 1
  3920                              <1> 	NASMX_RESERVE get_selected_columns,	uint32_t, 1
  3921                              <1> 	NASMX_RESERVE get_selected_rows,	uint32_t, 1
  3922                              <1> 	NASMX_RESERVE is_column_selected,	uint32_t, 1
  3923                              <1> 	NASMX_RESERVE is_row_selected,	uint32_t, 1
  3924                              <1> 	NASMX_RESERVE is_selected,	uint32_t, 1
  3925                              <1> 	NASMX_RESERVE add_row_selection,	uint32_t, 1
  3926                              <1> 	NASMX_RESERVE remove_row_selection,	uint32_t, 1
  3927                              <1> 	NASMX_RESERVE add_column_selection,	uint32_t, 1
  3928                              <1> 	NASMX_RESERVE remove_column_selection,	uint32_t, 1
  3929                              <1> 	NASMX_RESERVE row_inserted,	uint32_t, 1
  3930                              <1> 	NASMX_RESERVE column_inserted,	uint32_t, 1
  3931                              <1> 	NASMX_RESERVE row_deleted,	uint32_t, 1
  3932                              <1> 	NASMX_RESERVE column_deleted,	uint32_t, 1
  3933                              <1> 	NASMX_RESERVE row_reordered,	uint32_t, 1
  3934                              <1> 	NASMX_RESERVE column_reordered,		uint32_t, 1
  3935                              <1> 	NASMX_RESERVE model_changed,	uint32_t, 1
  3936                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3937                              <1> 	NASMX_RESERVE pad2,		uint32_t, 1
  3938                              <1> 	NASMX_RESERVE pad3,		uint32_t, 1
  3939                              <1> 	NASMX_RESERVE pad4,		uint32_t, 1
  3940                              <1> NASMX_ENDSTRUC
  3941                              <1> 
  3942                              <1> NASMX_STRUC AtkMisc
  3943                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  3944                              <1> NASMX_ENDSTRUC
  3945                              <1> 
  3946                              <1> NASMX_STRUC AtkMiscClass
  3947                              <1> 	NASMX_RESERVE parent,		int8_t, GObjectClass_size
  3948                              <1> 	NASMX_RESERVE threads_enter,	uint32_t, 1
  3949                              <1> 	NASMX_RESERVE threads_leave,	uint32_t, 1
  3950                              <1> NASMX_ENDSTRUC
  3951                              <1> 
  3952                              <1> NASMX_STRUC AtkValueIface
  3953                              <1> 	NASMX_RESERVE parent,		int8_t, GTypeInterface_size
  3954                              <1> 	NASMX_RESERVE get_current_value,	uint32_t, 1
  3955                              <1> 	NASMX_RESERVE get_maximum_value,	uint32_t, 1
  3956                              <1> 	NASMX_RESERVE get_minimum_value,	uint32_t, 1
  3957                              <1> 	NASMX_RESERVE set_current_value,	uint32_t, 1
  3958                              <1> 	NASMX_RESERVE get_minimum_increment,	uint32_t, 1
  3959                              <1> 	NASMX_RESERVE pad1,		uint32_t, 1
  3960                              <1> NASMX_ENDSTRUC
  3961                              <1> 
  3962                              <1> NASMX_STRUC GtkRequisition
  3963                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  3964                              <1> 	NASMX_RESERVE height,		uint32_t, 1
  3965                              <1> NASMX_ENDSTRUC
  3966                              <1> 
  3967                              <1> NASMX_STRUC GtkWidget
  3968                              <1> 	NASMX_RESERVE object,		int8_t, GtkObject_size
  3969                              <1> 	NASMX_RESERVE private_flags,	uint16_t, 1
  3970                              <1> 	NASMX_RESERVE state,		int8_t, 1
  3971                              <1> 	NASMX_RESERVE saved_state,	int8_t, 1
  3972                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  3973                              <1> 	NASMX_RESERVE style,		uint32_t, 1
  3974                              <1> 	NASMX_RESERVE requisition,	int8_t, GtkRequisition_size
  3975                              <1> 	NASMX_RESERVE allocation,	int8_t, GdkRectangle_size
  3976                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  3977                              <1> 	NASMX_RESERVE parent,		uint32_t, 1
  3978                              <1> NASMX_ENDSTRUC
  3979                              <1> 
  3980                              <1> NASMX_STRUC GtkWidgetClass
  3981                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkObjectClass_size
  3982                              <1> 	NASMX_RESERVE activate_signal,	uint32_t, 1
  3983                              <1> 	NASMX_RESERVE set_scroll_adjustments_signal,		uint32_t, 1
  3984                              <1> 	NASMX_RESERVE dispatch_child_properties_changed,	uint32_t, 1
  3985                              <1> 	NASMX_RESERVE show,		uint32_t, 1
  3986                              <1> 	NASMX_RESERVE show_all,		uint32_t, 1
  3987                              <1> 	NASMX_RESERVE hide,		uint32_t, 1
  3988                              <1> 	NASMX_RESERVE hide_all,		uint32_t, 1
  3989                              <1> 	NASMX_RESERVE map,		uint32_t, 1
  3990                              <1> 	NASMX_RESERVE unmap,		uint32_t, 1
  3991                              <1> 	NASMX_RESERVE realize,		uint32_t, 1
  3992                              <1> 	NASMX_RESERVE unrealize,	uint32_t, 1
  3993                              <1> 	NASMX_RESERVE size_request,	uint32_t, 1
  3994                              <1> 	NASMX_RESERVE size_allocate,	uint32_t, 1
  3995                              <1> 	NASMX_RESERVE state_changed,	uint32_t, 1
  3996                              <1> 	NASMX_RESERVE parent_set,	uint32_t, 1
  3997                              <1> 	NASMX_RESERVE hierarchy_changed,	uint32_t, 1
  3998                              <1> 	NASMX_RESERVE style_set,	uint32_t, 1
  3999                              <1> 	NASMX_RESERVE direction_changed,	uint32_t, 1
  4000                              <1> 	NASMX_RESERVE grab_notify,	uint32_t, 1
  4001                              <1> 	NASMX_RESERVE child_notify,	uint32_t, 1
  4002                              <1> 	NASMX_RESERVE mnemonic_activate,	uint32_t, 1
  4003                              <1> 	NASMX_RESERVE grab_focus,	uint32_t, 1
  4004                              <1> 	NASMX_RESERVE focus,			uint32_t, 1
  4005                              <1> 	NASMX_RESERVE event,	 		uint32_t, 1
  4006                              <1> 	NASMX_RESERVE button_press_event,	uint32_t, 1
  4007                              <1> 	NASMX_RESERVE button_release_event,	uint32_t, 1
  4008                              <1> 	NASMX_RESERVE scroll_event,	uint32_t, 1
  4009                              <1> 	NASMX_RESERVE motion_notify_event,	uint32_t, 1
  4010                              <1> 	NASMX_RESERVE delete_event,	uint32_t, 1
  4011                              <1> 	NASMX_RESERVE destroy_event,	uint32_t, 1
  4012                              <1> 	NASMX_RESERVE expose_event,	uint32_t, 1
  4013                              <1> 	NASMX_RESERVE key_press_event,	uint32_t, 1
  4014                              <1> 	NASMX_RESERVE key_release_event,	uint32_t, 1
  4015                              <1> 	NASMX_RESERVE enter_notify_event,	uint32_t, 1
  4016                              <1> 	NASMX_RESERVE leave_notify_event,	uint32_t, 1
  4017                              <1> 	NASMX_RESERVE configure_event,	uint32_t, 1
  4018                              <1> 	NASMX_RESERVE focus_in_event,	uint32_t, 1
  4019                              <1> 	NASMX_RESERVE focus_out_event,	uint32_t, 1
  4020                              <1> 	NASMX_RESERVE map_event,	uint32_t, 1
  4021                              <1> 	NASMX_RESERVE unmap_event,	uint32_t, 1
  4022                              <1> 	NASMX_RESERVE property_notify_event,	uint32_t, 1
  4023                              <1> 	NASMX_RESERVE selection_clear_event,	uint32_t, 1
  4024                              <1> 	NASMX_RESERVE selection_request_event,	uint32_t, 1
  4025                              <1> 	NASMX_RESERVE selection_notify_event,	uint32_t, 1
  4026                              <1> 	NASMX_RESERVE proximity_in_event,	uint32_t, 1
  4027                              <1> 	NASMX_RESERVE proximity_out_event,	uint32_t, 1
  4028                              <1> 	NASMX_RESERVE visibility_notify_event,	uint32_t, 1
  4029                              <1> 	NASMX_RESERVE client_event,	uint32_t, 1
  4030                              <1> 	NASMX_RESERVE no_expose_event,	uint32_t, 1
  4031                              <1> 	NASMX_RESERVE window_state_event,	uint32_t, 1
  4032                              <1> 	NASMX_RESERVE selection_get,	uint32_t, 1
  4033                              <1> 	NASMX_RESERVE selection_received,	uint32_t, 1
  4034                              <1> 	NASMX_RESERVE drag_begin,	uint32_t, 1
  4035                              <1> 	NASMX_RESERVE drag_end,	uint32_t, 1
  4036                              <1> 	NASMX_RESERVE drag_data_get,	uint32_t, 1
  4037                              <1> 	NASMX_RESERVE drag_data_delete,		uint32_t, 1
  4038                              <1> 	NASMX_RESERVE drag_leave,	uint32_t, 1
  4039                              <1> 	NASMX_RESERVE drag_motion,	uint32_t, 1
  4040                              <1> 	NASMX_RESERVE drag_drop,	uint32_t, 1
  4041                              <1> 	NASMX_RESERVE drag_data_received,	uint32_t, 1
  4042                              <1> 	NASMX_RESERVE popup_menu,	uint32_t, 1
  4043                              <1> 	NASMX_RESERVE show_help,	uint32_t, 1
  4044                              <1> 	NASMX_RESERVE get_accessible,	uint32_t, 1
  4045                              <1> 	NASMX_RESERVE screen_changed,	uint32_t, 1
  4046                              <1> 	NASMX_RESERVE can_activate_accel,	uint32_t, 1
  4047                              <1> 	NASMX_RESERVE grab_broken_event,	uint32_t, 1
  4048                              <1> 	NASMX_RESERVE composited_changed,	uint32_t, 1
  4049                              <1> 	NASMX_RESERVE query_tooltip,	uint32_t, 1
  4050                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  4051                              <1> 	NASMX_RESERVE _gtk_reserved6,	uint32_t, 1
  4052                              <1> 	NASMX_RESERVE _gtk_reserved7,	uint32_t, 1
  4053                              <1> NASMX_ENDSTRUC
  4054                              <1> 
  4055                              <1> NASMX_STRUC GtkWidgetAuxInfo
  4056                              <1> 	NASMX_RESERVE x,		uint32_t, 1
  4057                              <1> 	NASMX_RESERVE y,		uint32_t, 1
  4058                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  4059                              <1> 	NASMX_RESERVE height,		uint32_t, 1
  4060                              <1> 	NASMX_RESERVE x_set,		uint32_t, 1
  4061                              <1> ;.y_set:		RESD 1
  4062                              <1> NASMX_ENDSTRUC
  4063                              <1> 
  4064                              <1> NASMX_STRUC GtkWidgetShapeInfo
  4065                              <1> 	NASMX_RESERVE offset_x,		uint16_t, 1
  4066                              <1> 	NASMX_RESERVE offset_y,		uint16_t, 1
  4067                              <1> 	NASMX_RESERVE shape_mask,	uint32_t, 1
  4068                              <1> NASMX_ENDSTRUC
  4069                              <1> 
  4070                              <1> NASMX_STRUC GtkContainer
  4071                              <1> 	NASMX_RESERVE widget,		int8_t, GtkWidget_size
  4072                              <1> 	NASMX_RESERVE focus_child,	uint32_t, 1
  4073                              <1> 	NASMX_RESERVE border_width,	uint32_t, 1
  4074                              <1> ;.need_resize:		RESD 1
  4075                              <1> ;.resize_mode:		RESD 1
  4076                              <1> ;.reallocate_redraws:	RESD 1
  4077                              <1> ;.has_focus_chain:	RESD 1
  4078                              <1> NASMX_ENDSTRUC
  4079                              <1> 
  4080                              <1> NASMX_STRUC GtkContainerClass
  4081                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  4082                              <1> 	NASMX_RESERVE add,		uint32_t, 1
  4083                              <1> 	NASMX_RESERVE remove,		uint32_t, 1
  4084                              <1> 	NASMX_RESERVE check_resize,	uint32_t, 1
  4085                              <1> 	NASMX_RESERVE forall,		uint32_t, 1
  4086                              <1> 	NASMX_RESERVE set_focus_child,	uint32_t, 1
  4087                              <1> 	NASMX_RESERVE child_type,	uint32_t, 1
  4088                              <1> 	NASMX_RESERVE composite_name,	uint32_t, 1
  4089                              <1> 	NASMX_RESERVE set_child_property,	uint32_t, 1
  4090                              <1> 	NASMX_RESERVE get_child_property,	uint32_t, 1
  4091                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4092                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4093                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4094                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4095                              <1> NASMX_ENDSTRUC
  4096                              <1> 
  4097                              <1> NASMX_STRUC GtkBin
  4098                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  4099                              <1> 	NASMX_RESERVE child,		uint32_t, 1
  4100                              <1> NASMX_ENDSTRUC
  4101                              <1> 
  4102                              <1> NASMX_STRUC GtkBinClass
  4103                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  4104                              <1> NASMX_ENDSTRUC
  4105                              <1> 
  4106                              <1> NASMX_STRUC GtkWindow
  4107                              <1> 	NASMX_RESERVE bin,		int8_t, GtkBin_size
  4108                              <1> 	NASMX_RESERVE title,		uint32_t, 1
  4109                              <1> 	NASMX_RESERVE wmclass_name,	uint32_t, 1
  4110                              <1> 	NASMX_RESERVE wmclass_class,	uint32_t, 1
  4111                              <1> 	NASMX_RESERVE wm_role,		uint32_t, 1
  4112                              <1> 	NASMX_RESERVE focus_widget,	uint32_t, 1
  4113                              <1> 	NASMX_RESERVE default_widget,	uint32_t, 1
  4114                              <1> 	NASMX_RESERVE transient_parent,	uint32_t, 1
  4115                              <1> 	NASMX_RESERVE geometry_info,	uint32_t, 1
  4116                              <1> 	NASMX_RESERVE frame,		uint32_t, 1
  4117                              <1> 	NASMX_RESERVE group,		uint32_t, 1
  4118                              <1> 	NASMX_RESERVE configure_request_count,	uint16_t, 1
  4119                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 2
  4120                              <1> 	NASMX_RESERVE allow_shrink,	uint32_t, 1
  4121                              <1> ;.allow_grow:		RESD 1
  4122                              <1> ;.configure_notify_received:	RESD 1
  4123                              <1> ;.need_default_position:	RESD 1
  4124                              <1> ;.need_default_size:	RESD 1
  4125                              <1> ;.position:		RESD 1
  4126                              <1> ;.type:		RESD 1
  4127                              <1> ;.has_user_ref_count:	RESD 1
  4128                              <1> ;.has_focus:		RESD 1
  4129                              <1> ;.modal:		RESD 1
  4130                              <1> ;.destroy_with_parent:	RESD 1
  4131                              <1> ;.has_frame:		RESD 1
  4132                              <1> ;.iconify_initially:	RESD 1
  4133                              <1> ;.stick_initially:	RESD 1
  4134                              <1> ;.maximize_initially:	RESD 1
  4135                              <1> ;.decorated:		RESD 1
  4136                              <1> ;.type_hint:		RESD 1
  4137                              <1> ;.gravity:		RESD 1
  4138                              <1> ;.is_active:		RESD 1
  4139                              <1> ;.has_toplevel_focus:	RESD 1
  4140                              <1> 	NASMX_RESERVE frame_left,	uint32_t, 1
  4141                              <1> 	NASMX_RESERVE frame_top,	uint32_t, 1
  4142                              <1> 	NASMX_RESERVE frame_right,	uint32_t, 1
  4143                              <1> 	NASMX_RESERVE frame_bottom,	uint32_t, 1
  4144                              <1> 	NASMX_RESERVE keys_changed_handler,	uint32_t, 1
  4145                              <1> 	NASMX_RESERVE mnemonic_modifier,	uint32_t, 1
  4146                              <1> 	NASMX_RESERVE screen,		uint32_t, 1
  4147                              <1> 
  4148                              <1> NASMX_ENDSTRUC
  4149                              <1> 
  4150                              <1> NASMX_STRUC GtkWindowClass
  4151                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  4152                              <1> 	NASMX_RESERVE set_focus,	uint32_t, 1
  4153                              <1> 	NASMX_RESERVE frame_event,	uint32_t, 1
  4154                              <1> 	NASMX_RESERVE activate_focus,	uint32_t, 1
  4155                              <1> 	NASMX_RESERVE activate_default,		uint32_t, 1
  4156                              <1> 	NASMX_RESERVE move_focus,	uint32_t, 1
  4157                              <1> 	NASMX_RESERVE keys_changed,	uint32_t, 1
  4158                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4159                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4160                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4161                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4162                              <1> NASMX_ENDSTRUC
  4163                              <1> 
  4164                              <1> NASMX_STRUC GtkWindowGroup
  4165                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  4166                              <1> 	NASMX_RESERVE grabs,		uint32_t, 1
  4167                              <1> NASMX_ENDSTRUC
  4168                              <1> 
  4169                              <1> NASMX_STRUC GtkWindowGroupClass
  4170                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  4171                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4172                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4173                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4174                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4175                              <1> NASMX_ENDSTRUC
  4176                              <1> 
  4177                              <1> NASMX_STRUC GtkDialog
  4178                              <1> 	NASMX_RESERVE window,		int8_t, GtkWindow_size
  4179                              <1> 	NASMX_RESERVE vbox,		uint32_t, 1
  4180                              <1> 	NASMX_RESERVE action_area,	uint32_t, 1
  4181                              <1> 	NASMX_RESERVE separator,	uint32_t, 1
  4182                              <1> NASMX_ENDSTRUC
  4183                              <1> 
  4184                              <1> NASMX_STRUC GtkDialogClass
  4185                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWindowClass_size
  4186                              <1> 	NASMX_RESERVE response,		uint32_t, 1
  4187                              <1> 	NASMX_RESERVE close,		uint32_t, 1
  4188                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4189                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4190                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4191                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4192                              <1> NASMX_ENDSTRUC
  4193                              <1> 
  4194                              <1> NASMX_STRUC GtkAboutDialog
  4195                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkDialog_size
  4196                              <1> 	NASMX_RESERVE private_data,	uint32_t, 1
  4197                              <1> NASMX_ENDSTRUC
  4198                              <1> 
  4199                              <1> NASMX_STRUC GtkAboutDialogClass
  4200                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkDialogClass_size
  4201                              <1> 	NASMX_RESERVE activate_link,	uint32_t, 1
  4202                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4203                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4204                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4205                              <1> NASMX_ENDSTRUC
  4206                              <1> 
  4207                              <1> NASMX_STRUC GtkMisc
  4208                              <1> 	NASMX_RESERVE widget,		int8_t, GtkWidget_size
  4209                              <1> 	NASMX_RESERVE xalign,		uint32_t, 1
  4210                              <1> 	NASMX_RESERVE yalign,		uint32_t, 1
  4211                              <1> 	NASMX_RESERVE xpad,		uint16_t, 1
  4212                              <1> 	NASMX_RESERVE ypad,		uint16_t, 1
  4213                              <1> NASMX_ENDSTRUC
  4214                              <1> 
  4215                              <1> NASMX_STRUC GtkMiscClass
  4216                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  4217                              <1> NASMX_ENDSTRUC
  4218                              <1> 
  4219                              <1> NASMX_STRUC GtkMenuShell
  4220                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  4221                              <1> 	NASMX_RESERVE children,		uint32_t, 1
  4222                              <1> 	NASMX_RESERVE active_menu_item,	uint32_t, 1
  4223                              <1> 	NASMX_RESERVE parent_menu_shell,	uint32_t, 1
  4224                              <1> 	NASMX_RESERVE button,		uint32_t, 1
  4225                              <1> 	NASMX_RESERVE activate_time,	uint32_t, 1
  4226                              <1> 	NASMX_RESERVE active,		uint32_t, 1
  4227                              <1> ;.have_grab:		RESD 1
  4228                              <1> ;.have_xgrab:		RESD 1
  4229                              <1> ;.ignore_leave:		RESD 1
  4230                              <1> ;.menu_flag:		RESD 1
  4231                              <1> ;.ignore_enter:		RESD 1
  4232                              <1> ;.keyboard_mode:	RESD 1
  4233                              <1> NASMX_ENDSTRUC
  4234                              <1> 
  4235                              <1> NASMX_STRUC GtkMenuShellClass
  4236                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  4237                              <1> 	NASMX_RESERVE submenu_placement,	uint32_t, 1
  4238                              <1> 	NASMX_RESERVE deactivate,	uint32_t, 1
  4239                              <1> 	NASMX_RESERVE selection_done,	uint32_t, 1
  4240                              <1> 	NASMX_RESERVE move_current,	uint32_t, 1
  4241                              <1> 	NASMX_RESERVE activate_current,	uint32_t, 1
  4242                              <1> 	NASMX_RESERVE cancel,		uint32_t, 1
  4243                              <1> 	NASMX_RESERVE select_item,	uint32_t, 1
  4244                              <1> 	NASMX_RESERVE insert,		uint32_t, 1
  4245                              <1> 	NASMX_RESERVE get_popup_delay,	uint32_t, 1
  4246                              <1> 	NASMX_RESERVE move_selected,	uint32_t, 1
  4247                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4248                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4249                              <1> NASMX_ENDSTRUC
  4250                              <1> 
  4251                              <1> NASMX_STRUC GtkMenu
  4252                              <1> 	NASMX_RESERVE menu_shell,	int8_t, GtkMenuShell_size
  4253                              <1> 	NASMX_RESERVE parent_menu_item,	uint32_t, 1
  4254                              <1> 	NASMX_RESERVE old_active_menu_item,	uint32_t, 1
  4255                              <1> 	NASMX_RESERVE accel_group,	uint32_t, 1
  4256                              <1> 	NASMX_RESERVE accel_path,	uint32_t, 1
  4257                              <1> 	NASMX_RESERVE position_func,	uint32_t, 1
  4258                              <1> 	NASMX_RESERVE position_func_data,	uint32_t, 1
  4259                              <1> 	NASMX_RESERVE toggle_size,	uint32_t, 1
  4260                              <1> 	NASMX_RESERVE toplevel,		uint32_t, 1
  4261                              <1> 	NASMX_RESERVE tearoff_window,	uint32_t, 1
  4262                              <1> 	NASMX_RESERVE tearoff_hbox,	uint32_t, 1
  4263                              <1> 	NASMX_RESERVE tearoff_scrollbar,	uint32_t, 1
  4264                              <1> 	NASMX_RESERVE tearoff_adjustment,	uint32_t, 1
  4265                              <1> 	NASMX_RESERVE view_window,	uint32_t, 1
  4266                              <1> 	NASMX_RESERVE bin_window,	uint32_t, 1
  4267                              <1> 	NASMX_RESERVE scroll_offset,	uint32_t, 1
  4268                              <1> 	NASMX_RESERVE saved_scroll_offset,	uint32_t, 1
  4269                              <1> 	NASMX_RESERVE scroll_step,	uint32_t, 1
  4270                              <1> 	NASMX_RESERVE timeout_id,	uint32_t, 1
  4271                              <1> 	NASMX_RESERVE navigation_region,	uint32_t, 1
  4272                              <1> 	NASMX_RESERVE navigation_timeout,	uint32_t, 1
  4273                              <1> 	NASMX_RESERVE needs_destruction_ref_count,	uint32_t, 1
  4274                              <1> ;.torn_off:		RESD 1
  4275                              <1> ;.tearoff_active:	RESD 1
  4276                              <1> ;.scroll_fast:		RESD 1
  4277                              <1> ;.upper_arrow_visible:	RESD 1
  4278                              <1> ;.lower_arrow_visible:	RESD 1
  4279                              <1> ;.upper_arrow_prelight:	RESD 1
  4280                              <1> ;.lower_arrow_prelight:	RESD 1
  4281                              <1> NASMX_ENDSTRUC
  4282                              <1> 
  4283                              <1> NASMX_STRUC GtkMenuClass
  4284                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkMenuShellClass_size
  4285                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4286                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4287                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4288                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4289                              <1> NASMX_ENDSTRUC
  4290                              <1> 
  4291                              <1> NASMX_STRUC GtkLabel
  4292                              <1> 	NASMX_RESERVE misc,		int8_t, GtkMisc_size
  4293                              <1> 	NASMX_RESERVE label,		uint32_t, 1
  4294                              <1> 	NASMX_RESERVE jtype,		uint32_t, 1
  4295                              <1> ;.wrap:		RESD 1
  4296                              <1> ;.use_underline:	RESD 1
  4297                              <1> ;.use_markup:		RESD 1
  4298                              <1> ;.ellipsize:		RESD 1
  4299                              <1> ;.single_line_mode:	RESD 1
  4300                              <1> ;.have_transform:	RESD 1
  4301                              <1> ;.in_click:		RESD 1
  4302                              <1> ;.wrap_mode:		RESD 1
  4303                              <1> ;.pattern_set:		RESD 1
  4304                              <1> ;.track_links:		RESD 1
  4305                              <1> 	NASMX_RESERVE mnemonic_keyval,	uint32_t, 1
  4306                              <1> 	NASMX_RESERVE text,		uint32_t, 1
  4307                              <1> 	NASMX_RESERVE attrs,		uint32_t, 1
  4308                              <1> 	NASMX_RESERVE effective_attrs,	uint32_t, 1
  4309                              <1> 	NASMX_RESERVE layout,		uint32_t, 1
  4310                              <1> 	NASMX_RESERVE mnemonic_widget,	uint32_t, 1
  4311                              <1> 	NASMX_RESERVE mnemonic_window,	uint32_t, 1
  4312                              <1> 	NASMX_RESERVE select_info,	uint32_t, 1
  4313                              <1> NASMX_ENDSTRUC
  4314                              <1> 
  4315                              <1> NASMX_STRUC GtkLabelClass
  4316                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkMiscClass_size
  4317                              <1> 	NASMX_RESERVE move_cursor,	uint32_t, 1
  4318                              <1> 	NASMX_RESERVE copy_clipboard,	uint32_t, 1
  4319                              <1> 	NASMX_RESERVE populate_popup,	uint32_t, 1
  4320                              <1> 	NASMX_RESERVE activate_link,	uint32_t, 1
  4321                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4322                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4323                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4324                              <1> NASMX_ENDSTRUC
  4325                              <1> 
  4326                              <1> NASMX_STRUC GtkAccelLabel
  4327                              <1> 	NASMX_RESERVE label,		int8_t, GtkLabel_size
  4328                              <1> 	NASMX_RESERVE gtk_reserved,	uint32_t, 1
  4329                              <1> 	NASMX_RESERVE accel_padding,	uint32_t, 1
  4330                              <1> 	NASMX_RESERVE accel_widget,	uint32_t, 1
  4331                              <1> 	NASMX_RESERVE accel_closure,	uint32_t, 1
  4332                              <1> 	NASMX_RESERVE accel_group,	uint32_t, 1
  4333                              <1> 	NASMX_RESERVE accel_string,	uint32_t, 1
  4334                              <1> 	NASMX_RESERVE accel_string_width,	uint16_t, 1
  4335                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 2
  4336                              <1> NASMX_ENDSTRUC
  4337                              <1> 
  4338                              <1> NASMX_STRUC GtkAccelLabelClass
  4339                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkLabelClass_size
  4340                              <1> 	NASMX_RESERVE signal_quote1,	uint32_t, 1
  4341                              <1> 	NASMX_RESERVE signal_quote2,	uint32_t, 1
  4342                              <1> 	NASMX_RESERVE mod_name_shift,	uint32_t, 1
  4343                              <1> 	NASMX_RESERVE mod_name_control,	uint32_t, 1
  4344                              <1> 	NASMX_RESERVE mod_name_alt,	uint32_t, 1
  4345                              <1> 	NASMX_RESERVE mod_separator,	uint32_t, 1
  4346                              <1> 	NASMX_RESERVE accel_seperator,	uint32_t, 1
  4347                              <1> 	NASMX_RESERVE latin1_to_char,	uint32_t, 1
  4348                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4349                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4350                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4351                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4352                              <1> NASMX_ENDSTRUC
  4353                              <1> 
  4354                              <1> NASMX_STRUC GtkAccessible
  4355                              <1> 	NASMX_RESERVE parent,		int8_t, AtkObject_size
  4356                              <1> 	NASMX_RESERVE widget,		uint32_t, 1
  4357                              <1> NASMX_ENDSTRUC
  4358                              <1> 
  4359                              <1> NASMX_STRUC GtkAccessibleClass
  4360                              <1> 	NASMX_RESERVE parent_class,	int8_t, AtkObjectClass_size
  4361                              <1> 	NASMX_RESERVE connect_widget_destroyed,	uint32_t, 1
  4362                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4363                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4364                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4365                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4366                              <1> NASMX_ENDSTRUC
  4367                              <1> 
  4368                              <1> NASMX_STRUC GtkAction
  4369                              <1> 	NASMX_RESERVE object,		int8_t, GObject_size
  4370                              <1> 	NASMX_RESERVE private_data,	uint32_t, 1
  4371                              <1> NASMX_ENDSTRUC
  4372                              <1> 
  4373                              <1> NASMX_STRUC GtkActionClass
  4374                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  4375                              <1> 	NASMX_RESERVE activate,		uint32_t, 1
  4376                              <1> 	NASMX_RESERVE menu_item_type,	uint32_t, 1
  4377                              <1> 	NASMX_RESERVE toolbar_item_type,	uint32_t, 1
  4378                              <1> 	NASMX_RESERVE create_menu_item,		uint32_t, 1
  4379                              <1> 	NASMX_RESERVE create_tool_item,		uint32_t, 1
  4380                              <1> 	NASMX_RESERVE connect_proxy,	uint32_t, 1
  4381                              <1> 	NASMX_RESERVE disconnect_proxy,		uint32_t, 1
  4382                              <1> 	NASMX_RESERVE create_menu,	uint32_t, 1
  4383                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4384                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4385                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4386                              <1> NASMX_ENDSTRUC
  4387                              <1> 
  4388                              <1> NASMX_STRUC GtkActionGroup
  4389                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  4390                              <1> 	NASMX_RESERVE private_data,	uint32_t, 1
  4391                              <1> NASMX_ENDSTRUC
  4392                              <1> 
  4393                              <1> NASMX_STRUC GtkActionGroupClass
  4394                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  4395                              <1> 	NASMX_RESERVE get_action,	uint32_t, 1
  4396                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4397                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4398                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4399                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4400                              <1> NASMX_ENDSTRUC
  4401                              <1> 
  4402                              <1> NASMX_STRUC GtkActionEntry
  4403                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  4404                              <1> 	NASMX_RESERVE stock_id,		uint32_t, 1
  4405                              <1> 	NASMX_RESERVE label,		uint32_t, 1
  4406                              <1> 	NASMX_RESERVE accelerator,	uint32_t, 1
  4407                              <1> 	NASMX_RESERVE tooltip,		uint32_t, 1
  4408                              <1> 	NASMX_RESERVE callback,		uint32_t, 1
  4409                              <1> NASMX_ENDSTRUC
  4410                              <1> 
  4411                              <1> NASMX_STRUC GtkToggleActionEntry
  4412                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  4413                              <1> 	NASMX_RESERVE stock_id,		uint32_t, 1
  4414                              <1> 	NASMX_RESERVE label,		uint32_t, 1
  4415                              <1> 	NASMX_RESERVE accelerator,	uint32_t, 1
  4416                              <1> 	NASMX_RESERVE tooltip,		uint32_t, 1
  4417                              <1> 	NASMX_RESERVE callback,		uint32_t, 1
  4418                              <1> 	NASMX_RESERVE is_active,	uint32_t, 1
  4419                              <1> NASMX_ENDSTRUC
  4420                              <1> 
  4421                              <1> NASMX_STRUC GtkRadioActionEntry
  4422                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  4423                              <1> 	NASMX_RESERVE stock_id,		uint32_t, 1
  4424                              <1> 	NASMX_RESERVE label,		uint32_t, 1
  4425                              <1> 	NASMX_RESERVE accelerator,	uint32_t, 1
  4426                              <1> 	NASMX_RESERVE tooltip,		uint32_t, 1
  4427                              <1> 	NASMX_RESERVE value,		uint32_t, 1
  4428                              <1> NASMX_ENDSTRUC
  4429                              <1> 
  4430                              <1> NASMX_STRUC GtkActivatableIface
  4431                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  4432                              <1> 	NASMX_RESERVE update,		uint32_t, 1
  4433                              <1> 	NASMX_RESERVE sync_action_properties,	uint32_t, 1
  4434                              <1> NASMX_ENDSTRUC
  4435                              <1> 
  4436                              <1> NASMX_STRUC GtkAlignment
  4437                              <1> 	NASMX_RESERVE bin,		int8_t, GtkBin_size
  4438                              <1> 	NASMX_RESERVE xalign,		uint32_t, 1
  4439                              <1> 	NASMX_RESERVE yalign,		uint32_t, 1
  4440                              <1> 	NASMX_RESERVE xscale,		uint32_t, 1
  4441                              <1> 	NASMX_RESERVE yscale,		uint32_t, 1
  4442                              <1> NASMX_ENDSTRUC
  4443                              <1> 
  4444                              <1> NASMX_STRUC GtkAlignmentClass
  4445                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  4446                              <1> NASMX_ENDSTRUC
  4447                              <1> 
  4448                              <1> NASMX_STRUC GtkArrow
  4449                              <1> 	NASMX_RESERVE misc,		int8_t, GtkMisc_size
  4450                              <1> 	NASMX_RESERVE arrow_type,	uint16_t, 1
  4451                              <1> 	NASMX_RESERVE shadow_type,	uint16_t, 1
  4452                              <1> NASMX_ENDSTRUC
  4453                              <1> 
  4454                              <1> NASMX_STRUC GtkArrowClass
  4455                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkMiscClass_size
  4456                              <1> NASMX_ENDSTRUC
  4457                              <1> 
  4458                              <1> NASMX_STRUC GtkFrame
  4459                              <1> 	NASMX_RESERVE bin,		int8_t, GtkBin_size
  4460                              <1> 	NASMX_RESERVE label_widget,	uint32_t, 1
  4461                              <1> 	NASMX_RESERVE shadow_type,	uint16_t, 1
  4462                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 2
  4463                              <1> 	NASMX_RESERVE label_xalign,	uint32_t, 1
  4464                              <1> 	NASMX_RESERVE label_yalign,	uint32_t, 1
  4465                              <1> 	NASMX_RESERVE child_allocation,	int8_t, GdkRectangle_size
  4466                              <1> NASMX_ENDSTRUC
  4467                              <1> 
  4468                              <1> NASMX_STRUC GtkFrameClass
  4469                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  4470                              <1> 	NASMX_RESERVE compute_child_allocation,	uint32_t, 1
  4471                              <1> NASMX_ENDSTRUC
  4472                              <1> 
  4473                              <1> NASMX_STRUC GtkAspectFrame
  4474                              <1> 	NASMX_RESERVE frame,		int8_t, GtkFrame_size
  4475                              <1> 	NASMX_RESERVE xalign,		uint32_t, 1
  4476                              <1> 	NASMX_RESERVE yalign,		uint32_t, 1
  4477                              <1> 	NASMX_RESERVE ratio,		uint32_t, 1
  4478                              <1> 	NASMX_RESERVE obey_child,	uint32_t, 1
  4479                              <1> 	NASMX_RESERVE center_allocation,	int8_t, GdkRectangle_size
  4480                              <1> NASMX_ENDSTRUC
  4481                              <1> 
  4482                              <1> NASMX_STRUC GtkAspectFrameClass
  4483                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkFrameClass_size
  4484                              <1> NASMX_ENDSTRUC
  4485                              <1> 
  4486                              <1> NASMX_STRUC GtkAssistant
  4487                              <1> 	NASMX_RESERVE parent,		int8_t, GtkWindow_size
  4488                              <1> 	NASMX_RESERVE cancel,		uint32_t, 1
  4489                              <1> 	NASMX_RESERVE forward,		uint32_t, 1
  4490                              <1> 	NASMX_RESERVE back,		uint32_t, 1
  4491                              <1> 	NASMX_RESERVE apply,		uint32_t, 1
  4492                              <1> 	NASMX_RESERVE close,		uint32_t, 1
  4493                              <1> 	NASMX_RESERVE last,		uint32_t, 1
  4494                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  4495                              <1> NASMX_ENDSTRUC
  4496                              <1> 
  4497                              <1> NASMX_STRUC GtkAssistantClass
  4498                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWindowClass_size
  4499                              <1> 	NASMX_RESERVE prepare,		uint32_t, 1
  4500                              <1> 	NASMX_RESERVE apply,		uint32_t, 1
  4501                              <1> 	NASMX_RESERVE close,		uint32_t, 1
  4502                              <1> 	NASMX_RESERVE cancel,		uint32_t, 1
  4503                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4504                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4505                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4506                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4507                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  4508                              <1> NASMX_ENDSTRUC
  4509                              <1> 
  4510                              <1> NASMX_STRUC GtkBox
  4511                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  4512                              <1> 	NASMX_RESERVE children,		uint32_t, 1
  4513                              <1> 	NASMX_RESERVE spacing,		uint16_t, 1
  4514                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 2
  4515                              <1> 	NASMX_RESERVE homogeneous,	uint32_t, 1
  4516                              <1> 
  4517                              <1> NASMX_ENDSTRUC
  4518                              <1> 
  4519                              <1> NASMX_STRUC GtkBoxClass
  4520                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  4521                              <1> NASMX_ENDSTRUC
  4522                              <1> 
  4523                              <1> NASMX_STRUC GtkBoxChild
  4524                              <1> 	NASMX_RESERVE widget,		uint32_t, 1
  4525                              <1> 	NASMX_RESERVE padding,		uint16_t, 1
  4526                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 2
  4527                              <1> 	NASMX_RESERVE expand,		uint32_t, 1
  4528                              <1> ;.fill:		RESD 1
  4529                              <1> ;.pack:		RESD 1
  4530                              <1> ;.is_secondary:		RESD 1
  4531                              <1> NASMX_ENDSTRUC
  4532                              <1> 
  4533                              <1> NASMX_STRUC GtkButtonBox
  4534                              <1> 	NASMX_RESERVE box,		int8_t, GtkBox_size
  4535                              <1> 	NASMX_RESERVE child_min_width,	uint32_t, 1
  4536                              <1> 	NASMX_RESERVE child_min_height,	uint32_t, 1
  4537                              <1> 	NASMX_RESERVE child_ipad_x,	uint32_t, 1
  4538                              <1> 	NASMX_RESERVE child_ipad_y,	uint32_t, 1
  4539                              <1> 	NASMX_RESERVE layout_style,	uint32_t, 1
  4540                              <1> NASMX_ENDSTRUC
  4541                              <1> 
  4542                              <1> NASMX_STRUC GtkButtonBoxClass
  4543                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBoxClass_size
  4544                              <1> NASMX_ENDSTRUC
  4545                              <1> 
  4546                              <1> NASMX_STRUC GtkBindingSet
  4547                              <1> 	NASMX_RESERVE set_name,		uint32_t, 1
  4548                              <1> 	NASMX_RESERVE priority,		uint32_t, 1
  4549                              <1> 	NASMX_RESERVE widget_path_pspecs,	uint32_t, 1
  4550                              <1> 	NASMX_RESERVE widget_class_pspecs,	uint32_t, 1
  4551                              <1> 	NASMX_RESERVE class_branch_pspecs,	uint32_t, 1
  4552                              <1> 	NASMX_RESERVE entries,		uint32_t, 1
  4553                              <1> 	NASMX_RESERVE current,		uint32_t, 1
  4554                              <1> 	NASMX_RESERVE parsed,		uint32_t, 1
  4555                              <1> NASMX_ENDSTRUC
  4556                              <1> 
  4557                              <1> NASMX_STRUC GtkBindingEntry
  4558                              <1> 	NASMX_RESERVE keyval,		uint32_t, 1
  4559                              <1> 	NASMX_RESERVE modifiers,	uint32_t, 1
  4560                              <1> 	NASMX_RESERVE binding_set,	uint32_t, 1
  4561                              <1> 	NASMX_RESERVE destroyed,	uint32_t, 1
  4562                              <1> ;.in_emission:		RESD 1
  4563                              <1> ;.marks_unbound:	RESD 1
  4564                              <1> 	NASMX_RESERVE set_next,		uint32_t, 1
  4565                              <1> 	NASMX_RESERVE hash_next,	uint32_t, 1
  4566                              <1> 	NASMX_RESERVE signals,		uint32_t, 1
  4567                              <1> NASMX_ENDSTRUC
  4568                              <1> 
  4569                              <1> NASMX_STRUC GtkBindingArg
  4570                              <1> 	NASMX_RESERVE arg_type,		uint32_t, 1
  4571                              <1> 	NASMX_RESERVE long_data,	uint32_t, 1
  4572                              <1> 	NASMX_RESERVE double_data,	uint32_t, 1
  4573                              <1> 	NASMX_RESERVE string_data,	uint32_t, 1
  4574                              <1> NASMX_ENDSTRUC
  4575                              <1> 
  4576                              <1> NASMX_STRUC GtkBindingSignal
  4577                              <1> 	NASMX_RESERVE next,		uint32_t, 1
  4578                              <1> 	NASMX_RESERVE signal_name,	uint32_t, 1
  4579                              <1> 	NASMX_RESERVE n_args,		uint32_t, 1
  4580                              <1> 	NASMX_RESERVE args,		uint32_t, 1
  4581                              <1> NASMX_ENDSTRUC
  4582                              <1> 
  4583                              <1> NASMX_STRUC GtkBuilder
  4584                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  4585                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  4586                              <1> NASMX_ENDSTRUC
  4587                              <1> 
  4588                              <1> NASMX_STRUC GtkBuilderClass
  4589                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  4590                              <1> 	NASMX_RESERVE get_type_from_name,	uint32_t, 1
  4591                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4592                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4593                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4594                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4595                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  4596                              <1> 	NASMX_RESERVE _gtk_reserved6,	uint32_t, 1
  4597                              <1> 	NASMX_RESERVE _gtk_reserved7,	uint32_t, 1
  4598                              <1> 	NASMX_RESERVE _gtk_reserved8,	uint32_t, 1
  4599                              <1> NASMX_ENDSTRUC
  4600                              <1> 
  4601                              <1> NASMX_STRUC GtkBuildableIface
  4602                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  4603                              <1> 	NASMX_RESERVE set_name,		uint32_t, 1
  4604                              <1> 	NASMX_RESERVE get_name,		uint32_t, 1
  4605                              <1> 	NASMX_RESERVE add_child,	uint32_t, 1
  4606                              <1> 	NASMX_RESERVE set_buildable_property,	uint32_t, 1
  4607                              <1> 	NASMX_RESERVE construct_child,	uint32_t, 1
  4608                              <1> 	NASMX_RESERVE custom_tag_start,	uint32_t, 1
  4609                              <1> 	NASMX_RESERVE custom_tag_end,	uint32_t, 1
  4610                              <1> 	NASMX_RESERVE custom_finished,	uint32_t, 1
  4611                              <1> 	NASMX_RESERVE parser_finished,	uint32_t, 1
  4612                              <1> 	NASMX_RESERVE get_internal_child,	uint32_t, 1
  4613                              <1> NASMX_ENDSTRUC
  4614                              <1> 
  4615                              <1> NASMX_STRUC GtkImagePixmapData
  4616                              <1> 	NASMX_RESERVE pixmap,		uint32_t, 1
  4617                              <1> NASMX_ENDSTRUC
  4618                              <1> 
  4619                              <1> NASMX_STRUC GtkImageImageData
  4620                              <1> 	NASMX_RESERVE image,		uint32_t, 1
  4621                              <1> NASMX_ENDSTRUC
  4622                              <1> 
  4623                              <1> NASMX_STRUC GtkImagePixbufData
  4624                              <1> 	NASMX_RESERVE pixbuf,		uint32_t, 1
  4625                              <1> NASMX_ENDSTRUC
  4626                              <1> 
  4627                              <1> NASMX_STRUC GtkImageStockData
  4628                              <1> 	NASMX_RESERVE stock_id,		uint32_t, 1
  4629                              <1> NASMX_ENDSTRUC
  4630                              <1> 
  4631                              <1> NASMX_STRUC GtkImageIconSetData
  4632                              <1> 	NASMX_RESERVE icon_set,		uint32_t, 1
  4633                              <1> NASMX_ENDSTRUC
  4634                              <1> 
  4635                              <1> NASMX_STRUC GtkImageAnimationData
  4636                              <1> 	NASMX_RESERVE anim,		uint32_t, 1
  4637                              <1> 	NASMX_RESERVE iter,		uint32_t, 1
  4638                              <1> 	NASMX_RESERVE frame_timeout,	uint32_t, 1
  4639                              <1> NASMX_ENDSTRUC
  4640                              <1> 
  4641                              <1> NASMX_STRUC GtkImageIconNameData
  4642                              <1> 	NASMX_RESERVE icon_name,	uint32_t, 1
  4643                              <1> 	NASMX_RESERVE pixbuf,		uint32_t, 1
  4644                              <1> 	NASMX_RESERVE theme_change_id,	uint32_t, 1
  4645                              <1> NASMX_ENDSTRUC
  4646                              <1> 
  4647                              <1> NASMX_STRUC GtkImageGIconData
  4648                              <1> 	NASMX_RESERVE icon,		uint32_t, 1
  4649                              <1> 	NASMX_RESERVE pixbuf,		uint32_t, 1
  4650                              <1> 	NASMX_RESERVE theme_change_id,	uint32_t, 1
  4651                              <1> NASMX_ENDSTRUC
  4652                              <1> 
  4653                              <1> NASMX_STRUC GtkImage
  4654                              <1> 	NASMX_RESERVE misc,		int8_t, GtkMisc_size
  4655                              <1> 	NASMX_RESERVE storage_type,	uint32_t, 1
  4656                              <1> 	NASMX_RESERVE pixmap,		int8_t, GtkImagePixmapData_size
  4657                              <1> 	NASMX_RESERVE image,		int8_t, GtkImageImageData_size
  4658                              <1> 	NASMX_RESERVE pixbuf,		int8_t, GtkImagePixbufData_size
  4659                              <1> 	NASMX_RESERVE stock,		int8_t, GtkImageStockData_size
  4660                              <1> 	NASMX_RESERVE icon_set,		int8_t, GtkImageIconSetData_size
  4661                              <1> 	NASMX_RESERVE anim,		int8_t, GtkImageAnimationData_size
  4662                              <1> 	NASMX_RESERVE name,		int8_t, GtkImageIconNameData_size
  4663                              <1> 	NASMX_RESERVE gicon,		int8_t, GtkImageGIconData_size
  4664                              <1> 	NASMX_RESERVE mask,		uint32_t, 1
  4665                              <1> 	NASMX_RESERVE icon_size,	uint32_t, 1
  4666                              <1> NASMX_ENDSTRUC
  4667                              <1> 
  4668                              <1> NASMX_STRUC GtkImageClass
  4669                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkMiscClass_size
  4670                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4671                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4672                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4673                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4674                              <1> NASMX_ENDSTRUC
  4675                              <1> 
  4676                              <1> NASMX_STRUC GtkButton
  4677                              <1> 	NASMX_RESERVE bin,		int8_t, GtkBin_size
  4678                              <1> 	NASMX_RESERVE event_window,	uint32_t, 1
  4679                              <1> 	NASMX_RESERVE label_text,	uint32_t, 1
  4680                              <1> 	NASMX_RESERVE activate_timeout,	uint32_t, 1
  4681                              <1> 	NASMX_RESERVE ructed,		uint32_t, 1
  4682                              <1> ;.in_button:		RESD 1
  4683                              <1> ;.button_down:		RESD 1
  4684                              <1> ;.relief:		RESD 1
  4685                              <1> ;.use_underline:	RESD 1
  4686                              <1> ;.use_stock:		RESD 1
  4687                              <1> ;.depressed:		RESD 1
  4688                              <1> ;.depress_on_activate:	RESD 1
  4689                              <1> 	NASMX_RESERVE focus_on_click,	uint32_t, 1
  4690                              <1> NASMX_ENDSTRUC
  4691                              <1> 
  4692                              <1> NASMX_STRUC GtkButtonClass
  4693                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  4694                              <1> 	NASMX_RESERVE pressed,		uint32_t, 1
  4695                              <1> 	NASMX_RESERVE released,		uint32_t, 1
  4696                              <1> 	NASMX_RESERVE clicked,		uint32_t, 1
  4697                              <1> 	NASMX_RESERVE enter,		uint32_t, 1
  4698                              <1> 	NASMX_RESERVE leave,		uint32_t, 1
  4699                              <1> 	NASMX_RESERVE activate,		uint32_t, 1
  4700                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4701                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4702                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4703                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4704                              <1> NASMX_ENDSTRUC
  4705                              <1> 
  4706                              <1> NASMX_STRUC GtkCalendar
  4707                              <1> 	NASMX_RESERVE widget,		int8_t, GtkWidget_size
  4708                              <1> 	NASMX_RESERVE header_style,	uint32_t, 1
  4709                              <1> 	NASMX_RESERVE label_style,	uint32_t, 1
  4710                              <1> 	NASMX_RESERVE month,		uint32_t, 1
  4711                              <1> 	NASMX_RESERVE year,		uint32_t, 1
  4712                              <1> 	NASMX_RESERVE selected_day,	uint32_t, 1
  4713                              <1> 	NASMX_RESERVE num_marked_dates,	uint32_t, 1
  4714                              <1> 	NASMX_RESERVE display_flags,	uint32_t, 1
  4715                              <1> 	NASMX_RESERVE gc,		uint32_t, 1
  4716                              <1> 	NASMX_RESERVE xor_gc,		uint32_t, 1
  4717                              <1> 	NASMX_RESERVE focus_row,	uint32_t, 1
  4718                              <1> 	NASMX_RESERVE focus_col,	uint32_t, 1
  4719                              <1> 	NASMX_RESERVE highlight_row,	uint32_t, 1
  4720                              <1> 	NASMX_RESERVE highlight_col,	uint32_t, 1
  4721                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  4722                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4723                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4724                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4725                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4726                              <1> NASMX_ENDSTRUC
  4727                              <1> 
  4728                              <1> NASMX_STRUC GtkCalendarClass
  4729                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  4730                              <1> 	NASMX_RESERVE month_changed,	uint32_t, 1
  4731                              <1> 	NASMX_RESERVE day_selected,	uint32_t, 1
  4732                              <1> 	NASMX_RESERVE day_selected_double_click,	uint32_t, 1
  4733                              <1> 	NASMX_RESERVE prev_month,	uint32_t, 1
  4734                              <1> 	NASMX_RESERVE next_month,	uint32_t, 1
  4735                              <1> 	NASMX_RESERVE prev_year,	uint32_t, 1
  4736                              <1> 	NASMX_RESERVE next_year,	uint32_t, 1
  4737                              <1> NASMX_ENDSTRUC
  4738                              <1> 
  4739                              <1> NASMX_STRUC GtkCellEditableIface
  4740                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  4741                              <1> 	NASMX_RESERVE editing_done,	uint32_t, 1
  4742                              <1> 	NASMX_RESERVE remove_widget,	uint32_t, 1
  4743                              <1> 	NASMX_RESERVE start_editing,	uint32_t, 1
  4744                              <1> NASMX_ENDSTRUC
  4745                              <1> 
  4746                              <1> NASMX_STRUC GtkCellRenderer
  4747                              <1> 	NASMX_RESERVE parent,		int8_t, GtkObject_size
  4748                              <1> 	NASMX_RESERVE xalign,		uint32_t, 1
  4749                              <1> 	NASMX_RESERVE yalign,		uint32_t, 1
  4750                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  4751                              <1> 	NASMX_RESERVE height,		uint32_t, 1
  4752                              <1> 	NASMX_RESERVE xpad,		uint16_t, 1
  4753                              <1> 	NASMX_RESERVE ypad,		uint16_t, 1
  4754                              <1> 	NASMX_RESERVE mode,		uint32_t, 1
  4755                              <1> ;.visible:		RESD 1
  4756                              <1> ;.is_expander:		RESD 1
  4757                              <1> ;.is_expanded:		RESD 1
  4758                              <1> ;.cell_background_set:	RESD 1
  4759                              <1> ;.sensitive:		RESD 1
  4760                              <1> ;.editing:		RESD 1
  4761                              <1> NASMX_ENDSTRUC
  4762                              <1> 
  4763                              <1> NASMX_STRUC GtkCellRendererClass
  4764                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkObjectClass_size
  4765                              <1> 	NASMX_RESERVE get_size,		uint32_t, 1
  4766                              <1> 	NASMX_RESERVE render,		uint32_t, 1
  4767                              <1> 	NASMX_RESERVE activate,		uint32_t, 1
  4768                              <1> 	NASMX_RESERVE start_editing,	uint32_t, 1
  4769                              <1> 	NASMX_RESERVE editing_canceled,	uint32_t, 1
  4770                              <1> 	NASMX_RESERVE editing_started,	uint32_t, 1
  4771                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4772                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4773                              <1> NASMX_ENDSTRUC
  4774                              <1> 
  4775                              <1> NASMX_STRUC GtkTreeIter
  4776                              <1> 	NASMX_RESERVE stamp,		uint32_t, 1
  4777                              <1> 	NASMX_RESERVE user_data,	uint32_t, 1
  4778                              <1> 	NASMX_RESERVE user_data2,	uint32_t, 1
  4779                              <1> 	NASMX_RESERVE user_data3,	uint32_t, 1
  4780                              <1> NASMX_ENDSTRUC
  4781                              <1> 
  4782                              <1> NASMX_STRUC GtkTreeModelIface
  4783                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  4784                              <1> 	NASMX_RESERVE row_changed,	uint32_t, 1
  4785                              <1> 	NASMX_RESERVE row_inserted,	uint32_t, 1
  4786                              <1> 	NASMX_RESERVE row_has_child_toggled,	uint32_t, 1
  4787                              <1> 	NASMX_RESERVE row_deleted,	uint32_t, 1
  4788                              <1> 	NASMX_RESERVE rows_reordered,	uint32_t, 1
  4789                              <1> 	NASMX_RESERVE get_flags,	uint32_t, 1
  4790                              <1> 	NASMX_RESERVE get_n_columns,	uint32_t, 1
  4791                              <1> 	NASMX_RESERVE get_column_type,	uint32_t, 1
  4792                              <1> 	NASMX_RESERVE get_iter,		uint32_t, 1
  4793                              <1> 	NASMX_RESERVE get_path,		uint32_t, 1
  4794                              <1> 	NASMX_RESERVE get_value,	uint32_t, 1
  4795                              <1> 	NASMX_RESERVE iter_next,	uint32_t, 1
  4796                              <1> 	NASMX_RESERVE iter_children,	uint32_t, 1
  4797                              <1> 	NASMX_RESERVE iter_has_child,	uint32_t, 1
  4798                              <1> 	NASMX_RESERVE iter_n_children,	uint32_t, 1
  4799                              <1> 	NASMX_RESERVE iter_nth_child,	uint32_t, 1
  4800                              <1> 	NASMX_RESERVE iter_parent,	uint32_t, 1
  4801                              <1> 	NASMX_RESERVE ref_node,		uint32_t, 1
  4802                              <1> 	NASMX_RESERVE unref_node,	uint32_t, 1
  4803                              <1> NASMX_ENDSTRUC
  4804                              <1> 
  4805                              <1> NASMX_STRUC GtkTreeSortableIface
  4806                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  4807                              <1> 	NASMX_RESERVE sort_column_changed,	uint32_t, 1
  4808                              <1> 	NASMX_RESERVE get_sort_column_id,	uint32_t, 1
  4809                              <1> 	NASMX_RESERVE set_sort_column_id,	uint32_t, 1
  4810                              <1> 	NASMX_RESERVE set_sort_func,	uint32_t, 1
  4811                              <1> 	NASMX_RESERVE set_default_sort_func,	uint32_t, 1
  4812                              <1> 	NASMX_RESERVE has_default_sort_func,	uint32_t, 1
  4813                              <1> NASMX_ENDSTRUC
  4814                              <1> 
  4815                              <1> NASMX_STRUC GtkTreeViewColumn
  4816                              <1> 	NASMX_RESERVE parent,		int8_t, GtkObject_size
  4817                              <1> 	NASMX_RESERVE tree_view,	uint32_t, 1
  4818                              <1> 	NASMX_RESERVE button,		uint32_t, 1
  4819                              <1> 	NASMX_RESERVE child,		uint32_t, 1
  4820                              <1> 	NASMX_RESERVE arrow,		uint32_t, 1
  4821                              <1> 	NASMX_RESERVE alignment,	uint32_t, 1
  4822                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  4823                              <1> 	NASMX_RESERVE editable_widget,	uint32_t, 1
  4824                              <1> 	NASMX_RESERVE xalign,		uint32_t, 1
  4825                              <1> 	NASMX_RESERVE property_changed_signal,	uint32_t, 1
  4826                              <1> 	NASMX_RESERVE spacing,		uint32_t, 1
  4827                              <1> 	NASMX_RESERVE column_type,	uint32_t, 1
  4828                              <1> 	NASMX_RESERVE requested_width,	uint32_t, 1
  4829                              <1> 	NASMX_RESERVE button_request,	uint32_t, 1
  4830                              <1> 	NASMX_RESERVE resized_width,	uint32_t, 1
  4831                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  4832                              <1> 	NASMX_RESERVE fixed_width,	uint32_t, 1
  4833                              <1> 	NASMX_RESERVE min_width,	uint32_t, 1
  4834                              <1> 	NASMX_RESERVE max_width,	uint32_t, 1
  4835                              <1> 	NASMX_RESERVE drag_x,		uint32_t, 1
  4836                              <1> 	NASMX_RESERVE drag_y,		uint32_t, 1
  4837                              <1> 	NASMX_RESERVE title,		uint32_t, 1
  4838                              <1> 	NASMX_RESERVE cell_list,	uint32_t, 1
  4839                              <1> 	NASMX_RESERVE sort_clicked_signal,	uint32_t, 1
  4840                              <1> 	NASMX_RESERVE sort_column_changed_signal,	uint32_t, 1
  4841                              <1> 	NASMX_RESERVE sort_column_id,	uint32_t, 1
  4842                              <1> 	NASMX_RESERVE sort_order,	uint32_t, 1
  4843                              <1> 	NASMX_RESERVE visible,		uint32_t, 1
  4844                              <1> ;.resizable:		RESD 1
  4845                              <1> ;.clickable:		RESD 1
  4846                              <1> ;.dirty:		RESD 1
  4847                              <1> ;.show_sort_indicator:	RESD 1
  4848                              <1> ;.maybe_reordered:	RESD 1
  4849                              <1> ;.reorderable:		RESD 1
  4850                              <1> ;.use_resized_width:	RESD 1
  4851                              <1> ;.expand:		RESD 1
  4852                              <1> NASMX_ENDSTRUC
  4853                              <1> 
  4854                              <1> NASMX_STRUC GtkTreeViewColumnClass
  4855                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkObjectClass_size
  4856                              <1> 	NASMX_RESERVE clicked,		uint32_t, 1
  4857                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4858                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4859                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4860                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4861                              <1> NASMX_ENDSTRUC
  4862                              <1> 
  4863                              <1> NASMX_STRUC GtkCellLayoutIface
  4864                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  4865                              <1> 	NASMX_RESERVE pack_start,	uint32_t, 1
  4866                              <1> 	NASMX_RESERVE pack_end,		uint32_t, 1
  4867                              <1> 	NASMX_RESERVE clear,		uint32_t, 1
  4868                              <1> 	NASMX_RESERVE add_attribute,	uint32_t, 1
  4869                              <1> 	NASMX_RESERVE set_cell_data_func,	uint32_t, 1
  4870                              <1> 	NASMX_RESERVE clear_attributes,	uint32_t, 1
  4871                              <1> 	NASMX_RESERVE reorder,		uint32_t, 1
  4872                              <1> 	NASMX_RESERVE get_cells,	uint32_t, 1
  4873                              <1> NASMX_ENDSTRUC
  4874                              <1> 
  4875                              <1> NASMX_STRUC GtkCellRendererText
  4876                              <1> 	NASMX_RESERVE parent,		int8_t, GtkCellRenderer_size
  4877                              <1> 	NASMX_RESERVE text,		uint32_t, 1
  4878                              <1> 	NASMX_RESERVE font,		uint32_t, 1
  4879                              <1> 	NASMX_RESERVE font_scale,	uint32_t, 1
  4880                              <1> 	NASMX_RESERVE foreground,	int8_t, PangoColor_size
  4881                              <1> 	NASMX_RESERVE background,	int8_t, PangoColor_size
  4882                              <1> 	NASMX_RESERVE extra_attrs,	uint32_t, 1
  4883                              <1> 	NASMX_RESERVE underline_style,	uint32_t, 1
  4884                              <1> 	NASMX_RESERVE rise,		uint32_t, 1
  4885                              <1> 	NASMX_RESERVE fixed_height_rows,	uint32_t, 1
  4886                              <1> 	NASMX_RESERVE strikethrough,	uint32_t, 1
  4887                              <1> ;.editable:		RESD 1
  4888                              <1> ;.scale_set:		RESD 1
  4889                              <1> ;.foreground_set:	RESD 1
  4890                              <1> ;.background_set:	RESD 1
  4891                              <1> ;.underline_set:	RESD 1
  4892                              <1> ;.rise_set:		RESD 1
  4893                              <1> ;.strikethrough_set:	RESD 1
  4894                              <1> ;.editable_set:		RESD 1
  4895                              <1> ;.calc_fixed_height:	RESD 1
  4896                              <1> NASMX_ENDSTRUC
  4897                              <1> 
  4898                              <1> NASMX_STRUC GtkCellRendererTextClass
  4899                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkCellRendererClass_size
  4900                              <1> 	NASMX_RESERVE edited,		uint32_t, 1
  4901                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4902                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4903                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4904                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4905                              <1> NASMX_ENDSTRUC
  4906                              <1> 
  4907                              <1> NASMX_STRUC GtkCellRendererAccel
  4908                              <1> 	NASMX_RESERVE parent,		int8_t, GtkCellRendererText_size
  4909                              <1> 	NASMX_RESERVE accel_key,	uint32_t, 1
  4910                              <1> 	NASMX_RESERVE accel_mods,	uint32_t, 1
  4911                              <1> 	NASMX_RESERVE keycode,		uint32_t, 1
  4912                              <1> 	NASMX_RESERVE accel_mode,	uint32_t, 1
  4913                              <1> 	NASMX_RESERVE edit_widget,	uint32_t, 1
  4914                              <1> 	NASMX_RESERVE grab_widget,	uint32_t, 1
  4915                              <1> 	NASMX_RESERVE sizing_label,	uint32_t, 1
  4916                              <1> NASMX_ENDSTRUC
  4917                              <1> 
  4918                              <1> NASMX_STRUC GtkCellRendererAccelClass
  4919                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkCellRendererTextClass_size
  4920                              <1> 	NASMX_RESERVE accel_edited,	uint32_t, 1
  4921                              <1> 	NASMX_RESERVE accel_cleared,	uint32_t, 1
  4922                              <1> 	NASMX_RESERVE _gtk_reserved0,	uint32_t, 1
  4923                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4924                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4925                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4926                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4927                              <1> NASMX_ENDSTRUC
  4928                              <1> 
  4929                              <1> NASMX_STRUC GtkCellRendererCombo
  4930                              <1> 	NASMX_RESERVE parent,		int8_t, GtkCellRendererText_size
  4931                              <1> 	NASMX_RESERVE model,		uint32_t, 1
  4932                              <1> 	NASMX_RESERVE text_column,	uint32_t, 1
  4933                              <1> 	NASMX_RESERVE has_entry,	uint32_t, 1
  4934                              <1> 	NASMX_RESERVE focus_out_id,	uint32_t, 1
  4935                              <1> NASMX_ENDSTRUC
  4936                              <1> 
  4937                              <1> NASMX_STRUC GtkCellRendererComboClass
  4938                              <1> 	NASMX_RESERVE parent,		int8_t, GtkCellRendererTextClass_size
  4939                              <1> NASMX_ENDSTRUC
  4940                              <1> 
  4941                              <1> NASMX_STRUC GtkCellRendererPixbuf
  4942                              <1> 	NASMX_RESERVE parent,		int8_t, GtkCellRenderer_size
  4943                              <1> 	NASMX_RESERVE pixbuf,		uint32_t, 1
  4944                              <1> 	NASMX_RESERVE pixbuf_expander_open,	uint32_t, 1
  4945                              <1> 	NASMX_RESERVE pixbuf_expander_closed,	uint32_t, 1
  4946                              <1> NASMX_ENDSTRUC
  4947                              <1> 
  4948                              <1> NASMX_STRUC GtkCellRendererPixbufClass
  4949                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkCellRendererClass_size
  4950                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4951                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4952                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4953                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4954                              <1> NASMX_ENDSTRUC
  4955                              <1> 
  4956                              <1> NASMX_STRUC GtkCellRendererProgress
  4957                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkCellRenderer_size
  4958                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  4959                              <1> NASMX_ENDSTRUC
  4960                              <1> 
  4961                              <1> NASMX_STRUC GtkCellRendererProgressClass
  4962                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkCellRendererClass_size
  4963                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4964                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4965                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4966                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4967                              <1> NASMX_ENDSTRUC
  4968                              <1> 
  4969                              <1> NASMX_STRUC GtkCellRendererSpin
  4970                              <1> 	NASMX_RESERVE parent,		int8_t, GtkCellRendererText_size
  4971                              <1> NASMX_ENDSTRUC
  4972                              <1> 
  4973                              <1> NASMX_STRUC GtkCellRendererSpinClass
  4974                              <1> 	NASMX_RESERVE parent,		int8_t, GtkCellRendererTextClass_size
  4975                              <1> NASMX_ENDSTRUC
  4976                              <1> 
  4977                              <1> NASMX_STRUC GtkCellRendererSpinner
  4978                              <1> 	NASMX_RESERVE parent,		int8_t, GtkCellRenderer_size
  4979                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  4980                              <1> NASMX_ENDSTRUC
  4981                              <1> 
  4982                              <1> NASMX_STRUC GtkCellRendererSpinnerClass
  4983                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkCellRendererClass_size
  4984                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  4985                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  4986                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  4987                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  4988                              <1> NASMX_ENDSTRUC
  4989                              <1> 
  4990                              <1> NASMX_STRUC GtkCellRendererToggle
  4991                              <1> 	NASMX_RESERVE parent,		int8_t, GtkCellRenderer_size
  4992                              <1> 	NASMX_RESERVE active,		uint32_t, 1
  4993                              <1> ;.activatable:		RESD 1
  4994                              <1> ;.radio:		RESD 1
  4995                              <1> NASMX_ENDSTRUC
  4996                              <1> 
  4997                              <1> NASMX_STRUC GtkCellRendererToggleClass
  4998                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkCellRendererClass_size
  4999                              <1> 	NASMX_RESERVE toggled,		uint32_t, 1
  5000                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5001                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5002                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5003                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5004                              <1> NASMX_ENDSTRUC
  5005                              <1> 
  5006                              <1> NASMX_STRUC GtkCellView
  5007                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkWidget_size
  5008                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5009                              <1> NASMX_ENDSTRUC
  5010                              <1> 
  5011                              <1> NASMX_STRUC GtkCellViewClass
  5012                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  5013                              <1> NASMX_ENDSTRUC
  5014                              <1> 
  5015                              <1> NASMX_STRUC GtkToggleButton
  5016                              <1> 	NASMX_RESERVE button,		int8_t, GtkButton_size
  5017                              <1> 	NASMX_RESERVE active,		uint32_t, 1
  5018                              <1> ;.draw_indicator:	RESD 1
  5019                              <1> ;.inconsistent:		RESD 1
  5020                              <1> NASMX_ENDSTRUC
  5021                              <1> 
  5022                              <1> NASMX_STRUC GtkToggleButtonClass
  5023                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkButtonClass_size
  5024                              <1> 	NASMX_RESERVE toggled,		uint32_t, 1
  5025                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5026                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5027                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5028                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5029                              <1> NASMX_ENDSTRUC
  5030                              <1> 
  5031                              <1> NASMX_STRUC GtkCheckButton
  5032                              <1> 	NASMX_RESERVE toggle_button,	int8_t, GtkToggleButton_size
  5033                              <1> NASMX_ENDSTRUC
  5034                              <1> 
  5035                              <1> NASMX_STRUC GtkCheckButtonClass
  5036                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkToggleButtonClass_size
  5037                              <1> 	NASMX_RESERVE draw_indicator,	uint32_t, 1
  5038                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5039                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5040                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5041                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5042                              <1> NASMX_ENDSTRUC
  5043                              <1> 
  5044                              <1> NASMX_STRUC GtkItem
  5045                              <1> 	NASMX_RESERVE bin,		int8_t, GtkBin_size
  5046                              <1> NASMX_ENDSTRUC
  5047                              <1> 
  5048                              <1> NASMX_STRUC GtkItemClass
  5049                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  5050                              <1> 	NASMX_RESERVE select,		uint32_t, 1
  5051                              <1> 	NASMX_RESERVE deselect,		uint32_t, 1
  5052                              <1> 	NASMX_RESERVE toggle,		uint32_t, 1
  5053                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5054                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5055                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5056                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5057                              <1> NASMX_ENDSTRUC
  5058                              <1> 
  5059                              <1> NASMX_STRUC GtkMenuItem
  5060                              <1> 	NASMX_RESERVE item,		int8_t, GtkItem_size
  5061                              <1> 	NASMX_RESERVE submenu,		uint32_t, 1
  5062                              <1> 	NASMX_RESERVE event_window,	uint32_t, 1
  5063                              <1> 	NASMX_RESERVE toggle_size,	uint16_t, 1
  5064                              <1> 	NASMX_RESERVE accelerator_width,	uint16_t, 1
  5065                              <1> 	NASMX_RESERVE accel_path,	uint32_t, 1
  5066                              <1> 	NASMX_RESERVE show_submenu_indicator,	uint32_t, 1
  5067                              <1> ;.submenu_placement:	RESD 1
  5068                              <1> ;.submenu_direction:	RESD 1
  5069                              <1> ;.right_justify:	RESD 1
  5070                              <1> ;.timer_from_keypress:	RESD 1
  5071                              <1> ;.from_menubar:		RESD 1
  5072                              <1> 	NASMX_RESERVE timer,		uint32_t, 1
  5073                              <1> NASMX_ENDSTRUC
  5074                              <1> 
  5075                              <1> NASMX_STRUC GtkMenuItemClass
  5076                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkItemClass_size
  5077                              <1> 	NASMX_RESERVE hide_on_activate,	uint32_t, 1
  5078                              <1> 	NASMX_RESERVE activate,		uint32_t, 1
  5079                              <1> 	NASMX_RESERVE activate_item,	uint32_t, 1
  5080                              <1> 	NASMX_RESERVE toggle_size_request,	uint32_t, 1
  5081                              <1> 	NASMX_RESERVE toggle_size_allocate,	uint32_t, 1
  5082                              <1> 	NASMX_RESERVE set_label,	uint32_t, 1
  5083                              <1> 	NASMX_RESERVE get_label,	uint32_t, 1
  5084                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5085                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5086                              <1> NASMX_ENDSTRUC
  5087                              <1> 
  5088                              <1> NASMX_STRUC GtkCheckMenuItem
  5089                              <1> 	NASMX_RESERVE menu_item,	int8_t, GtkMenuItem_size
  5090                              <1> 	NASMX_RESERVE active,		uint32_t, 1
  5091                              <1> ;.always_show_toggle:	RESD 1
  5092                              <1> ;.inconsistent:		RESD 1
  5093                              <1> ;.draw_as_radio:	RESD 1
  5094                              <1> NASMX_ENDSTRUC
  5095                              <1> 
  5096                              <1> NASMX_STRUC GtkCheckMenuItemClass
  5097                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkMenuItemClass_size
  5098                              <1> 	NASMX_RESERVE toggled,		uint32_t, 1
  5099                              <1> 	NASMX_RESERVE draw_indicator,	uint32_t, 1
  5100                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5101                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5102                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5103                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5104                              <1> NASMX_ENDSTRUC
  5105                              <1> 
  5106                              <1> NASMX_STRUC GtkTextTag
  5107                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  5108                              <1> 	NASMX_RESERVE table,		uint32_t, 1
  5109                              <1> 	NASMX_RESERVE name,		uint32_t, 1
  5110                              <1> 	NASMX_RESERVE priority,		uint32_t, 1
  5111                              <1> 	NASMX_RESERVE values,		uint32_t, 1
  5112                              <1> 	NASMX_RESERVE bg_color_set,	uint32_t, 1
  5113                              <1> ;.bg_stipple_set:	RESD 1
  5114                              <1> ;.fg_color_set:		RESD 1
  5115                              <1> ;.scale_set:		RESD 1
  5116                              <1> ;.fg_stipple_set:	RESD 1
  5117                              <1> ;.justification_set:	RESD 1
  5118                              <1> 
  5119                              <1> ;.left_margin_set:	RESD 1
  5120                              <1> ;.indent_set:		RESD 1
  5121                              <1> ;.rise_set:		RESD 1
  5122                              <1> ;.strikethrough_set:	RESD 1
  5123                              <1> ;.right_margin_set:	RESD 1
  5124                              <1> ;.pixels_above_lines_set:	RESD 1
  5125                              <1> ;.pixels_below_lines_set:	RESD 1
  5126                              <1> ;.pixels_inside_wrap_set:	RESD 1
  5127                              <1> ;.tabs_set:		RESD 1
  5128                              <1> ;.underline_set:	RESD 1
  5129                              <1> ;.wrap_mode_set:	RESD 1
  5130                              <1> ;.bg_full_height_set:	RESD 1
  5131                              <1> ;.invisible_set:	RESD 1
  5132                              <1> ;.editable_set:		RESD 1
  5133                              <1> ;.language_set:		RESD 1
  5134                              <1> ;.pg_bg_color_set:	RESD 1
  5135                              <1> ;.accumulative_margin:	RESD 1
  5136                              <1> ;.pad1:		RESD 1
  5137                              <1> NASMX_ENDSTRUC
  5138                              <1> 
  5139                              <1> NASMX_STRUC GtkTextTagClass
  5140                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  5141                              <1> 	NASMX_RESERVE event,		uint32_t, 1
  5142                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5143                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5144                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5145                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5146                              <1> NASMX_ENDSTRUC
  5147                              <1> 
  5148                              <1> NASMX_STRUC GtkTextAppearance
  5149                              <1> 	NASMX_RESERVE bg_color,		int8_t, GdkColor_size
  5150                              <1> 	NASMX_RESERVE fg_color,		int8_t, GdkColor_size
  5151                              <1> 	NASMX_RESERVE bg_stipple,	uint32_t, 1
  5152                              <1> 	NASMX_RESERVE fg_stipple,	uint32_t, 1
  5153                              <1> 	NASMX_RESERVE rise,		uint32_t, 1
  5154                              <1> 	NASMX_RESERVE padding1,		uint32_t, 1
  5155                              <1> 	NASMX_RESERVE underline,	uint32_t, 1
  5156                              <1> ;.strikethrough:	RESD 1
  5157                              <1> ;.draw_bg:		RESD 1
  5158                              <1> ;.inside_selection:	RESD 1
  5159                              <1> ;.is_text:		RESD 1
  5160                              <1> ;.pad1:		RESD 1
  5161                              <1> ;.pad2:		RESD 1
  5162                              <1> ;.pad3:		RESD 1
  5163                              <1> ;.pad4:		RESD 1
  5164                              <1> NASMX_ENDSTRUC
  5165                              <1> 
  5166                              <1> NASMX_STRUC GtkTextAttributes
  5167                              <1> 	NASMX_RESERVE refcount,		uint32_t, 1
  5168                              <1> 	NASMX_RESERVE appearance,	int8_t, GtkTextAppearance_size
  5169                              <1> 	NASMX_RESERVE justification,	uint32_t, 1
  5170                              <1> 	NASMX_RESERVE direction,	uint32_t, 1
  5171                              <1> 	NASMX_RESERVE font,		uint32_t, 1
  5172                              <1> 	NASMX_RESERVE font_scale,	uint32_t, 1
  5173                              <1> 	NASMX_RESERVE left_margin,	uint32_t, 1
  5174                              <1> 	NASMX_RESERVE indent,		uint32_t, 1
  5175                              <1> 	NASMX_RESERVE right_margin,	uint32_t, 1
  5176                              <1> 	NASMX_RESERVE pixels_above_lines,	uint32_t, 1
  5177                              <1> 	NASMX_RESERVE pixels_below_lines,	uint32_t, 1
  5178                              <1> 	NASMX_RESERVE pixels_inside_wrap,	uint32_t, 1
  5179                              <1> 	NASMX_RESERVE tabs,		uint32_t, 1
  5180                              <1> 	NASMX_RESERVE wrap_mode,	uint32_t, 1
  5181                              <1> 	NASMX_RESERVE language,		uint32_t, 1
  5182                              <1> 	NASMX_RESERVE pg_bg_color,	uint32_t, 1
  5183                              <1> 	NASMX_RESERVE invisible,	uint32_t, 1
  5184                              <1> ;.bg_full_height:	RESD 1
  5185                              <1> ;.editable:		RESD 1
  5186                              <1> ;.realized:		RESD 1
  5187                              <1> ;.pad1:		RESD 1
  5188                              <1> ;.pad2:		RESD 1
  5189                              <1> ;.pad3:		RESD 1
  5190                              <1> ;.pad4:		RESD 1
  5191                              <1> NASMX_ENDSTRUC
  5192                              <1> 
  5193                              <1> NASMX_STRUC GtkTextChildAnchor
  5194                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  5195                              <1> 	NASMX_RESERVE segment,		uint32_t, 1
  5196                              <1> NASMX_ENDSTRUC
  5197                              <1> 
  5198                              <1> NASMX_STRUC GtkTextChildAnchorClass
  5199                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  5200                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5201                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5202                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5203                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5204                              <1> NASMX_ENDSTRUC
  5205                              <1> 
  5206                              <1> NASMX_STRUC GtkSelectionData
  5207                              <1> 	NASMX_RESERVE selection,	uint32_t, 1
  5208                              <1> 	NASMX_RESERVE target,		uint32_t, 1
  5209                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  5210                              <1> 	NASMX_RESERVE format,		uint32_t, 1
  5211                              <1> 	NASMX_RESERVE data,		uint32_t, 1
  5212                              <1> 	NASMX_RESERVE length,		uint32_t, 1
  5213                              <1> 	NASMX_RESERVE display,		uint32_t, 1
  5214                              <1> NASMX_ENDSTRUC
  5215                              <1> 
  5216                              <1> NASMX_STRUC GtkVBox
  5217                              <1> 	NASMX_RESERVE box,		int8_t, GtkBox_size
  5218                              <1> NASMX_ENDSTRUC
  5219                              <1> 
  5220                              <1> NASMX_STRUC GtkVBoxClass
  5221                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBoxClass_size
  5222                              <1> NASMX_ENDSTRUC
  5223                              <1> 
  5224                              <1> NASMX_STRUC GtkColorSelection
  5225                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkVBox_size
  5226                              <1> 	NASMX_RESERVE private_data,	uint32_t, 1
  5227                              <1> NASMX_ENDSTRUC
  5228                              <1> 
  5229                              <1> NASMX_STRUC GtkColorSelectionClass
  5230                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkVBoxClass_size
  5231                              <1> 	NASMX_RESERVE color_changed,	uint32_t, 1
  5232                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5233                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5234                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5235                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5236                              <1> NASMX_ENDSTRUC
  5237                              <1> 
  5238                              <1> NASMX_STRUC GtkColorSelectionDialog
  5239                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkDialog_size
  5240                              <1> 	NASMX_RESERVE colorsel,		uint32_t, 1
  5241                              <1> 	NASMX_RESERVE ok_button,	uint32_t, 1
  5242                              <1> 	NASMX_RESERVE cancel_button,	uint32_t, 1
  5243                              <1> 	NASMX_RESERVE help_button,	uint32_t, 1
  5244                              <1> NASMX_ENDSTRUC
  5245                              <1> 
  5246                              <1> NASMX_STRUC GtkColorSelectionDialogClass
  5247                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkDialogClass_size
  5248                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5249                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5250                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5251                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5252                              <1> NASMX_ENDSTRUC
  5253                              <1> 
  5254                              <1> NASMX_STRUC GtkEditableClass
  5255                              <1> 	NASMX_RESERVE base_iface,	int8_t, GTypeInterface_size
  5256                              <1> 	NASMX_RESERVE insert_text,	uint32_t, 1
  5257                              <1> 	NASMX_RESERVE delete_text,	uint32_t, 1
  5258                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  5259                              <1> 	NASMX_RESERVE do_insert_text,	uint32_t, 1
  5260                              <1> 	NASMX_RESERVE do_delete_text,	uint32_t, 1
  5261                              <1> 	NASMX_RESERVE get_chars,	uint32_t, 1
  5262                              <1> 	NASMX_RESERVE set_selection_bounds,	uint32_t, 1
  5263                              <1> 	NASMX_RESERVE get_selection_bounds,	uint32_t, 1
  5264                              <1> 	NASMX_RESERVE set_position,	uint32_t, 1
  5265                              <1> 	NASMX_RESERVE get_position,	uint32_t, 1
  5266                              <1> NASMX_ENDSTRUC
  5267                              <1> 
  5268                              <1> NASMX_STRUC GtkIMContext
  5269                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  5270                              <1> NASMX_ENDSTRUC
  5271                              <1> 
  5272                              <1> NASMX_STRUC GtkIMContextClass
  5273                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkObjectClass_size
  5274                              <1> 	NASMX_RESERVE preedit_start,	uint32_t, 1
  5275                              <1> 	NASMX_RESERVE preedit_end,	uint32_t, 1
  5276                              <1> 	NASMX_RESERVE preedit_changed,	uint32_t, 1
  5277                              <1> 	NASMX_RESERVE commit,		uint32_t, 1
  5278                              <1> 	NASMX_RESERVE retrieve_surrounding,	uint32_t, 1
  5279                              <1> 	NASMX_RESERVE delete_surrounding,	uint32_t, 1
  5280                              <1> 	NASMX_RESERVE set_client_window,	uint32_t, 1
  5281                              <1> 	NASMX_RESERVE get_preedit_string,	uint32_t, 1
  5282                              <1> 	NASMX_RESERVE filter_keypress,	uint32_t, 1
  5283                              <1> 	NASMX_RESERVE focus_in,		uint32_t, 1
  5284                              <1> 	NASMX_RESERVE focus_out,	uint32_t, 1
  5285                              <1> 	NASMX_RESERVE reset,		uint32_t, 1
  5286                              <1> 	NASMX_RESERVE set_cursor_location,	uint32_t, 1
  5287                              <1> 	NASMX_RESERVE set_use_preedit,	uint32_t, 1
  5288                              <1> 	NASMX_RESERVE set_surrounding,	uint32_t, 1
  5289                              <1> 	NASMX_RESERVE get_surrounding,	uint32_t, 1
  5290                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5291                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5292                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5293                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5294                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  5295                              <1> 	NASMX_RESERVE _gtk_reserved6,	uint32_t, 1
  5296                              <1> NASMX_ENDSTRUC
  5297                              <1> 
  5298                              <1> NASMX_STRUC GtkEntryBuffer
  5299                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  5300                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5301                              <1> NASMX_ENDSTRUC
  5302                              <1> 
  5303                              <1> NASMX_STRUC GtkEntryBufferClass
  5304                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  5305                              <1> 	NASMX_RESERVE inserted_text,	uint32_t, 1
  5306                              <1> 	NASMX_RESERVE deleted_text,	uint32_t, 1
  5307                              <1> 	NASMX_RESERVE get_text,		uint32_t, 1
  5308                              <1> 	NASMX_RESERVE get_length,	uint32_t, 1
  5309                              <1> 	NASMX_RESERVE insert_text,	uint32_t, 1
  5310                              <1> 	NASMX_RESERVE delete_text,	uint32_t, 1
  5311                              <1> 	NASMX_RESERVE _gtk_reserved0,	uint32_t, 1
  5312                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5313                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5314                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5315                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5316                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  5317                              <1> NASMX_ENDSTRUC
  5318                              <1> 
  5319                              <1> NASMX_STRUC GtkListStore
  5320                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  5321                              <1> 	NASMX_RESERVE stamp,		uint32_t, 1
  5322                              <1> 	NASMX_RESERVE seq,		uint32_t, 1
  5323                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5324                              <1> 	NASMX_RESERVE sort_list,	uint32_t, 1
  5325                              <1> 	NASMX_RESERVE n_columns,	uint32_t, 1
  5326                              <1> 	NASMX_RESERVE sort_column_id,	uint32_t, 1
  5327                              <1> 	NASMX_RESERVE order,		uint32_t, 1
  5328                              <1> 	NASMX_RESERVE column_headers,	uint32_t, 1
  5329                              <1> 	NASMX_RESERVE length,		uint32_t, 1
  5330                              <1> 	NASMX_RESERVE default_sort_func,	uint32_t, 1
  5331                              <1> 	NASMX_RESERVE default_sort_data,	uint32_t, 1
  5332                              <1> 	NASMX_RESERVE default_sort_destroy,	uint32_t, 1
  5333                              <1> 	NASMX_RESERVE columns_dirty,	uint32_t, 1
  5334                              <1> NASMX_ENDSTRUC
  5335                              <1> 
  5336                              <1> NASMX_STRUC GtkListStoreClass
  5337                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  5338                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5339                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5340                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5341                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5342                              <1> NASMX_ENDSTRUC
  5343                              <1> 
  5344                              <1> NASMX_STRUC GtkTreeModelFilter
  5345                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  5346                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5347                              <1> NASMX_ENDSTRUC
  5348                              <1> 
  5349                              <1> NASMX_STRUC GtkTreeModelFilterClass
  5350                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  5351                              <1> 	NASMX_RESERVE _gtk_reserved0,	uint32_t, 1
  5352                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5353                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5354                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5355                              <1> NASMX_ENDSTRUC
  5356                              <1> 
  5357                              <1> NASMX_STRUC GtkEntryCompletion
  5358                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  5359                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5360                              <1> NASMX_ENDSTRUC
  5361                              <1> 
  5362                              <1> NASMX_STRUC GtkEntryCompletionClass
  5363                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  5364                              <1> 	NASMX_RESERVE match_selected,	uint32_t, 1
  5365                              <1> 	NASMX_RESERVE action_activated,	uint32_t, 1
  5366                              <1> 	NASMX_RESERVE insert_prefix,	uint32_t, 1
  5367                              <1> 	NASMX_RESERVE cursor_on_match,	uint32_t, 1
  5368                              <1> 	NASMX_RESERVE _gtk_reserved0,	uint32_t, 1
  5369                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5370                              <1> NASMX_ENDSTRUC
  5371                              <1> 
  5372                              <1> NASMX_STRUC GtkEntry
  5373                              <1> 	NASMX_RESERVE widget,		int8_t, GtkWidget_size
  5374                              <1> 	NASMX_RESERVE text,		uint32_t, 1
  5375                              <1> 	NASMX_RESERVE editable,		uint32_t, 1
  5376                              <1> ;.visible:		RESD 1
  5377                              <1> ;.overwrite_mode:	RESD 1
  5378                              <1> ;.in_drag:		RESD 1
  5379                              <1> 	NASMX_RESERVE text_length,	uint16_t, 1
  5380                              <1> 	NASMX_RESERVE text_max_length,	uint16_t, 1
  5381                              <1> 	NASMX_RESERVE text_area,	uint32_t, 1
  5382                              <1> 	NASMX_RESERVE im_context,	uint32_t, 1
  5383                              <1> 	NASMX_RESERVE popup_menu,	uint32_t, 1
  5384                              <1> 	NASMX_RESERVE current_pos,	uint32_t, 1
  5385                              <1> 	NASMX_RESERVE selection_bound,	uint32_t, 1
  5386                              <1> 	NASMX_RESERVE cached_layout,	uint32_t, 1
  5387                              <1> 	NASMX_RESERVE cache_includes_preedit,	uint32_t, 1
  5388                              <1> ;.need_im_reset:	RESD 1
  5389                              <1> ;.has_frame:		RESD 1
  5390                              <1> ;.activates_default:	RESD 1
  5391                              <1> ;.cursor_visible:	RESD 1
  5392                              <1> ;.in_click:		RESD 1
  5393                              <1> ;.is_cell_renderer:	RESD 1
  5394                              <1> ;.editing_canceled:	RESD 1
  5395                              <1> ;.mouse_cursor_obscured:	RESD 1
  5396                              <1> ;.select_words:		RESD 1
  5397                              <1> ;.select_lines:		RESD 1
  5398                              <1> ;.resolved_dir:		RESD 1
  5399                              <1> ;.truncate_multiline:	RESD 1
  5400                              <1> 	NASMX_RESERVE button,		uint32_t, 1
  5401                              <1> 	NASMX_RESERVE blink_timeout,	uint32_t, 1
  5402                              <1> 	NASMX_RESERVE recompute_idle,	uint32_t, 1
  5403                              <1> 	NASMX_RESERVE scroll_offset,	uint32_t, 1
  5404                              <1> 	NASMX_RESERVE ascent,		uint32_t, 1
  5405                              <1> 	NASMX_RESERVE descent,		uint32_t, 1
  5406                              <1> 	NASMX_RESERVE x_text_size,	uint16_t, 1
  5407                              <1> 	NASMX_RESERVE x_n_bytes,	uint16_t, 1
  5408                              <1> 	NASMX_RESERVE preedit_length,	uint16_t, 1
  5409                              <1> 	NASMX_RESERVE preedit_cursor,	uint16_t, 1
  5410                              <1> 	NASMX_RESERVE dnd_position,	uint32_t, 1
  5411                              <1> 	NASMX_RESERVE drag_start_x,	uint32_t, 1
  5412                              <1> 	NASMX_RESERVE drag_start_y,	uint32_t, 1
  5413                              <1> 	NASMX_RESERVE invisible_char,	uint32_t, 1
  5414                              <1> 	NASMX_RESERVE width_chars,	uint32_t, 1
  5415                              <1> NASMX_ENDSTRUC
  5416                              <1> 
  5417                              <1> NASMX_STRUC GtkEntryClass
  5418                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  5419                              <1> 	NASMX_RESERVE populate_popup,	uint32_t, 1
  5420                              <1> 	NASMX_RESERVE activate,		uint32_t, 1
  5421                              <1> 	NASMX_RESERVE move_cursor,	uint32_t, 1
  5422                              <1> 	NASMX_RESERVE insert_at_cursor,	uint32_t, 1
  5423                              <1> 	NASMX_RESERVE delete_from_cursor,	uint32_t, 1
  5424                              <1> 	NASMX_RESERVE backspace,	uint32_t, 1
  5425                              <1> 	NASMX_RESERVE cut_clipboard,	uint32_t, 1
  5426                              <1> 	NASMX_RESERVE copy_clipboard,	uint32_t, 1
  5427                              <1> 	NASMX_RESERVE paste_clipboard,	uint32_t, 1
  5428                              <1> 	NASMX_RESERVE toggle_overwrite,	uint32_t, 1
  5429                              <1> 	NASMX_RESERVE get_text_area_size,	uint32_t, 1
  5430                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5431                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5432                              <1> NASMX_ENDSTRUC
  5433                              <1> 
  5434                              <1> NASMX_STRUC GtkTreeView
  5435                              <1> 	NASMX_RESERVE parent,		int8_t, GtkContainer_size
  5436                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5437                              <1> NASMX_ENDSTRUC
  5438                              <1> 
  5439                              <1> NASMX_STRUC GtkTreeViewClass
  5440                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  5441                              <1> 	NASMX_RESERVE set_scroll_adjustments,	uint32_t, 1
  5442                              <1> 	NASMX_RESERVE row_activated,	uint32_t, 1
  5443                              <1> 	NASMX_RESERVE test_expand_row,	uint32_t, 1
  5444                              <1> 	NASMX_RESERVE test_collapse_row,	uint32_t, 1
  5445                              <1> 	NASMX_RESERVE row_expanded,	uint32_t, 1
  5446                              <1> 	NASMX_RESERVE row_collapsed,	uint32_t, 1
  5447                              <1> 	NASMX_RESERVE columns_changed,	uint32_t, 1
  5448                              <1> 	NASMX_RESERVE cursor_changed,	uint32_t, 1
  5449                              <1> 	NASMX_RESERVE move_cursor,	uint32_t, 1
  5450                              <1> 	NASMX_RESERVE select_all,	uint32_t, 1
  5451                              <1> 	NASMX_RESERVE unselect_all,	uint32_t, 1
  5452                              <1> 	NASMX_RESERVE select_cursor_row,	uint32_t, 1
  5453                              <1> 	NASMX_RESERVE toggle_cursor_row,	uint32_t, 1
  5454                              <1> 	NASMX_RESERVE expand_collapse_cursor_row,	uint32_t, 1
  5455                              <1> 	NASMX_RESERVE select_cursor_parent,	uint32_t, 1
  5456                              <1> 	NASMX_RESERVE start_interactive_search, uint32_t, 1
  5457                              <1> 	NASMX_RESERVE _gtk_reserved0,	uint32_t, 1
  5458                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5459                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5460                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5461                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5462                              <1> NASMX_ENDSTRUC
  5463                              <1> 
  5464                              <1> NASMX_STRUC GtkComboBox
  5465                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkBin_size
  5466                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5467                              <1> NASMX_ENDSTRUC
  5468                              <1> 
  5469                              <1> NASMX_STRUC GtkComboBoxClass
  5470                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  5471                              <1> 	NASMX_RESERVE changed,	uint32_t, 1
  5472                              <1> 	NASMX_RESERVE get_active_text,	uint32_t, 1
  5473                              <1> 	NASMX_RESERVE _gtk_reserved0,	uint32_t, 1
  5474                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5475                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5476                              <1> NASMX_ENDSTRUC
  5477                              <1> 
  5478                              <1> NASMX_STRUC GtkComboBoxEntry
  5479                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkComboBox_size
  5480                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5481                              <1> NASMX_ENDSTRUC
  5482                              <1> 
  5483                              <1> ;;struct _GtkCombo {
  5484                              <1> ;;	GtkHBox hbox;
  5485                              <1> ;;	GtkWidget *entry;
  5486                              <1> ;;	GtkWidget *button;
  5487                              <1> ;;	GtkWidget *popup;
  5488                              <1> ;;	GtkWidget *popwin;
  5489                              <1> ;;	GtkWidget *list;
  5490                              <1> ;;	guint entry_change_id;
  5491                              <1> ;;	guint list_change_id;
  5492                              <1> ;;	guint value_in_list:1;
  5493                              <1> ;;	guint ok_if_empty:1;
  5494                              <1> ;;	guint case_sensitive:1;
  5495                              <1> ;;	guint use_arrows:1;
  5496                              <1> ;;	guint use_arrows_always:1;
  5497                              <1> ;;        guint16 current_button;
  5498                              <1> ;;	guint activate_id;
  5499                              <1> ;;};
  5500                              <1> ;;struct _GtkComboClass {
  5501                              <1> ;;	GtkHBoxClass parent_class;
  5502                              <1> ;;        void (*_gtk_reserved1) (void);
  5503                              <1> ;;        void (*_gtk_reserved2) (void);
  5504                              <1> ;;        void (*_gtk_reserved3) (void);
  5505                              <1> ;;        void (*_gtk_reserved4) (void);
  5506                              <1> ;;};
  5507                              <1> ;;
  5508                              <1> 
  5509                              <1> 
  5510                              <1> NASMX_STRUC GtkComboBoxEntryClass
  5511                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkComboBoxClass_size
  5512                              <1> 	NASMX_RESERVE _gtk_reserved0,	uint32_t, 1
  5513                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5514                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5515                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5516                              <1> NASMX_ENDSTRUC
  5517                              <1> 
  5518                              <1> NASMX_STRUC GtkComboBoxText
  5519                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkComboBox_size
  5520                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5521                              <1> NASMX_ENDSTRUC
  5522                              <1> 
  5523                              <1> NASMX_STRUC GtkComboBoxTextClass
  5524                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkComboBoxClass_size
  5525                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5526                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5527                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5528                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5529                              <1> NASMX_ENDSTRUC
  5530                              <1> 
  5531                              <1> NASMX_STRUC GtkDrawingArea
  5532                              <1> 	NASMX_RESERVE widget,		int8_t, GtkWidget_size
  5533                              <1> 	NASMX_RESERVE draw_data,	uint32_t, 1
  5534                              <1> NASMX_ENDSTRUC
  5535                              <1> 
  5536                              <1> NASMX_STRUC GtkDrawingAreaClass
  5537                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  5538                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5539                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5540                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5541                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5542                              <1> NASMX_ENDSTRUC
  5543                              <1> 
  5544                              <1> NASMX_STRUC GtkEventBox
  5545                              <1> 	NASMX_RESERVE bin,		int8_t, GtkBin_size
  5546                              <1> NASMX_ENDSTRUC
  5547                              <1> 
  5548                              <1> NASMX_STRUC GtkEventBoxClass
  5549                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  5550                              <1> NASMX_ENDSTRUC
  5551                              <1> 
  5552                              <1> NASMX_STRUC GtkExpander
  5553                              <1> 	NASMX_RESERVE bin,		int8_t, GtkBin_size
  5554                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5555                              <1> NASMX_ENDSTRUC
  5556                              <1> 
  5557                              <1> NASMX_STRUC GtkExpanderClass
  5558                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  5559                              <1> 	NASMX_RESERVE activate,		uint32_t, 1
  5560                              <1> NASMX_ENDSTRUC
  5561                              <1> 
  5562                              <1> NASMX_STRUC GtkFixed
  5563                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  5564                              <1> 	NASMX_RESERVE children,		uint32_t, 1
  5565                              <1> NASMX_ENDSTRUC
  5566                              <1> 
  5567                              <1> NASMX_STRUC GtkFixedClass
  5568                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  5569                              <1> NASMX_ENDSTRUC
  5570                              <1> 
  5571                              <1> NASMX_STRUC GtkFixedChild
  5572                              <1> 	NASMX_RESERVE widget,		uint32_t, 1
  5573                              <1> 	NASMX_RESERVE x,		uint32_t, 1
  5574                              <1> 	NASMX_RESERVE y,		uint32_t, 1
  5575                              <1> NASMX_ENDSTRUC
  5576                              <1> 
  5577                              <1> NASMX_STRUC GtkFileFilterInfo
  5578                              <1> 	NASMX_RESERVE contains,		uint32_t, 1
  5579                              <1> 	NASMX_RESERVE filename,		uint32_t, 1
  5580                              <1> 	NASMX_RESERVE uri,		uint32_t, 1
  5581                              <1> 	NASMX_RESERVE display_name,	uint32_t, 1
  5582                              <1> 	NASMX_RESERVE mime_type,	uint32_t, 1
  5583                              <1> NASMX_ENDSTRUC
  5584                              <1> 
  5585                              <1> NASMX_STRUC GtkHBox
  5586                              <1> 	NASMX_RESERVE box,		int8_t, GtkBox_size
  5587                              <1> NASMX_ENDSTRUC
  5588                              <1> 
  5589                              <1> NASMX_STRUC GtkHBoxClass
  5590                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBoxClass_size
  5591                              <1> NASMX_ENDSTRUC
  5592                              <1> 
  5593                              <1> NASMX_STRUC GtkFileChooserButton
  5594                              <1> 	NASMX_RESERVE parent,		int8_t, GtkHBox_size
  5595                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5596                              <1> NASMX_ENDSTRUC
  5597                              <1> 
  5598                              <1> NASMX_STRUC GtkFileChooserButtonClass
  5599                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkHBoxClass_size
  5600                              <1> 	NASMX_RESERVE file_set,		uint32_t, 1
  5601                              <1> 	NASMX_RESERVE __gtk_reserved1,	uint32_t, 1
  5602                              <1> 	NASMX_RESERVE __gtk_reserved2,	uint32_t, 1
  5603                              <1> 	NASMX_RESERVE __gtk_reserved3,	uint32_t, 1
  5604                              <1> 	NASMX_RESERVE __gtk_reserved4,	uint32_t, 1
  5605                              <1> 	NASMX_RESERVE __gtk_reserved5,	uint32_t, 1
  5606                              <1> 	NASMX_RESERVE __gtk_reserved6,	uint32_t, 1
  5607                              <1> 	NASMX_RESERVE __gtk_reserved7,	uint32_t, 1
  5608                              <1> NASMX_ENDSTRUC
  5609                              <1> 
  5610                              <1> NASMX_STRUC GtkFileChooserDialog
  5611                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkDialog_size
  5612                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5613                              <1> NASMX_ENDSTRUC
  5614                              <1> 
  5615                              <1> NASMX_STRUC GtkFileChooserDialogClass
  5616                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkDialogClass_size
  5617                              <1> NASMX_ENDSTRUC
  5618                              <1> 
  5619                              <1> NASMX_STRUC GtkFileChooserWidget
  5620                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkVBox_size
  5621                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5622                              <1> NASMX_ENDSTRUC
  5623                              <1> 
  5624                              <1> NASMX_STRUC GtkFileChooserWidgetClass
  5625                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkVBoxClass_size
  5626                              <1> NASMX_ENDSTRUC
  5627                              <1> 
  5628                              <1> NASMX_STRUC GtkFontSelection
  5629                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkVBox_size
  5630                              <1> 	NASMX_RESERVE font_entry,	uint32_t, 1
  5631                              <1> 	NASMX_RESERVE family_list,	uint32_t, 1
  5632                              <1> 	NASMX_RESERVE font_style_entry,	uint32_t, 1
  5633                              <1> 	NASMX_RESERVE face_list,	uint32_t, 1
  5634                              <1> 	NASMX_RESERVE size_entry,	uint32_t, 1
  5635                              <1> 	NASMX_RESERVE size_list,	uint32_t, 1
  5636                              <1> 	NASMX_RESERVE pixels_button,	uint32_t, 1
  5637                              <1> 	NASMX_RESERVE points_button,	uint32_t, 1
  5638                              <1> 	NASMX_RESERVE filter_button,	uint32_t, 1
  5639                              <1> 	NASMX_RESERVE preview_entry,	uint32_t, 1
  5640                              <1> 	NASMX_RESERVE family,		uint32_t, 1
  5641                              <1> 	NASMX_RESERVE face,		uint32_t, 1
  5642                              <1> 	NASMX_RESERVE size,		uint32_t, 1
  5643                              <1> 	NASMX_RESERVE font,		uint32_t, 1
  5644                              <1> NASMX_ENDSTRUC
  5645                              <1> 
  5646                              <1> NASMX_STRUC GtkFontSelectionClass
  5647                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkVBoxClass_size
  5648                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5649                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5650                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5651                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5652                              <1> NASMX_ENDSTRUC
  5653                              <1> 
  5654                              <1> NASMX_STRUC GtkFontSelectionDialog
  5655                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkDialog_size
  5656                              <1> 	NASMX_RESERVE fontsel,		uint32_t, 1
  5657                              <1> 	NASMX_RESERVE main_vbox,	uint32_t, 1
  5658                              <1> 	NASMX_RESERVE action_area,	uint32_t, 1
  5659                              <1> 	NASMX_RESERVE ok_button,	uint32_t, 1
  5660                              <1> 	NASMX_RESERVE apply_button,	uint32_t, 1
  5661                              <1> 	NASMX_RESERVE cancel_button,	uint32_t, 1
  5662                              <1> 	NASMX_RESERVE dialog_width,	uint32_t, 1
  5663                              <1> 	NASMX_RESERVE auto_resize,	uint32_t, 1
  5664                              <1> NASMX_ENDSTRUC
  5665                              <1> 
  5666                              <1> NASMX_STRUC GtkFontSelectionDialogClass
  5667                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkDialogClass_size
  5668                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5669                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5670                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5671                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5672                              <1> NASMX_ENDSTRUC
  5673                              <1> 
  5674                              <1> NASMX_STRUC GtkHandleBox
  5675                              <1> 	NASMX_RESERVE bin,		int8_t, GtkBin_size
  5676                              <1> 	NASMX_RESERVE bin_window,	uint32_t, 1
  5677                              <1> 	NASMX_RESERVE float_window,	uint32_t, 1
  5678                              <1> 	NASMX_RESERVE shadow_type,	uint32_t, 1
  5679                              <1> 	NASMX_RESERVE handle_position,	uint32_t, 1
  5680                              <1> ;.float_window_mapped:	RESD 1
  5681                              <1> ;.child_detached:	RESD 1
  5682                              <1> ;.in_drag:		RESD 1
  5683                              <1> ;.shrink_on_detach:	RESD 1
  5684                              <1> ;.snap_edge 		RESD 1
  5685                              <1> 	NASMX_RESERVE deskoff_x,	uint32_t, 1
  5686                              <1> 	NASMX_RESERVE deskoff_y,	uint32_t, 1
  5687                              <1> 	NASMX_RESERVE attach_allocation,	int8_t, GdkRectangle_size
  5688                              <1> 	NASMX_RESERVE float_allocation,		int8_t, GdkRectangle_size
  5689                              <1> NASMX_ENDSTRUC
  5690                              <1> 
  5691                              <1> NASMX_STRUC GtkHandleBoxClass
  5692                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  5693                              <1> 	NASMX_RESERVE child_attached,	uint32_t, 1
  5694                              <1> 	NASMX_RESERVE child_detached,	uint32_t, 1
  5695                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5696                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5697                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5698                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5699                              <1> NASMX_ENDSTRUC
  5700                              <1> 
  5701                              <1> NASMX_STRUC GtkHButtonBox
  5702                              <1> 	NASMX_RESERVE button_box,	int8_t, GtkButtonBox_size
  5703                              <1> NASMX_ENDSTRUC
  5704                              <1> 
  5705                              <1> NASMX_STRUC GtkHButtonBoxClass
  5706                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkButtonBoxClass_size
  5707                              <1> NASMX_ENDSTRUC
  5708                              <1> 
  5709                              <1> NASMX_STRUC GtkPaned
  5710                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  5711                              <1> 	NASMX_RESERVE child1,		uint32_t, 1
  5712                              <1> 	NASMX_RESERVE child2,		uint32_t, 1
  5713                              <1> 	NASMX_RESERVE handle,		uint32_t, 1
  5714                              <1> 	NASMX_RESERVE xor_gc,		uint32_t, 1
  5715                              <1> 	NASMX_RESERVE cursor_type,	uint32_t, 1
  5716                              <1> 	NASMX_RESERVE handle_pos,	int8_t, GdkRectangle_size
  5717                              <1> 	NASMX_RESERVE child1_siz, 	uint32_t, 1
  5718                              <1> 	NASMX_RESERVE last_allocation,	uint32_t, 1
  5719                              <1> 	NASMX_RESERVE min_position,	uint32_t, 1
  5720                              <1> 	NASMX_RESERVE max_position,	uint32_t, 1
  5721                              <1> 	NASMX_RESERVE position_set,	uint32_t, 1
  5722                              <1> ;.in_drag:		RESD 1
  5723                              <1> ;.child1_shrink:	RESD 1
  5724                              <1> ;.child1_resize:	RESD 1
  5725                              <1> ;.child2_shrink:	RESD 1
  5726                              <1> ;.child2_resize:	RESD 1
  5727                              <1> ;.orientation:		RESD 1
  5728                              <1> ;.in_recursion:		RESD 1
  5729                              <1> ;.handle_prelit:	RESD 1
  5730                              <1> 	NASMX_RESERVE last_child1_focus,	uint32_t, 1
  5731                              <1> 	NASMX_RESERVE last_child2_focus,	uint32_t, 1
  5732                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5733                              <1> 	NASMX_RESERVE drag_pos,		uint32_t, 1
  5734                              <1> 	NASMX_RESERVE original_position,	uint32_t, 1
  5735                              <1> NASMX_ENDSTRUC
  5736                              <1> 
  5737                              <1> NASMX_STRUC GtkPanedClass
  5738                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  5739                              <1> 	NASMX_RESERVE cycle_child_focus,	uint32_t, 1
  5740                              <1> 	NASMX_RESERVE toggle_handle_focus,	uint32_t, 1
  5741                              <1> 	NASMX_RESERVE move_handle,	uint32_t, 1
  5742                              <1> 	NASMX_RESERVE cycle_handle_focus,	uint32_t, 1
  5743                              <1> 	NASMX_RESERVE accept_position,	uint32_t, 1
  5744                              <1> 	NASMX_RESERVE cancel_position,	uint32_t, 1
  5745                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5746                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5747                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5748                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5749                              <1> NASMX_ENDSTRUC
  5750                              <1> 
  5751                              <1> NASMX_STRUC GtkHPaned
  5752                              <1> 	NASMX_RESERVE paned,		int8_t, GtkPaned_size
  5753                              <1> NASMX_ENDSTRUC
  5754                              <1> 
  5755                              <1> NASMX_STRUC GtkHPanedClass
  5756                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkPanedClass_size
  5757                              <1> NASMX_ENDSTRUC
  5758                              <1> 
  5759                              <1> NASMX_STRUC GtkRuler
  5760                              <1> 	NASMX_RESERVE widget,		int8_t, GtkWidget_size
  5761                              <1> 	NASMX_RESERVE backing_store,	uint32_t, 1
  5762                              <1> 	NASMX_RESERVE non_gr_exp_gc,	uint32_t, 1
  5763                              <1> 	NASMX_RESERVE metric,		uint32_t, 1
  5764                              <1> 	NASMX_RESERVE xsrc,		uint32_t, 1
  5765                              <1> 	NASMX_RESERVE ysrc,		uint32_t, 1
  5766                              <1> 	NASMX_RESERVE slider_size,	uint32_t, 1
  5767                              <1> 	NASMX_RESERVE lower,		uint32_t, 1
  5768                              <1> 	NASMX_RESERVE upper,		uint32_t, 1
  5769                              <1> 	NASMX_RESERVE position,		uint32_t, 1
  5770                              <1> 	NASMX_RESERVE max_size,		uint32_t, 1
  5771                              <1> NASMX_ENDSTRUC
  5772                              <1> 
  5773                              <1> NASMX_STRUC GtkRulerClass
  5774                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  5775                              <1> 	NASMX_RESERVE draw_ticks,	uint32_t, 1
  5776                              <1> 	NASMX_RESERVE draw_pos,		uint32_t, 1
  5777                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5778                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5779                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5780                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5781                              <1> NASMX_ENDSTRUC
  5782                              <1> 
  5783                              <1> NASMX_STRUC GtkRulerMetric
  5784                              <1> 	NASMX_RESERVE metric_name,	uint32_t, 1
  5785                              <1> 	NASMX_RESERVE abbrev,		uint32_t, 1
  5786                              <1> 	NASMX_RESERVE pixels_per_unit,	uint32_t, 1
  5787                              <1> NASMX_ENDSTRUC
  5788                              <1> 
  5789                              <1> NASMX_STRUC GtkHRuler
  5790                              <1> 	NASMX_RESERVE ruler,		int8_t, GtkRuler_size
  5791                              <1> NASMX_ENDSTRUC
  5792                              <1> 
  5793                              <1> NASMX_STRUC GtkHRulerClass
  5794                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkRulerClass_size
  5795                              <1> NASMX_ENDSTRUC
  5796                              <1> 
  5797                              <1> NASMX_STRUC GtkRange
  5798                              <1> 	NASMX_RESERVE widget,	int8_t, GtkWidget_size
  5799                              <1> 	NASMX_RESERVE adjustment,	uint32_t, 1
  5800                              <1> 	NASMX_RESERVE update_policy,	uint32_t, 1
  5801                              <1> 	NASMX_RESERVE inverted,		uint32_t, 1
  5802                              <1> ;.flippable:		RESD 1
  5803                              <1> ;.has_stepper_a:	RESD 1
  5804                              <1> ;.has_stepper_b:	RESD 1
  5805                              <1> ;.has_stepper_c:	RESD 1
  5806                              <1> ;.has_stepper_d:	RESD 1
  5807                              <1> ;.need_recalc:		RESD 1
  5808                              <1> ;.slider_size_fixed:	RESD 1
  5809                              <1> 	NASMX_RESERVE min_slider_size,	uint32_t, 1
  5810                              <1> 	NASMX_RESERVE orientation,	uint32_t, 1
  5811                              <1> 	NASMX_RESERVE range_rect,	int8_t, GdkRectangle_size
  5812                              <1> 	NASMX_RESERVE slider_start,	uint32_t, 1
  5813                              <1> 	NASMX_RESERVE slider_end,	uint32_t, 1
  5814                              <1> 	NASMX_RESERVE round_digits,	uint32_t, 1
  5815                              <1> 	NASMX_RESERVE trough_click_forward,	uint32_t, 1
  5816                              <1> 	NASMX_RESERVE update_pending,	uint32_t, 1
  5817                              <1> 	NASMX_RESERVE layout,		uint32_t, 1
  5818                              <1> 	NASMX_RESERVE timer,		uint32_t, 1
  5819                              <1> 	NASMX_RESERVE slide_initial_slider_position,	uint32_t, 1
  5820                              <1> 	NASMX_RESERVE slide_initial_coordinate,		uint32_t, 1
  5821                              <1> 	NASMX_RESERVE update_timeout_id,	uint32_t, 1
  5822                              <1> 	NASMX_RESERVE event_window,	uint32_t, 1
  5823                              <1> NASMX_ENDSTRUC
  5824                              <1> 
  5825                              <1> NASMX_STRUC GtkRangeClass
  5826                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  5827                              <1> 	NASMX_RESERVE slider_detail,	uint32_t, 1
  5828                              <1> 	NASMX_RESERVE stepper_detail,	uint32_t, 1
  5829                              <1> 	NASMX_RESERVE value_changed,	uint32_t, 1
  5830                              <1> 	NASMX_RESERVE adjust_bounds,	uint32_t, 1
  5831                              <1> 	NASMX_RESERVE move_slider,	uint32_t, 1
  5832                              <1> 	NASMX_RESERVE get_range_border,	uint32_t, 1
  5833                              <1> 	NASMX_RESERVE change_value,	uint32_t, 1
  5834                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5835                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5836                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5837                              <1> NASMX_ENDSTRUC
  5838                              <1> 
  5839                              <1> NASMX_STRUC GtkScale
  5840                              <1> 	NASMX_RESERVE range,		int8_t, GtkRange_size
  5841                              <1> 	NASMX_RESERVE digits,		uint32_t, 1
  5842                              <1> 	NASMX_RESERVE draw_value,	uint32_t, 1
  5843                              <1> ;.value_pos:		RESD 1
  5844                              <1> NASMX_ENDSTRUC
  5845                              <1> 
  5846                              <1> NASMX_STRUC GtkScaleClass
  5847                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkRangeClass_size
  5848                              <1> 	NASMX_RESERVE format_value,	uint32_t, 1
  5849                              <1> 	NASMX_RESERVE draw_value,	uint32_t, 1
  5850                              <1> 	NASMX_RESERVE get_layout_offsets,	uint32_t, 1
  5851                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5852                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5853                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5854                              <1> NASMX_ENDSTRUC
  5855                              <1> 
  5856                              <1> NASMX_STRUC GtkHScale
  5857                              <1> 	NASMX_RESERVE scale,		int8_t, GtkScale_size
  5858                              <1> NASMX_ENDSTRUC
  5859                              <1> 
  5860                              <1> NASMX_STRUC GtkHScaleClass
  5861                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkScaleClass_size
  5862                              <1> NASMX_ENDSTRUC
  5863                              <1> 
  5864                              <1> NASMX_STRUC GtkScrollbar
  5865                              <1> 	NASMX_RESERVE range,		int8_t, GtkRange_size
  5866                              <1> NASMX_ENDSTRUC
  5867                              <1> 
  5868                              <1> NASMX_STRUC GtkScrollbarClass
  5869                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkRangeClass_size
  5870                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5871                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5872                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5873                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5874                              <1> NASMX_ENDSTRUC
  5875                              <1> 
  5876                              <1> NASMX_STRUC GtkHScrollbar
  5877                              <1> 	NASMX_RESERVE scrollbar,	int8_t, GtkScrollbar_size
  5878                              <1> NASMX_ENDSTRUC
  5879                              <1> 
  5880                              <1> NASMX_STRUC GtkHScrollbarClass
  5881                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkScrollbarClass_size
  5882                              <1> NASMX_ENDSTRUC
  5883                              <1> 
  5884                              <1> NASMX_STRUC GtkSeparator
  5885                              <1> 	NASMX_RESERVE widget,		int8_t, GtkWidget_size
  5886                              <1> NASMX_ENDSTRUC
  5887                              <1> 
  5888                              <1> NASMX_STRUC GtkSeparatorClass
  5889                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  5890                              <1> NASMX_ENDSTRUC
  5891                              <1> 
  5892                              <1> NASMX_STRUC GtkHSeparator
  5893                              <1> 	NASMX_RESERVE separator,	int8_t, GtkSeparator_size
  5894                              <1> NASMX_ENDSTRUC
  5895                              <1> 
  5896                              <1> NASMX_STRUC GtkHSeparatorClass
  5897                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GtkSeparatorClass_size
  5898                              <1> NASMX_ENDSTRUC
  5899                              <1> 
  5900                              <1> NASMX_STRUC GtkHSV
  5901                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkWidget_size
  5902                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5903                              <1> NASMX_ENDSTRUC
  5904                              <1> 
  5905                              <1> NASMX_STRUC GtkHSVClass
  5906                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  5907                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  5908                              <1> 	NASMX_RESERVE move,		uint32_t, 1
  5909                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5910                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5911                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5912                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5913                              <1> NASMX_ENDSTRUC
  5914                              <1> 
  5915                              <1> NASMX_STRUC GtkIconFactory
  5916                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  5917                              <1> 	NASMX_RESERVE icons,		uint32_t, 1
  5918                              <1> NASMX_ENDSTRUC
  5919                              <1> 
  5920                              <1> NASMX_STRUC GtkIconFactoryClass
  5921                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  5922                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5923                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5924                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5925                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5926                              <1> NASMX_ENDSTRUC
  5927                              <1> 
  5928                              <1> NASMX_STRUC GtkIconTheme
  5929                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  5930                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5931                              <1> NASMX_ENDSTRUC
  5932                              <1> 
  5933                              <1> NASMX_STRUC GtkIconThemeClass
  5934                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  5935                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  5936                              <1> NASMX_ENDSTRUC
  5937                              <1> 
  5938                              <1> NASMX_STRUC GtkIconView
  5939                              <1> 	NASMX_RESERVE parent,		int8_t, GtkContainer_size
  5940                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5941                              <1> NASMX_ENDSTRUC
  5942                              <1> 
  5943                              <1> NASMX_STRUC GtkIconViewClass
  5944                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  5945                              <1> 	NASMX_RESERVE set_scroll_adjustments,	uint32_t, 1
  5946                              <1> 	NASMX_RESERVE item_activated,	uint32_t, 1
  5947                              <1> 	NASMX_RESERVE selection_changed,	uint32_t, 1
  5948                              <1> 	NASMX_RESERVE select_all,	uint32_t, 1
  5949                              <1> 	NASMX_RESERVE unselect_all,	uint32_t, 1
  5950                              <1> 	NASMX_RESERVE select_cursor_item,	uint32_t, 1
  5951                              <1> 	NASMX_RESERVE toggle_cursor_item,	uint32_t, 1
  5952                              <1> 	NASMX_RESERVE move_cursor,	uint32_t, 1
  5953                              <1> 	NASMX_RESERVE activate_cursor_item,	uint32_t, 1
  5954                              <1> NASMX_ENDSTRUC
  5955                              <1> 
  5956                              <1> NASMX_STRUC GtkImageMenuItem
  5957                              <1> 	NASMX_RESERVE menu_item,	int8_t, GtkMenuItem_size
  5958                              <1> 	NASMX_RESERVE image,		uint32_t, 1
  5959                              <1> NASMX_ENDSTRUC
  5960                              <1> 
  5961                              <1> NASMX_STRUC GtkImageMenuItemClass
  5962                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkMenuItemClass_size
  5963                              <1> NASMX_ENDSTRUC
  5964                              <1> 
  5965                              <1> NASMX_STRUC GtkIMContextSimple
  5966                              <1> 	NASMX_RESERVE object,		int8_t, GtkIMContext_size
  5967                              <1> 	NASMX_RESERVE tables,		uint32_t, 1
  5968                              <1> 	NASMX_RESERVE compose_buffer,	uint32_t, 8
  5969                              <1> 	NASMX_RESERVE tentative_match,	uint32_t, 1
  5970                              <1> 	NASMX_RESERVE tentative_match_len,	uint32_t, 1
  5971                              <1> 	NASMX_RESERVE in_hex_sequence,	uint32_t, 1
  5972                              <1> ;.modifiers_dropped:	RESD 1
  5973                              <1> NASMX_ENDSTRUC
  5974                              <1> 
  5975                              <1> NASMX_STRUC GtkIMContextSimpleClass
  5976                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkIMContextClass_size
  5977                              <1> NASMX_ENDSTRUC
  5978                              <1> 
  5979                              <1> NASMX_STRUC GtkIMMulticontext
  5980                              <1> 	NASMX_RESERVE object,		int8_t, GtkIMContext_size
  5981                              <1> 	NASMX_RESERVE slave,		uint32_t, 1
  5982                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5983                              <1> 	NASMX_RESERVE context_id,	uint32_t, 1
  5984                              <1> NASMX_ENDSTRUC
  5985                              <1> 
  5986                              <1> NASMX_STRUC GtkIMMulticontextClass
  5987                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkIMContextClass_size
  5988                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  5989                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  5990                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  5991                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  5992                              <1> NASMX_ENDSTRUC
  5993                              <1> 
  5994                              <1> NASMX_STRUC GtkInfoBar
  5995                              <1> 	NASMX_RESERVE parent,		int8_t, GtkHBox_size
  5996                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  5997                              <1> NASMX_ENDSTRUC
  5998                              <1> 
  5999                              <1> NASMX_STRUC GtkInfoBarClass
  6000                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkHBoxClass_size
  6001                              <1> 	NASMX_RESERVE response,		uint32_t, 1
  6002                              <1> 	NASMX_RESERVE close,		uint32_t, 1
  6003                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6004                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6005                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6006                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6007                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  6008                              <1> 	NASMX_RESERVE _gtk_reserved6,	uint32_t, 1
  6009                              <1> NASMX_ENDSTRUC
  6010                              <1> 
  6011                              <1> NASMX_STRUC GtkInvisible
  6012                              <1> 	NASMX_RESERVE widget,		int8_t, GtkWidget_size
  6013                              <1> 	NASMX_RESERVE has_user_ref_count,	uint32_t, 1
  6014                              <1> 	NASMX_RESERVE screen,		uint32_t, 1
  6015                              <1> NASMX_ENDSTRUC
  6016                              <1> 
  6017                              <1> NASMX_STRUC GtkInvisibleClass
  6018                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  6019                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6020                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6021                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6022                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6023                              <1> NASMX_ENDSTRUC
  6024                              <1> 
  6025                              <1> NASMX_STRUC GtkLayout
  6026                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  6027                              <1> 	NASMX_RESERVE children,		uint32_t, 1
  6028                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  6029                              <1> 	NASMX_RESERVE height,		uint32_t, 1
  6030                              <1> 	NASMX_RESERVE hadjustment,	uint32_t, 1
  6031                              <1> 	NASMX_RESERVE vadjustment,	uint32_t, 1
  6032                              <1> 	NASMX_RESERVE bin_window,	uint32_t, 1
  6033                              <1> 	NASMX_RESERVE visibility,	uint32_t, 1
  6034                              <1> 	NASMX_RESERVE scroll_x,		uint32_t, 1
  6035                              <1> 	NASMX_RESERVE scroll_y,		uint32_t, 1
  6036                              <1> 	NASMX_RESERVE freeze_count,	uint32_t, 1
  6037                              <1> NASMX_ENDSTRUC
  6038                              <1> 
  6039                              <1> NASMX_STRUC GtkLayoutClass
  6040                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  6041                              <1> 	NASMX_RESERVE set_scroll_adjustments,	uint32_t, 1
  6042                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6043                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6044                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6045                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6046                              <1> NASMX_ENDSTRUC
  6047                              <1> 
  6048                              <1> NASMX_STRUC GtkLinkButton
  6049                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkButton_size
  6050                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6051                              <1> NASMX_ENDSTRUC
  6052                              <1> 
  6053                              <1> NASMX_STRUC GtkLinkButtonClass
  6054                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkButtonClass_size
  6055                              <1> 	NASMX_RESERVE _gtk_padding1,	uint32_t, 1
  6056                              <1> 	NASMX_RESERVE _gtk_padding2,	uint32_t, 1
  6057                              <1> 	NASMX_RESERVE _gtk_padding3,	uint32_t, 1
  6058                              <1> 	NASMX_RESERVE _gtk_padding4,	uint32_t, 1
  6059                              <1> NASMX_ENDSTRUC
  6060                              <1> 
  6061                              <1> NASMX_STRUC GtkMenuBar
  6062                              <1> 	NASMX_RESERVE menu_shell,	int8_t, GtkMenuShell_size
  6063                              <1> NASMX_ENDSTRUC
  6064                              <1> 
  6065                              <1> NASMX_STRUC GtkMenuBarClass
  6066                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkMenuShellClass_size
  6067                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6068                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6069                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6070                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6071                              <1> NASMX_ENDSTRUC
  6072                              <1> 
  6073                              <1> NASMX_STRUC GtkTooltipsData
  6074                              <1> 	NASMX_RESERVE tooltips,		uint32_t, 1
  6075                              <1> 	NASMX_RESERVE widget,		uint32_t, 1
  6076                              <1> 	NASMX_RESERVE tip_text,		uint32_t, 1
  6077                              <1> 	NASMX_RESERVE tip_private,	uint32_t, 1
  6078                              <1> NASMX_ENDSTRUC
  6079                              <1> 
  6080                              <1> NASMX_STRUC GtkTooltips
  6081                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkObject_size
  6082                              <1> 	NASMX_RESERVE tip_window,	uint32_t, 1
  6083                              <1> 	NASMX_RESERVE tip_label,	uint32_t, 1
  6084                              <1> 	NASMX_RESERVE active_tips_data,	uint32_t, 1
  6085                              <1> 	NASMX_RESERVE tips_data_list,	uint32_t, 1
  6086                              <1> 	NASMX_RESERVE delay,		uint32_t, 1
  6087                              <1> ;.enabled:		RESD 1
  6088                              <1> ;.have_grab:		RESD 1
  6089                              <1> 	NASMX_RESERVE use_sticky_delay,	uint32_t, 1
  6090                              <1> 	NASMX_RESERVE timer_tag,	uint32_t, 1
  6091                              <1> 	NASMX_RESERVE last_popdown,	int8_t, GTimeVal_size
  6092                              <1> NASMX_ENDSTRUC
  6093                              <1> 
  6094                              <1> NASMX_STRUC GtkTooltipsClass
  6095                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkObjectClass_size
  6096                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6097                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6098                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6099                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6100                              <1> NASMX_ENDSTRUC
  6101                              <1> 
  6102                              <1> NASMX_STRUC GtkSizeGroup
  6103                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  6104                              <1> 	NASMX_RESERVE widgets,		uint32_t, 1
  6105                              <1> 	NASMX_RESERVE mode,		int8_t, 1
  6106                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  6107                              <1> 	NASMX_RESERVE have_width,	uint32_t, 1
  6108                              <1> ;.have_height:		RESD 1
  6109                              <1> ;.ignore_hidden:	RESD 1
  6110                              <1> 	NASMX_RESERVE requisition,	int8_t, GtkRequisition_size
  6111                              <1> NASMX_ENDSTRUC
  6112                              <1> 
  6113                              <1> NASMX_STRUC GtkSizeGroupClass
  6114                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  6115                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6116                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6117                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6118                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6119                              <1> NASMX_ENDSTRUC
  6120                              <1> 
  6121                              <1> NASMX_STRUC GtkToolItem
  6122                              <1> 	NASMX_RESERVE parent,		int8_t, GtkBin_size
  6123                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6124                              <1> NASMX_ENDSTRUC
  6125                              <1> 
  6126                              <1> NASMX_STRUC GtkToolItemClass
  6127                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  6128                              <1> 	NASMX_RESERVE create_menu_proxy,	uint32_t, 1
  6129                              <1> 	NASMX_RESERVE toolbar_reconfigured,	uint32_t, 1
  6130                              <1> 	NASMX_RESERVE set_tooltip,	uint32_t, 1
  6131                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6132                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6133                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6134                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6135                              <1> NASMX_ENDSTRUC
  6136                              <1> 
  6137                              <1> NASMX_STRUC GtkToolButton
  6138                              <1> 	NASMX_RESERVE parent,		int8_t, GtkToolItem_size
  6139                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6140                              <1> NASMX_ENDSTRUC
  6141                              <1> 
  6142                              <1> NASMX_STRUC GtkToolButtonClass
  6143                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkToolItemClass_size
  6144                              <1> 	NASMX_RESERVE button_type,	uint32_t, 1
  6145                              <1> 	NASMX_RESERVE clicked,		uint32_t, 1
  6146                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6147                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6148                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6149                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6150                              <1> NASMX_ENDSTRUC
  6151                              <1> 
  6152                              <1> NASMX_STRUC GtkMenuToolButton
  6153                              <1> 	NASMX_RESERVE parent,		int8_t, GtkToolButton_size
  6154                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6155                              <1> NASMX_ENDSTRUC
  6156                              <1> 
  6157                              <1> NASMX_STRUC GtkMenuToolButtonClass
  6158                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkToolButtonClass_size
  6159                              <1> 	NASMX_RESERVE show_menu,	uint32_t, 1
  6160                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6161                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6162                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6163                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6164                              <1> NASMX_ENDSTRUC
  6165                              <1> 
  6166                              <1> NASMX_STRUC GtkMessageDialog
  6167                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkDialog_size
  6168                              <1> 	NASMX_RESERVE image,		uint32_t, 1
  6169                              <1> 	NASMX_RESERVE label,		uint32_t, 1
  6170                              <1> NASMX_ENDSTRUC
  6171                              <1> 
  6172                              <1> NASMX_STRUC GtkMessageDialogClass
  6173                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkDialogClass_size
  6174                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6175                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6176                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6177                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6178                              <1> NASMX_ENDSTRUC
  6179                              <1> 
  6180                              <1> NASMX_STRUC GtkMountOperation
  6181                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GMountOperation_size
  6182                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6183                              <1> NASMX_ENDSTRUC
  6184                              <1> 
  6185                              <1> NASMX_STRUC GtkMountOperationClass
  6186                              <1> 	NASMX_RESERVE parent_class,	int8_t, GMountOperationClass_size
  6187                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6188                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6189                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6190                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6191                              <1> NASMX_ENDSTRUC
  6192                              <1> 
  6193                              <1> NASMX_STRUC GtkNotebook
  6194                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  6195                              <1> 	NASMX_RESERVE cur_page,		uint32_t, 1
  6196                              <1> 	NASMX_RESERVE children,		uint32_t, 1
  6197                              <1> 	NASMX_RESERVE first_tab,	uint32_t, 1
  6198                              <1> 	NASMX_RESERVE focus_tab,	uint32_t, 1
  6199                              <1> 	NASMX_RESERVE menu,		uint32_t, 1
  6200                              <1> 	NASMX_RESERVE event_window,	uint32_t, 1
  6201                              <1> 	NASMX_RESERVE timer,		uint32_t, 1
  6202                              <1> 	NASMX_RESERVE tab_hborder,	uint16_t, 1
  6203                              <1> 	NASMX_RESERVE tab_vborder,	uint16_t, 1
  6204                              <1> 	NASMX_RESERVE show_tabs,	uint32_t, 1
  6205                              <1> ;.homogeneous:		RESD 1
  6206                              <1> ;.show_border:		RESD 1
  6207                              <1> ;.tab_pos:		RESD 1
  6208                              <1> ;.scrollable:		RESD 1
  6209                              <1> ;.in_child:		RESD 1
  6210                              <1> ;.click_child:		RESD 1
  6211                              <1> ;.button:		RESD 1
  6212                              <1> ;.need_timer:		RESD 1
  6213                              <1> ;.child_has_focus:	RESD 1
  6214                              <1> ;.have_visible_child:	RESD 1
  6215                              <1> ;.focus_out:		RESD 1
  6216                              <1> ;.has_before_previous:	RESD 1
  6217                              <1> ;.has_before_next:	RESD 1
  6218                              <1> ;.has_after_previous:	RESD 1
  6219                              <1> ;.has_after_next:	RESD 1
  6220                              <1> NASMX_ENDSTRUC
  6221                              <1> 
  6222                              <1> NASMX_STRUC GtkNotebookClass
  6223                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  6224                              <1> 	NASMX_RESERVE switch_page,	uint32_t, 1
  6225                              <1> 	NASMX_RESERVE select_page,	uint32_t, 1
  6226                              <1> 	NASMX_RESERVE focus_tab,	uint32_t, 1
  6227                              <1> 	NASMX_RESERVE change_current_page,	uint32_t, 1
  6228                              <1> 	NASMX_RESERVE move_focus_out,	uint32_t, 1
  6229                              <1> 	NASMX_RESERVE reorder_tab,	uint32_t, 1
  6230                              <1> 	NASMX_RESERVE insert_page,	uint32_t, 1
  6231                              <1> 	NASMX_RESERVE create_window,	uint32_t, 1
  6232                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6233                              <1> NASMX_ENDSTRUC
  6234                              <1> 
  6235                              <1> NASMX_STRUC GtkOffscreenWindow
  6236                              <1> 	NASMX_RESERVE parent_object,	int8_t, GtkWindow_size
  6237                              <1> NASMX_ENDSTRUC
  6238                              <1> 
  6239                              <1> NASMX_STRUC GtkOffscreenWindowClass
  6240                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWindowClass_size
  6241                              <1> NASMX_ENDSTRUC
  6242                              <1> 
  6243                              <1> NASMX_STRUC GtkOrientableIface
  6244                              <1> 	NASMX_RESERVE base_iface,	int8_t, GTypeInterface_size
  6245                              <1> NASMX_ENDSTRUC
  6246                              <1> 
  6247                              <1> NASMX_STRUC GtkSocket
  6248                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  6249                              <1> 	NASMX_RESERVE request_width,	uint16_t, 1
  6250                              <1> 	NASMX_RESERVE request_height,	uint16_t, 1
  6251                              <1> 	NASMX_RESERVE current_width,	uint16_t, 1
  6252                              <1> 	NASMX_RESERVE current_height,	uint16_t, 1
  6253                              <1> 	NASMX_RESERVE plug_window,	uint32_t, 1
  6254                              <1> 	NASMX_RESERVE plug_widget,	uint32_t, 1
  6255                              <1> 	NASMX_RESERVE xembed_version,	uint16_t, 1
  6256                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 2
  6257                              <1> 	NASMX_RESERVE same_app,		uint32_t, 1
  6258                              <1> ;.focus_in:	RESD 1
  6259                              <1> ;.have_size:	RESD 1
  6260                              <1> ;.need_map:	RESD 1
  6261                              <1> ;.is_mapped:	RESD 1
  6262                              <1> ;.active:	RESD 1
  6263                              <1> 	NASMX_RESERVE accel_group,	uint32_t, 1
  6264                              <1> 	NASMX_RESERVE toplevel,		uint32_t, 1
  6265                              <1> NASMX_ENDSTRUC
  6266                              <1> 
  6267                              <1> NASMX_STRUC GtkSocketClass
  6268                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  6269                              <1> 	NASMX_RESERVE plug_added,	uint32_t, 1
  6270                              <1> 	NASMX_RESERVE plug_removed,	uint32_t, 1
  6271                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6272                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6273                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6274                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6275                              <1> NASMX_ENDSTRUC
  6276                              <1> 
  6277                              <1> NASMX_STRUC GtkPlug
  6278                              <1> 	NASMX_RESERVE window,		int8_t, GtkWindow_size
  6279                              <1> 	NASMX_RESERVE socket_window,	uint32_t, 1
  6280                              <1> 	NASMX_RESERVE modality_window,	uint32_t, 1
  6281                              <1> 	NASMX_RESERVE modality_group,	uint32_t, 1
  6282                              <1> 	NASMX_RESERVE grabbed_keys,	uint32_t, 1
  6283                              <1> 	NASMX_RESERVE same_app,		uint32_t, 1
  6284                              <1> NASMX_ENDSTRUC
  6285                              <1> 
  6286                              <1> NASMX_STRUC GtkPlugClass
  6287                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWindowClass_size
  6288                              <1> 	NASMX_RESERVE embedded,		uint32_t, 1
  6289                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6290                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6291                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6292                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6293                              <1> NASMX_ENDSTRUC
  6294                              <1> 
  6295                              <1> NASMX_STRUC GtkPageRange
  6296                              <1> 	NASMX_RESERVE start,		uint32_t, 1
  6297                              <1> 	NASMX_RESERVE end,		uint32_t, 1
  6298                              <1> NASMX_ENDSTRUC
  6299                              <1> 
  6300                              <1> NASMX_STRUC GtkPrintOperationPreviewIface
  6301                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  6302                              <1> 	NASMX_RESERVE ready,		uint32_t, 1
  6303                              <1> 	NASMX_RESERVE got_page_size,	uint32_t, 1
  6304                              <1> 	NASMX_RESERVE render_page,	uint32_t, 1
  6305                              <1> 	NASMX_RESERVE is_selected,	uint32_t, 1
  6306                              <1> 	NASMX_RESERVE end_preview,	uint32_t, 1
  6307                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6308                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6309                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6310                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6311                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  6312                              <1> 	NASMX_RESERVE _gtk_reserved6,	uint32_t, 1
  6313                              <1> 	NASMX_RESERVE _gtk_reserved7,	uint32_t, 1
  6314                              <1> NASMX_ENDSTRUC
  6315                              <1> 
  6316                              <1> NASMX_STRUC GtkPrintOperation
  6317                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  6318                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6319                              <1> NASMX_ENDSTRUC
  6320                              <1> 
  6321                              <1> NASMX_STRUC GtkPrintOperationClass
  6322                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  6323                              <1> 	NASMX_RESERVE done,		uint32_t, 1
  6324                              <1> 	NASMX_RESERVE begin_print,	uint32_t, 1
  6325                              <1> 	NASMX_RESERVE paginate,		uint32_t, 1
  6326                              <1> 	NASMX_RESERVE request_page_setup,	uint32_t, 1
  6327                              <1> 	NASMX_RESERVE draw_page,	uint32_t, 1
  6328                              <1> 	NASMX_RESERVE end_print,	uint32_t, 1
  6329                              <1> 	NASMX_RESERVE status_changed,	uint32_t, 1
  6330                              <1> 	NASMX_RESERVE create_custom_widget,	uint32_t, 1
  6331                              <1> 	NASMX_RESERVE custom_widget_apply,	uint32_t, 1
  6332                              <1> 	NASMX_RESERVE preview,		uint32_t, 1
  6333                              <1> 	NASMX_RESERVE update_custom_widget,	uint32_t, 1
  6334                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6335                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6336                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6337                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6338                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  6339                              <1> 	NASMX_RESERVE _gtk_reserved6,	uint32_t, 1
  6340                              <1> NASMX_ENDSTRUC
  6341                              <1> 
  6342                              <1> NASMX_STRUC GtkProgress
  6343                              <1> 	NASMX_RESERVE widget,		int8_t, GtkWidget_size
  6344                              <1> 	NASMX_RESERVE adjustment,	uint32_t, 1
  6345                              <1> 	NASMX_RESERVE offscreen_pixmap,	uint32_t, 1
  6346                              <1> 	NASMX_RESERVE format,		uint32_t, 1
  6347                              <1> 	NASMX_RESERVE x_align,		uint32_t, 1
  6348                              <1> 	NASMX_RESERVE y_align,		uint32_t, 1
  6349                              <1> 	NASMX_RESERVE show_text,	uint32_t, 1
  6350                              <1> ;.activity_mode:	RESD 1
  6351                              <1> ;.use_text_format:	RESD 1
  6352                              <1> NASMX_ENDSTRUC
  6353                              <1> 
  6354                              <1> NASMX_STRUC GtkProgressClass
  6355                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  6356                              <1> 	NASMX_RESERVE paint,		uint32_t, 1
  6357                              <1> 	NASMX_RESERVE update,		uint32_t, 1
  6358                              <1> 	NASMX_RESERVE act_mode_enter,	uint32_t, 1
  6359                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6360                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6361                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6362                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6363                              <1> NASMX_ENDSTRUC
  6364                              <1> 
  6365                              <1> NASMX_STRUC GtkProgressBar
  6366                              <1> 	NASMX_RESERVE progress,		int8_t, GtkProgress_size
  6367                              <1> 	NASMX_RESERVE bar_style,	uint32_t, 1
  6368                              <1> 	NASMX_RESERVE orientation,	uint32_t, 1
  6369                              <1> 	NASMX_RESERVE blocks,		uint32_t, 1
  6370                              <1> 	NASMX_RESERVE in_block,		uint32_t, 1
  6371                              <1> 	NASMX_RESERVE activity_pos,	uint32_t, 1
  6372                              <1> 	NASMX_RESERVE activity_step,	uint32_t, 1
  6373                              <1> 	NASMX_RESERVE activity_blocks,	uint32_t, 1
  6374                              <1> 	NASMX_RESERVE pulse_fraction,	uint32_t, 1
  6375                              <1> 	NASMX_RESERVE activity_dir,	uint32_t, 1
  6376                              <1> ;.ellipsize:	RESD 1
  6377                              <1> ;.dirty:	RESD 1
  6378                              <1> NASMX_ENDSTRUC
  6379                              <1> 
  6380                              <1> NASMX_STRUC GtkProgressBarClass
  6381                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkProgressClass_size
  6382                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6383                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6384                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6385                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6386                              <1> NASMX_ENDSTRUC
  6387                              <1> 
  6388                              <1> NASMX_STRUC GtkToggleAction
  6389                              <1> 	NASMX_RESERVE parent,		int8_t, GtkAction_size
  6390                              <1> 	NASMX_RESERVE private_data,	uint32_t, 1
  6391                              <1> NASMX_ENDSTRUC
  6392                              <1> 
  6393                              <1> NASMX_STRUC GtkToggleActionClass
  6394                              <1> 	NASMX_RESERVE parent_class, 	int8_t, GtkActionClass_size
  6395                              <1> 	NASMX_RESERVE toggled,		uint32_t, 1
  6396                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6397                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6398                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6399                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6400                              <1> NASMX_ENDSTRUC
  6401                              <1> 
  6402                              <1> NASMX_STRUC GtkRadioAction
  6403                              <1> 	NASMX_RESERVE parent,		int8_t, GtkToggleAction_size
  6404                              <1> 	NASMX_RESERVE private_data,	uint32_t, 1
  6405                              <1> NASMX_ENDSTRUC
  6406                              <1> 
  6407                              <1> NASMX_STRUC GtkRadioActionClass
  6408                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkToggleActionClass_size
  6409                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  6410                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6411                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6412                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6413                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6414                              <1> NASMX_ENDSTRUC
  6415                              <1> 
  6416                              <1> NASMX_STRUC GtkRadioButton
  6417                              <1> 	NASMX_RESERVE check_button,	int8_t, GtkCheckButton_size
  6418                              <1> 	NASMX_RESERVE group,		uint32_t, 1
  6419                              <1> NASMX_ENDSTRUC
  6420                              <1> 
  6421                              <1> NASMX_STRUC GtkRadioButtonClass
  6422                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkCheckButtonClass_size
  6423                              <1> 	NASMX_RESERVE group_changed,	uint32_t, 1
  6424                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6425                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6426                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6427                              <1> NASMX_ENDSTRUC
  6428                              <1> 
  6429                              <1> NASMX_STRUC GtkRadioMenuItem
  6430                              <1> 	NASMX_RESERVE check_menu_item,	int8_t, GtkCheckMenuItem_size
  6431                              <1> 	NASMX_RESERVE group,		uint32_t, 1
  6432                              <1> NASMX_ENDSTRUC
  6433                              <1> 
  6434                              <1> NASMX_STRUC GtkRadioMenuItemClass
  6435                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkCheckMenuItemClass_size
  6436                              <1> 	NASMX_RESERVE group_changed,	uint32_t, 1
  6437                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6438                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6439                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6440                              <1> NASMX_ENDSTRUC
  6441                              <1> 
  6442                              <1> NASMX_STRUC GtkToggleToolButton
  6443                              <1> 	NASMX_RESERVE parent,		int8_t, GtkToolButton_size
  6444                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6445                              <1> NASMX_ENDSTRUC
  6446                              <1> 
  6447                              <1> NASMX_STRUC GtkToggleToolButtonClass
  6448                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkToolButtonClass_size
  6449                              <1> 	NASMX_RESERVE toggled,		uint32_t, 1
  6450                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6451                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6452                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6453                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6454                              <1> NASMX_ENDSTRUC
  6455                              <1> 
  6456                              <1> NASMX_STRUC GtkRadioToolButton
  6457                              <1> 	NASMX_RESERVE parent,		int8_t, GtkToggleToolButton_size
  6458                              <1> NASMX_ENDSTRUC
  6459                              <1> 
  6460                              <1> NASMX_STRUC GtkRadioToolButtonClass
  6461                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkToggleToolButtonClass_size
  6462                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6463                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6464                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6465                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6466                              <1> NASMX_ENDSTRUC
  6467                              <1> 
  6468                              <1> NASMX_STRUC GtkRecentData
  6469                              <1> 	NASMX_RESERVE display_name,	uint32_t, 1
  6470                              <1> 	NASMX_RESERVE description,	uint32_t, 1
  6471                              <1> 	NASMX_RESERVE mime_type,	uint32_t, 1
  6472                              <1> 	NASMX_RESERVE app_name,		uint32_t, 1
  6473                              <1> 	NASMX_RESERVE app_exec,		uint32_t, 1
  6474                              <1> 	NASMX_RESERVE groups,		uint32_t, 1
  6475                              <1> 	NASMX_RESERVE is_private,	uint32_t, 1
  6476                              <1> NASMX_ENDSTRUC
  6477                              <1> 
  6478                              <1> NASMX_STRUC GtkRecentManager
  6479                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  6480                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6481                              <1> NASMX_ENDSTRUC
  6482                              <1> 
  6483                              <1> NASMX_STRUC GtkRecentManagerClass
  6484                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  6485                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  6486                              <1> 	NASMX_RESERVE _gtk_recent1,	uint32_t, 1
  6487                              <1> 	NASMX_RESERVE _gtk_recent2,	uint32_t, 1
  6488                              <1> 	NASMX_RESERVE _gtk_recent3,	uint32_t, 1
  6489                              <1> 	NASMX_RESERVE _gtk_recent4,	uint32_t, 1
  6490                              <1> NASMX_ENDSTRUC
  6491                              <1> 
  6492                              <1> NASMX_STRUC GtkRecentAction
  6493                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkAction_size
  6494                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6495                              <1> NASMX_ENDSTRUC
  6496                              <1> 
  6497                              <1> NASMX_STRUC GtkRecentActionClass
  6498                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkActionClass_size
  6499                              <1> NASMX_ENDSTRUC
  6500                              <1> 
  6501                              <1> NASMX_STRUC GtkRecentFilterInfo
  6502                              <1> 	NASMX_RESERVE contains,		uint32_t, 1
  6503                              <1> 	NASMX_RESERVE uri,		uint32_t, 1
  6504                              <1> 	NASMX_RESERVE display_name,	uint32_t, 1
  6505                              <1> 	NASMX_RESERVE mime_type,	uint32_t, 1
  6506                              <1> 	NASMX_RESERVE applications,	uint32_t, 1
  6507                              <1> 	NASMX_RESERVE groups,		uint32_t, 1
  6508                              <1> 	NASMX_RESERVE age,		uint32_t, 1
  6509                              <1> NASMX_ENDSTRUC
  6510                              <1> 
  6511                              <1> NASMX_STRUC GtkRecentChooserIface
  6512                              <1> 	NASMX_RESERVE base_iface,	int8_t, GTypeInterface_size
  6513                              <1> 	NASMX_RESERVE set_current_uri,	uint32_t, 1
  6514                              <1> 	NASMX_RESERVE get_current_uri,	uint32_t, 1
  6515                              <1> 	NASMX_RESERVE select_uri,	uint32_t, 1
  6516                              <1> 	NASMX_RESERVE unselect_uri,	uint32_t, 1
  6517                              <1> 	NASMX_RESERVE select_all,	uint32_t, 1
  6518                              <1> 	NASMX_RESERVE unselect_all,	uint32_t, 1
  6519                              <1> 	NASMX_RESERVE get_items,	uint32_t, 1
  6520                              <1> 	NASMX_RESERVE get_recent_manager,	uint32_t, 1
  6521                              <1> 	NASMX_RESERVE add_filter,	uint32_t, 1
  6522                              <1> 	NASMX_RESERVE remove_filter,	uint32_t, 1
  6523                              <1> 	NASMX_RESERVE list_filters,	uint32_t, 1
  6524                              <1> 	NASMX_RESERVE set_sort_func,	uint32_t, 1
  6525                              <1> 	NASMX_RESERVE item_activated,	uint32_t, 1
  6526                              <1> 	NASMX_RESERVE selection_changed,	uint32_t, 1
  6527                              <1> NASMX_ENDSTRUC
  6528                              <1> 
  6529                              <1> NASMX_STRUC GtkRecentChooserDialog
  6530                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkDialog_size
  6531                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6532                              <1> NASMX_ENDSTRUC
  6533                              <1> 
  6534                              <1> NASMX_STRUC GtkRecentChooserDialogClass
  6535                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkDialogClass_size
  6536                              <1> NASMX_ENDSTRUC
  6537                              <1> 
  6538                              <1> NASMX_STRUC GtkRecentChooserMenu
  6539                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkMenu_size
  6540                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6541                              <1> NASMX_ENDSTRUC
  6542                              <1> 
  6543                              <1> NASMX_STRUC GtkRecentChooserMenuClass
  6544                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkMenuClass_size
  6545                              <1> 	NASMX_RESERVE gtk_recent1,	uint32_t, 1
  6546                              <1> 	NASMX_RESERVE gtk_recent2,	uint32_t, 1
  6547                              <1> 	NASMX_RESERVE gtk_recent3,	uint32_t, 1
  6548                              <1> 	NASMX_RESERVE gtk_recent4,	uint32_t, 1
  6549                              <1> NASMX_ENDSTRUC
  6550                              <1> 
  6551                              <1> NASMX_STRUC GtkRecentChooserWidget
  6552                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkVBox_size
  6553                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6554                              <1> NASMX_ENDSTRUC
  6555                              <1> 
  6556                              <1> NASMX_STRUC GtkRecentChooserWidgetClass
  6557                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkVBoxClass_size
  6558                              <1> NASMX_ENDSTRUC
  6559                              <1> 
  6560                              <1> NASMX_STRUC GtkScaleButton
  6561                              <1> 	NASMX_RESERVE parent,		int8_t, GtkButton_size
  6562                              <1> 	NASMX_RESERVE plus_button,	uint32_t, 1
  6563                              <1> 	NASMX_RESERVE minus_button,	uint32_t, 1
  6564                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6565                              <1> NASMX_ENDSTRUC
  6566                              <1> 
  6567                              <1> NASMX_STRUC GtkScaleButtonClass
  6568                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkButtonClass_size
  6569                              <1> 	NASMX_RESERVE value_changed,	uint32_t, 1
  6570                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6571                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6572                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6573                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6574                              <1> NASMX_ENDSTRUC
  6575                              <1> 
  6576                              <1> NASMX_STRUC GtkVScrollbar
  6577                              <1> 	NASMX_RESERVE scrollbar,	int8_t, GtkScrollbar_size
  6578                              <1> NASMX_ENDSTRUC
  6579                              <1> 
  6580                              <1> NASMX_STRUC GtkVScrollbarClass
  6581                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkScrollbarClass_size
  6582                              <1> NASMX_ENDSTRUC
  6583                              <1> 
  6584                              <1> NASMX_STRUC GtkViewport
  6585                              <1> 	NASMX_RESERVE bin,		int8_t, GtkBin_size
  6586                              <1> 	NASMX_RESERVE shadow_type,	uint32_t, 1
  6587                              <1> 	NASMX_RESERVE view_window,	uint32_t, 1
  6588                              <1> 	NASMX_RESERVE bin_window,	uint32_t, 1
  6589                              <1> 	NASMX_RESERVE hadjustment,	uint32_t, 1
  6590                              <1> 	NASMX_RESERVE vadjustment,	uint32_t, 1
  6591                              <1> NASMX_ENDSTRUC
  6592                              <1> 
  6593                              <1> NASMX_STRUC GtkViewportClass
  6594                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  6595                              <1> 	NASMX_RESERVE set_scroll_adjustments,	uint32_t, 1
  6596                              <1> NASMX_ENDSTRUC
  6597                              <1> 
  6598                              <1> NASMX_STRUC GtkScrolledWindow
  6599                              <1> 	NASMX_RESERVE container,	int8_t, GtkBin_size
  6600                              <1> 	NASMX_RESERVE hscrollbar,	uint32_t, 1
  6601                              <1> 	NASMX_RESERVE vscrollbar,	uint32_t, 1
  6602                              <1> 	NASMX_RESERVE hscrollbar_policy,	uint32_t, 1
  6603                              <1> ;.vscrollbar_policy:		RESD 1
  6604                              <1> ;.hscrollbar_visible:		RESD 1
  6605                              <1> ;.vscrollbar_visible:		RESD 1
  6606                              <1> ;.window_placement:		RESD 1
  6607                              <1> ;.focus_out:		RESD 1
  6608                              <1> 	NASMX_RESERVE shadow_type,	uint16_t, 1
  6609                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 2
  6610                              <1> NASMX_ENDSTRUC
  6611                              <1> 
  6612                              <1> NASMX_STRUC GtkScrolledWindowClass
  6613                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkBinClass_size
  6614                              <1> 	NASMX_RESERVE scrollbar_spacing,	uint32_t, 1
  6615                              <1> 	NASMX_RESERVE scroll_child,	uint32_t, 1
  6616                              <1> 	NASMX_RESERVE move_focus_out,	uint32_t, 1
  6617                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6618                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6619                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6620                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6621                              <1> NASMX_ENDSTRUC
  6622                              <1> 
  6623                              <1> NASMX_STRUC GtkSeparatorMenuItem
  6624                              <1> 	NASMX_RESERVE menu_item,	int8_t, GtkMenuItem_size
  6625                              <1> NASMX_ENDSTRUC
  6626                              <1> 
  6627                              <1> NASMX_STRUC GtkSeparatorMenuItemClass
  6628                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkMenuItemClass_size
  6629                              <1> NASMX_ENDSTRUC
  6630                              <1> 
  6631                              <1> NASMX_STRUC GtkSeparatorToolItem
  6632                              <1> 	NASMX_RESERVE parent,		int8_t, GtkToolItem_size
  6633                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6634                              <1> NASMX_ENDSTRUC
  6635                              <1> 
  6636                              <1> NASMX_STRUC GtkSeparatorToolItemClass
  6637                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkToolItemClass_size
  6638                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6639                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6640                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6641                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6642                              <1> NASMX_ENDSTRUC
  6643                              <1> 
  6644                              <1> NASMX_STRUC GtkSpinButton
  6645                              <1> 	NASMX_RESERVE entry,		int8_t, GtkEntry_size
  6646                              <1> 	NASMX_RESERVE adjustment,	uint32_t, 1
  6647                              <1> 	NASMX_RESERVE panel,		uint32_t, 1
  6648                              <1> 	NASMX_RESERVE timer,		uint32_t, 1
  6649                              <1> 	NASMX_RESERVE climb_rate,	uint32_t, 1
  6650                              <1> 	NASMX_RESERVE timer_step,	uint32_t, 1
  6651                              <1> 	NASMX_RESERVE update_policy,	uint32_t, 1
  6652                              <1> 	NASMX_RESERVE in_child,		uint32_t, 1
  6653                              <1> ;.click_child:		RESD 1
  6654                              <1> ;.button:		RESD 1
  6655                              <1> ;.need_timer:		RESD 1
  6656                              <1> ;.timer_calls:		RESD 1
  6657                              <1> ;.digits:		RESD 1
  6658                              <1> ;.numeric:		RESD 1
  6659                              <1> ;.wrap:		RESD 1
  6660                              <1> ;.snap_to_ticks:	RESD 1
  6661                              <1> NASMX_ENDSTRUC
  6662                              <1> 
  6663                              <1> NASMX_STRUC GtkSpinButtonClass
  6664                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkEntryClass_size
  6665                              <1> 	NASMX_RESERVE input,		uint32_t, 1
  6666                              <1> 	NASMX_RESERVE output,		uint32_t, 1
  6667                              <1> 	NASMX_RESERVE value_changed,	uint32_t, 1
  6668                              <1> 	NASMX_RESERVE change_value,	uint32_t, 1
  6669                              <1> 	NASMX_RESERVE wrapped,		uint32_t, 1
  6670                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6671                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6672                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6673                              <1> NASMX_ENDSTRUC
  6674                              <1> 
  6675                              <1> NASMX_STRUC GtkSpinner
  6676                              <1> 	NASMX_RESERVE parent,		int8_t, GtkDrawingArea_size
  6677                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6678                              <1> NASMX_ENDSTRUC
  6679                              <1> 
  6680                              <1> NASMX_STRUC GtkSpinnerClass
  6681                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkDrawingAreaClass_size
  6682                              <1> NASMX_ENDSTRUC
  6683                              <1> 
  6684                              <1> NASMX_STRUC GtkStatusbar
  6685                              <1> 	NASMX_RESERVE parent_widget,	int8_t, GtkHBox_size
  6686                              <1> 	NASMX_RESERVE frame,		uint32_t, 1
  6687                              <1> 	NASMX_RESERVE label,		uint32_t, 1
  6688                              <1> 	NASMX_RESERVE messages,		uint32_t, 1
  6689                              <1> 	NASMX_RESERVE keys,		uint32_t, 1
  6690                              <1> 	NASMX_RESERVE seq_context_id,	uint32_t, 1
  6691                              <1> 	NASMX_RESERVE seq_message_id,	uint32_t, 1
  6692                              <1> 	NASMX_RESERVE grip_window,	uint32_t, 1
  6693                              <1> 	NASMX_RESERVE has_resize_grip,	uint32_t, 1
  6694                              <1> NASMX_ENDSTRUC
  6695                              <1> 
  6696                              <1> NASMX_STRUC GtkStatusbarClass
  6697                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkHBoxClass_size
  6698                              <1> 	NASMX_RESERVE reserved,		uint32_t, 1
  6699                              <1> 	NASMX_RESERVE text_pushed,	uint32_t, 1
  6700                              <1> 	NASMX_RESERVE text_popped,	uint32_t, 1
  6701                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6702                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6703                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6704                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6705                              <1> NASMX_ENDSTRUC
  6706                              <1> 
  6707                              <1> NASMX_STRUC GtkStatusIcon
  6708                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  6709                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6710                              <1> NASMX_ENDSTRUC
  6711                              <1> 
  6712                              <1> NASMX_STRUC GtkStatusIconClass
  6713                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  6714                              <1> 	NASMX_RESERVE activate,		uint32_t, 1
  6715                              <1> 	NASMX_RESERVE popup_menu,	uint32_t, 1
  6716                              <1> 	NASMX_RESERVE size_changed,	uint32_t, 1
  6717                              <1> 	NASMX_RESERVE button_press_event,	uint32_t, 1
  6718                              <1> 	NASMX_RESERVE button_release_event,	uint32_t, 1
  6719                              <1> 	NASMX_RESERVE scroll_event,	uint32_t, 1
  6720                              <1> 	NASMX_RESERVE query_tooltip,	uint32_t, 1
  6721                              <1> 	NASMX_RESERVE __gtk_reserved1,	uint32_t, 1
  6722                              <1> 	NASMX_RESERVE __gtk_reserved2,	uint32_t, 1
  6723                              <1> NASMX_ENDSTRUC
  6724                              <1> 
  6725                              <1> NASMX_STRUC GtkStockItem
  6726                              <1> 	NASMX_RESERVE stock_id,		uint32_t, 1
  6727                              <1> 	NASMX_RESERVE label,		uint32_t, 1
  6728                              <1> 	NASMX_RESERVE modifier,		uint32_t, 1
  6729                              <1> 	NASMX_RESERVE keyval,		uint32_t, 1
  6730                              <1> 	NASMX_RESERVE translation_domain,	uint32_t, 1
  6731                              <1> NASMX_ENDSTRUC
  6732                              <1> 
  6733                              <1> NASMX_STRUC GtkTable
  6734                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  6735                              <1> 	NASMX_RESERVE children,		uint32_t, 1
  6736                              <1> 	NASMX_RESERVE rows,		uint32_t, 1
  6737                              <1> 	NASMX_RESERVE cols,		uint32_t, 1
  6738                              <1> 	NASMX_RESERVE nrows,		uint16_t, 1
  6739                              <1> 	NASMX_RESERVE ncols,		uint16_t, 1
  6740                              <1> 	NASMX_RESERVE column_spacing,	uint16_t, 1
  6741                              <1> 	NASMX_RESERVE row_spacing,	uint16_t, 1
  6742                              <1> 	NASMX_RESERVE homogeneous,	uint32_t, 1
  6743                              <1> NASMX_ENDSTRUC
  6744                              <1> 
  6745                              <1> NASMX_STRUC GtkTableClass
  6746                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  6747                              <1> NASMX_ENDSTRUC
  6748                              <1> 
  6749                              <1> NASMX_STRUC GtkTableChild
  6750                              <1> 	NASMX_RESERVE widget,		uint32_t, 1
  6751                              <1> 	NASMX_RESERVE left_attach,	uint16_t, 1
  6752                              <1> 	NASMX_RESERVE right_attach,	uint16_t, 1
  6753                              <1> 	NASMX_RESERVE top_attach,	uint16_t, 1
  6754                              <1> 	NASMX_RESERVE bottom_attach,	uint16_t, 1
  6755                              <1> 	NASMX_RESERVE xpadding,		uint16_t, 1
  6756                              <1> 	NASMX_RESERVE ypadding,		uint16_t, 1
  6757                              <1> 	NASMX_RESERVE xexpand,		uint32_t, 1
  6758                              <1> ;.yexpand:		RESD 1
  6759                              <1> ;.xshrink:		RESD 1
  6760                              <1> ;.yshrink:		RESD 1
  6761                              <1> ;.xfill:		RESD 1
  6762                              <1> ;.yfill:		RESD 1
  6763                              <1> NASMX_ENDSTRUC
  6764                              <1> 
  6765                              <1> NASMX_STRUC GtkTableRowCol
  6766                              <1> 	NASMX_RESERVE requisition,	uint16_t, 1
  6767                              <1> 	NASMX_RESERVE allocation,	uint16_t, 1
  6768                              <1> 	NASMX_RESERVE spacing,		uint16_t, 1
  6769                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 2
  6770                              <1> 	NASMX_RESERVE need_expand,	uint32_t, 1
  6771                              <1> ;.need_shrink:		RESD 1
  6772                              <1> ;.expand:		RESD 1
  6773                              <1> ;.shrink:		RESD 1
  6774                              <1> ;.empty:		RESD 1
  6775                              <1> NASMX_ENDSTRUC
  6776                              <1> 
  6777                              <1> NASMX_STRUC GtkTearoffMenuItem
  6778                              <1> 	NASMX_RESERVE menu_item,	int8_t, GtkMenuItem_size
  6779                              <1> 	NASMX_RESERVE torn_off,		uint32_t, 1
  6780                              <1> NASMX_ENDSTRUC
  6781                              <1> 
  6782                              <1> NASMX_STRUC GtkTearoffMenuItemClass
  6783                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkMenuItemClass_size
  6784                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6785                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6786                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6787                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6788                              <1> NASMX_ENDSTRUC
  6789                              <1> 
  6790                              <1> NASMX_STRUC GtkTextTagTable
  6791                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  6792                              <1> 	NASMX_RESERVE hash,		uint32_t, 1
  6793                              <1> 	NASMX_RESERVE anonymous,	uint32_t, 1
  6794                              <1> 	NASMX_RESERVE anon_count,	uint32_t, 1
  6795                              <1> 	NASMX_RESERVE buffers,		uint32_t, 1
  6796                              <1> NASMX_ENDSTRUC
  6797                              <1> 
  6798                              <1> NASMX_STRUC GtkTextTagTableClass
  6799                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  6800                              <1> 	NASMX_RESERVE tag_changed,	uint32_t, 1
  6801                              <1> 	NASMX_RESERVE tag_added,	uint32_t, 1
  6802                              <1> 	NASMX_RESERVE tag_removed,	uint32_t, 1
  6803                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6804                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6805                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6806                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6807                              <1> NASMX_ENDSTRUC
  6808                              <1> 
  6809                              <1> NASMX_STRUC GtkTextMark
  6810                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  6811                              <1> 	NASMX_RESERVE segment,		uint32_t, 1
  6812                              <1> NASMX_ENDSTRUC
  6813                              <1> 
  6814                              <1> NASMX_STRUC GtkTextMarkClass
  6815                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  6816                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6817                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6818                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6819                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6820                              <1> NASMX_ENDSTRUC
  6821                              <1> 
  6822                              <1> NASMX_STRUC GtkTextBuffer
  6823                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GObject_size
  6824                              <1> 	NASMX_RESERVE tag_table,	uint32_t, 1
  6825                              <1> 	NASMX_RESERVE btree,		uint32_t, 1
  6826                              <1> 	NASMX_RESERVE clipboard_contents_buffers,	uint32_t, 1
  6827                              <1> 	NASMX_RESERVE selection_clipboards,	uint32_t, 1
  6828                              <1> 	NASMX_RESERVE log_attr_cache,	uint32_t, 1
  6829                              <1> 	NASMX_RESERVE user_action_count,	uint32_t, 1
  6830                              <1> 	NASMX_RESERVE modified,		uint32_t, 1
  6831                              <1> ;.has_selection:	RESD 1
  6832                              <1> NASMX_ENDSTRUC
  6833                              <1> 
  6834                              <1> NASMX_STRUC GtkTextBufferClass
  6835                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  6836                              <1> 	NASMX_RESERVE insert_text,	uint32_t, 1
  6837                              <1> 	NASMX_RESERVE insert_pixbuf,	uint32_t, 1
  6838                              <1> 	NASMX_RESERVE insert_child_anchor,	uint32_t, 1
  6839                              <1> 	NASMX_RESERVE delete_range,	uint32_t, 1
  6840                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  6841                              <1> 	NASMX_RESERVE modified_changed,	uint32_t, 1
  6842                              <1> 	NASMX_RESERVE mark_set,		uint32_t, 1
  6843                              <1> 	NASMX_RESERVE mark_deleted,	uint32_t, 1
  6844                              <1> 	NASMX_RESERVE apply_tag,	uint32_t, 1
  6845                              <1> 	NASMX_RESERVE remove_tag,	uint32_t, 1
  6846                              <1> 	NASMX_RESERVE begin_user_action,	uint32_t, 1
  6847                              <1> 	NASMX_RESERVE end_user_action,	uint32_t, 1
  6848                              <1> 	NASMX_RESERVE paste_done,	uint32_t, 1
  6849                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6850                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6851                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6852                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6853                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  6854                              <1> NASMX_ENDSTRUC
  6855                              <1> 
  6856                              <1> NASMX_STRUC GtkTextView
  6857                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkContainer_size
  6858                              <1> 	NASMX_RESERVE layout,		uint32_t, 1
  6859                              <1> 	NASMX_RESERVE buffer,		uint32_t, 1
  6860                              <1> 	NASMX_RESERVE selection_drag_handler,	uint32_t, 1
  6861                              <1> 	NASMX_RESERVE scroll_timeout,	uint32_t, 1
  6862                              <1> 	NASMX_RESERVE pixels_above_lines,	uint32_t, 1
  6863                              <1> 	NASMX_RESERVE pixels_below_lines,	uint32_t, 1
  6864                              <1> 	NASMX_RESERVE pixels_inside_wrap,	uint32_t, 1
  6865                              <1> 	NASMX_RESERVE wrap_mode,	uint32_t, 1
  6866                              <1> 	NASMX_RESERVE justify,		uint32_t, 1
  6867                              <1> 	NASMX_RESERVE left_margin,	uint32_t, 1
  6868                              <1> 	NASMX_RESERVE right_margin,	uint32_t, 1
  6869                              <1> 	NASMX_RESERVE indent,		uint32_t, 1
  6870                              <1> 	NASMX_RESERVE tabs,		uint32_t, 1
  6871                              <1> 	NASMX_RESERVE editable,		uint32_t, 1
  6872                              <1> ;.overwrite_mode:	RESD 1
  6873                              <1> ;.cursor_visible:	RESD 1
  6874                              <1> ;.need_im_reset:	RESD 1
  6875                              <1> ;.accepts_tab:		RESD 1
  6876                              <1> ;.width_changed:	RESD 1
  6877                              <1> ;.onscreen_validated:	RESD 1
  6878                              <1> ;.mouse_cursor_obscured:	RESD 1
  6879                              <1> 	NASMX_RESERVE text_window,	uint32_t, 1
  6880                              <1> 	NASMX_RESERVE left_window,	uint32_t, 1
  6881                              <1> 	NASMX_RESERVE right_window,	uint32_t, 1
  6882                              <1> 	NASMX_RESERVE top_window,	uint32_t, 1
  6883                              <1> 	NASMX_RESERVE bottom_window,	uint32_t, 1
  6884                              <1> 	NASMX_RESERVE hadjustment,	uint32_t, 1
  6885                              <1> 	NASMX_RESERVE vadjustment,	uint32_t, 1
  6886                              <1> 	NASMX_RESERVE xoffset,		uint32_t, 1
  6887                              <1> 	NASMX_RESERVE yoffset,		uint32_t, 1
  6888                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  6889                              <1> 	NASMX_RESERVE height,		uint32_t, 1
  6890                              <1> 	NASMX_RESERVE virtual_cursor_x,	uint32_t, 1
  6891                              <1> 	NASMX_RESERVE virtual_cursor_y,	uint32_t, 1
  6892                              <1> 	NASMX_RESERVE first_para_mark,	uint32_t, 1
  6893                              <1> 	NASMX_RESERVE first_para_pixels,	uint32_t, 1
  6894                              <1> 	NASMX_RESERVE dnd_mark,		uint32_t, 1
  6895                              <1> 	NASMX_RESERVE blink_timeout,	uint32_t, 1
  6896                              <1> 	NASMX_RESERVE first_validate_idle,	uint32_t, 1
  6897                              <1> 	NASMX_RESERVE incremental_validate_idle,	uint32_t, 1
  6898                              <1> 	NASMX_RESERVE im_context,	uint32_t, 1
  6899                              <1> 	NASMX_RESERVE popup_menu,	uint32_t, 1
  6900                              <1> 	NASMX_RESERVE drag_start_x,	uint32_t, 1
  6901                              <1> 	NASMX_RESERVE drag_start_y,	uint32_t, 1
  6902                              <1> 	NASMX_RESERVE children,		uint32_t, 1
  6903                              <1> 	NASMX_RESERVE pending_scroll,	uint32_t, 1
  6904                              <1> 	NASMX_RESERVE pending_place_cursor_button,	uint32_t, 1
  6905                              <1> NASMX_ENDSTRUC
  6906                              <1> 
  6907                              <1> NASMX_STRUC GtkTextViewClass
  6908                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  6909                              <1> 	NASMX_RESERVE set_scroll_adjustments,	uint32_t, 1
  6910                              <1> 	NASMX_RESERVE populate_popup,	uint32_t, 1
  6911                              <1> 	NASMX_RESERVE move_cursor,	uint32_t, 1
  6912                              <1> 	NASMX_RESERVE page_horizontally,	uint32_t, 1
  6913                              <1> 	NASMX_RESERVE set_anchor,	uint32_t, 1
  6914                              <1> 	NASMX_RESERVE insert_at_cursor,	uint32_t, 1
  6915                              <1> 	NASMX_RESERVE delete_from_cursor,	uint32_t, 1
  6916                              <1> 	NASMX_RESERVE backspace,	uint32_t, 1
  6917                              <1> 	NASMX_RESERVE cut_clipboard,	uint32_t, 1
  6918                              <1> 	NASMX_RESERVE copy_clipboard,	uint32_t, 1
  6919                              <1> 	NASMX_RESERVE paste_clipboard,	uint32_t, 1
  6920                              <1> 	NASMX_RESERVE toggle_overwrite,	uint32_t, 1
  6921                              <1> 	NASMX_RESERVE move_focus,	uint32_t, 1
  6922                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6923                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6924                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6925                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6926                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  6927                              <1> 	NASMX_RESERVE _gtk_reserved6,	uint32_t, 1
  6928                              <1> 	NASMX_RESERVE _gtk_reserved7,	uint32_t, 1
  6929                              <1> NASMX_ENDSTRUC
  6930                              <1> 
  6931                              <1> NASMX_STRUC GtkPixmap
  6932                              <1> 	NASMX_RESERVE misc,		int8_t, GtkMisc_size
  6933                              <1> 	NASMX_RESERVE pixmap,		uint32_t, 1
  6934                              <1> 	NASMX_RESERVE mask,		uint32_t, 1
  6935                              <1> 	NASMX_RESERVE pixmap_insensitive,	uint32_t, 1
  6936                              <1> 	NASMX_RESERVE build_insensitive,	uint32_t, 1
  6937                              <1> NASMX_ENDSTRUC
  6938                              <1> 
  6939                              <1> NASMX_STRUC GtkPixmapClass
  6940                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkMiscClass_size
  6941                              <1> NASMX_ENDSTRUC
  6942                              <1> 
  6943                              <1> NASMX_STRUC GtkToolbarChild
  6944                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  6945                              <1> 	NASMX_RESERVE widget,		uint32_t, 1
  6946                              <1> 	NASMX_RESERVE icon,		uint32_t, 1
  6947                              <1> 	NASMX_RESERVE label,		uint32_t, 1
  6948                              <1> NASMX_ENDSTRUC
  6949                              <1> 
  6950                              <1> NASMX_STRUC GtkToolbar
  6951                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  6952                              <1> 	NASMX_RESERVE num_children,	uint32_t, 1
  6953                              <1> 	NASMX_RESERVE children,		uint32_t, 1
  6954                              <1> 	NASMX_RESERVE orientation,	uint32_t, 1
  6955                              <1> 	NASMX_RESERVE style,		uint32_t, 1
  6956                              <1> 	NASMX_RESERVE icon_size,	uint32_t, 1
  6957                              <1> 	NASMX_RESERVE tooltips,		uint32_t, 1
  6958                              <1> 	NASMX_RESERVE button_maxw,	uint32_t, 1
  6959                              <1> 	NASMX_RESERVE button_maxh,	uint32_t, 1
  6960                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6961                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6962                              <1> 	NASMX_RESERVE style_set,	uint32_t, 1
  6963                              <1> ;.icon_size_set:	RESD 1
  6964                              <1> NASMX_ENDSTRUC
  6965                              <1> 
  6966                              <1> NASMX_STRUC GtkToolbarClass
  6967                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  6968                              <1> 	NASMX_RESERVE orientation_changed,	uint32_t, 1
  6969                              <1> 	NASMX_RESERVE style_changed,	uint32_t, 1
  6970                              <1> 	NASMX_RESERVE popup_context_menu,	uint32_t, 1
  6971                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6972                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6973                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6974                              <1> NASMX_ENDSTRUC
  6975                              <1> 
  6976                              <1> NASMX_STRUC GtkToolItemGroup
  6977                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkContainer_size
  6978                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6979                              <1> NASMX_ENDSTRUC
  6980                              <1> 
  6981                              <1> NASMX_STRUC GtkToolItemGroupClass
  6982                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  6983                              <1> NASMX_ENDSTRUC
  6984                              <1> 
  6985                              <1> NASMX_STRUC GtkToolPalette
  6986                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkContainer_size
  6987                              <1> 	NASMX_RESERVE priv,		uint32_t, 1
  6988                              <1> NASMX_ENDSTRUC
  6989                              <1> 
  6990                              <1> NASMX_STRUC GtkToolPaletteClass
  6991                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  6992                              <1> 	NASMX_RESERVE set_scroll_adjustments,	uint32_t, 1
  6993                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  6994                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  6995                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  6996                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  6997                              <1> 	NASMX_RESERVE _gtk_reserved5,	uint32_t, 1
  6998                              <1> 	NASMX_RESERVE _gtk_reserved6,	uint32_t, 1
  6999                              <1> NASMX_ENDSTRUC
  7000                              <1> 
  7001                              <1> NASMX_STRUC GtkToolShellIface
  7002                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  7003                              <1> 	NASMX_RESERVE get_icon_size,	uint32_t, 1
  7004                              <1> 	NASMX_RESERVE get_orientation,	uint32_t, 1
  7005                              <1> 	NASMX_RESERVE get_style,	uint32_t, 1
  7006                              <1> 	NASMX_RESERVE get_relief_style,	uint32_t, 1
  7007                              <1> 	NASMX_RESERVE rebuild_menu,	uint32_t, 1
  7008                              <1> 	NASMX_RESERVE get_text_orientation,	uint32_t, 1
  7009                              <1> 	NASMX_RESERVE get_text_alignment,	uint32_t, 1
  7010                              <1> 	NASMX_RESERVE get_ellipsize_mode,	uint32_t, 1
  7011                              <1> 	NASMX_RESERVE get_text_size_group,	uint32_t, 1
  7012                              <1> NASMX_ENDSTRUC
  7013                              <1> 
  7014                              <1> NASMX_STRUC GtkTreeDragSourceIface
  7015                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  7016                              <1> 	NASMX_RESERVE row_draggable,	uint32_t, 1
  7017                              <1> 	NASMX_RESERVE drag_data_get,	uint32_t, 1
  7018                              <1> 	NASMX_RESERVE drag_data_delete,	uint32_t, 1
  7019                              <1> NASMX_ENDSTRUC
  7020                              <1> 
  7021                              <1> NASMX_STRUC GtkTreeDragDestIface
  7022                              <1> 	NASMX_RESERVE g_iface,		int8_t, GTypeInterface_size
  7023                              <1> 	NASMX_RESERVE drag_data_received,	uint32_t, 1
  7024                              <1> 	NASMX_RESERVE row_drop_possible,	uint32_t, 1
  7025                              <1> NASMX_ENDSTRUC
  7026                              <1> 
  7027                              <1> NASMX_STRUC GtkTreeModelSort
  7028                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  7029                              <1> 	NASMX_RESERVE root,		uint32_t, 1
  7030                              <1> 	NASMX_RESERVE stamp,		uint32_t, 1
  7031                              <1> 	NASMX_RESERVE child_flags,	uint32_t, 1
  7032                              <1> 	NASMX_RESERVE child_model,	uint32_t, 1
  7033                              <1> 	NASMX_RESERVE zero_ref_count,	uint32_t, 1
  7034                              <1> 	NASMX_RESERVE sort_list,	uint32_t, 1
  7035                              <1> 	NASMX_RESERVE sort_column_id,	uint32_t, 1
  7036                              <1> 	NASMX_RESERVE order,		uint32_t, 1
  7037                              <1> 	NASMX_RESERVE default_sort_func,	uint32_t, 1
  7038                              <1> 	NASMX_RESERVE default_sort_data,	uint32_t, 1
  7039                              <1> 	NASMX_RESERVE default_sort_destroy,	uint32_t, 1
  7040                              <1> 	NASMX_RESERVE changed_id,	uint32_t, 1
  7041                              <1> 	NASMX_RESERVE inserted_id,	uint32_t, 1
  7042                              <1> 	NASMX_RESERVE has_child_toggled_id,	uint32_t, 1
  7043                              <1> 	NASMX_RESERVE deleted_id,	uint32_t, 1
  7044                              <1> 	NASMX_RESERVE reordered_id,	uint32_t, 1
  7045                              <1> NASMX_ENDSTRUC
  7046                              <1> 
  7047                              <1> NASMX_STRUC GtkTreeModelSortClass
  7048                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  7049                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  7050                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  7051                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  7052                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  7053                              <1> NASMX_ENDSTRUC
  7054                              <1> 
  7055                              <1> NASMX_STRUC GtkTreeSelection
  7056                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  7057                              <1> 	NASMX_RESERVE tree_view,	uint32_t, 1
  7058                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  7059                              <1> 	NASMX_RESERVE user_func,	uint32_t, 1
  7060                              <1> 	NASMX_RESERVE user_data,	uint32_t, 1
  7061                              <1> 	NASMX_RESERVE destroy,		uint32_t, 1
  7062                              <1> NASMX_ENDSTRUC
  7063                              <1> 
  7064                              <1> NASMX_STRUC GtkTreeSelectionClass
  7065                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  7066                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  7067                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  7068                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  7069                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  7070                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  7071                              <1> NASMX_ENDSTRUC
  7072                              <1> 
  7073                              <1> NASMX_STRUC GtkTreeStore
  7074                              <1> 	NASMX_RESERVE parent,		int8_t, GObject_size
  7075                              <1> 	NASMX_RESERVE stamp,		uint32_t, 1
  7076                              <1> 	NASMX_RESERVE root,		uint32_t, 1
  7077                              <1> 	NASMX_RESERVE last,		uint32_t, 1
  7078                              <1> 	NASMX_RESERVE n_columns,	uint32_t, 1
  7079                              <1> 	NASMX_RESERVE sort_column_id,	uint32_t, 1
  7080                              <1> 	NASMX_RESERVE sort_list,	uint32_t, 1
  7081                              <1> 	NASMX_RESERVE order,		uint32_t, 1
  7082                              <1> 	NASMX_RESERVE column_headers,	uint32_t, 1
  7083                              <1> 	NASMX_RESERVE default_sort_func,	uint32_t, 1
  7084                              <1> 	NASMX_RESERVE default_sort_data,	uint32_t, 1
  7085                              <1> 	NASMX_RESERVE default_sort_destroy,	uint32_t, 1
  7086                              <1> 	NASMX_RESERVE columns_dirty,	uint32_t, 1
  7087                              <1> NASMX_ENDSTRUC
  7088                              <1> 
  7089                              <1> NASMX_STRUC GtkTreeStoreClass
  7090                              <1> 	NASMX_RESERVE parent_class,	int8_t, GObjectClass_size
  7091                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  7092                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  7093                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  7094                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  7095                              <1> NASMX_ENDSTRUC
  7096                              <1> 
  7097                              <1> NASMX_STRUC GtkVButtonBox
  7098                              <1> 	NASMX_RESERVE button_box,	int8_t, GtkButtonBox_size
  7099                              <1> NASMX_ENDSTRUC
  7100                              <1> 
  7101                              <1> NASMX_STRUC GtkVButtonBoxClass
  7102                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkButtonBoxClass_size
  7103                              <1> NASMX_ENDSTRUC
  7104                              <1> 
  7105                              <1> NASMX_STRUC GtkVolumeButton
  7106                              <1> 	NASMX_RESERVE parent,		int8_t, GtkScaleButton_size
  7107                              <1> NASMX_ENDSTRUC
  7108                              <1> 
  7109                              <1> NASMX_STRUC GtkVolumeButtonClass
  7110                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkScaleButtonClass_size
  7111                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  7112                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  7113                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  7114                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  7115                              <1> NASMX_ENDSTRUC
  7116                              <1> 
  7117                              <1> NASMX_STRUC GtkVPaned
  7118                              <1> 	NASMX_RESERVE paned,		int8_t, GtkPaned_size
  7119                              <1> NASMX_ENDSTRUC
  7120                              <1> 
  7121                              <1> NASMX_STRUC GtkVPanedClass
  7122                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkPanedClass_size
  7123                              <1> NASMX_ENDSTRUC
  7124                              <1> 
  7125                              <1> NASMX_STRUC GtkVRuler
  7126                              <1> 	NASMX_RESERVE ruler,		int8_t, GtkRuler_size
  7127                              <1> NASMX_ENDSTRUC
  7128                              <1> 
  7129                              <1> NASMX_STRUC GtkVRulerClass
  7130                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkRulerClass_size
  7131                              <1> NASMX_ENDSTRUC
  7132                              <1> 
  7133                              <1> NASMX_STRUC GtkVScale
  7134                              <1> 	NASMX_RESERVE scale,		int8_t, GtkScale_size
  7135                              <1> NASMX_ENDSTRUC
  7136                              <1> 
  7137                              <1> NASMX_STRUC GtkVScaleClass
  7138                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkScaleClass_size
  7139                              <1> NASMX_ENDSTRUC
  7140                              <1> 
  7141                              <1> NASMX_STRUC GtkVSeparator
  7142                              <1> 	NASMX_RESERVE separator,	int8_t, GtkSeparator_size
  7143                              <1> NASMX_ENDSTRUC
  7144                              <1> 
  7145                              <1> NASMX_STRUC GtkVSeparatorClass
  7146                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkSeparatorClass_size
  7147                              <1> NASMX_ENDSTRUC
  7148                              <1> 
  7149                              <1> NASMX_STRUC GtkCListCellInfo
  7150                              <1> 	NASMX_RESERVE row,		uint32_t, 1
  7151                              <1> 	NASMX_RESERVE column,		uint32_t, 1
  7152                              <1> NASMX_ENDSTRUC
  7153                              <1> 
  7154                              <1> NASMX_STRUC GtkCListDestInfo
  7155                              <1> 	NASMX_RESERVE cell,		int8_t, GtkCListCellInfo_size
  7156                              <1> 	NASMX_RESERVE insert_pos,	uint32_t, 1
  7157                              <1> NASMX_ENDSTRUC
  7158                              <1> 
  7159                              <1> NASMX_STRUC GtkCList
  7160                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  7161                              <1> 	NASMX_RESERVE flags,		uint16_t, 1
  7162                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 2
  7163                              <1> 	NASMX_RESERVE reserved1,	uint32_t, 1
  7164                              <1> 	NASMX_RESERVE reserved2,	uint32_t, 1
  7165                              <1> 	NASMX_RESERVE freeze_count,	uint32_t, 1
  7166                              <1> 	NASMX_RESERVE internal_allocation,	int8_t, GdkRectangle_size
  7167                              <1> 	NASMX_RESERVE rows,		uint32_t, 1
  7168                              <1> 	NASMX_RESERVE row_height,	uint32_t, 1
  7169                              <1> 	NASMX_RESERVE row_list,		uint32_t, 1
  7170                              <1> 	NASMX_RESERVE row_list_end,	uint32_t, 1
  7171                              <1> 	NASMX_RESERVE columns,		uint32_t, 1
  7172                              <1> 	NASMX_RESERVE column_title_area,	int8_t, GdkRectangle_size
  7173                              <1> 	NASMX_RESERVE title_window,	uint32_t, 1
  7174                              <1> 	NASMX_RESERVE column,		uint32_t, 1
  7175                              <1> 	NASMX_RESERVE clist_window,	uint32_t, 1
  7176                              <1> 	NASMX_RESERVE clist_window_width,	uint32_t, 1
  7177                              <1> 	NASMX_RESERVE clist_window_height,	uint32_t, 1
  7178                              <1> 	NASMX_RESERVE hoffset,		uint32_t, 1
  7179                              <1> 	NASMX_RESERVE voffset,		uint32_t, 1
  7180                              <1> 	NASMX_RESERVE shadow_type,	uint32_t, 1
  7181                              <1> 	NASMX_RESERVE selection_mode,	uint32_t, 1
  7182                              <1> 	NASMX_RESERVE selection,	uint32_t, 1
  7183                              <1> 	NASMX_RESERVE selection_end,	uint32_t, 1
  7184                              <1> 	NASMX_RESERVE undo_selection,	uint32_t, 1
  7185                              <1> 	NASMX_RESERVE undo_unselection,	uint32_t, 1
  7186                              <1> 	NASMX_RESERVE undo_anchor,	uint32_t, 1
  7187                              <1> 	NASMX_RESERVE button_actions,	int8_t, 5
  7188                              <1> 	NASMX_RESERVE drag_button,	int8_t, 1
  7189                              <1> 	NASMX_RESERVE __PADDING2__,	int8_t, 2
  7190                              <1> 	NASMX_RESERVE click_cell,	int8_t, GtkCListCellInfo_size
  7191                              <1> 	NASMX_RESERVE hadjustment,	uint32_t, 1
  7192                              <1> 	NASMX_RESERVE vadjustment,	uint32_t, 1
  7193                              <1> 	NASMX_RESERVE xor_gc,		uint32_t, 1
  7194                              <1> 	NASMX_RESERVE fg_gc,		uint32_t, 1
  7195                              <1> 	NASMX_RESERVE bg_gc,		uint32_t, 1
  7196                              <1> 	NASMX_RESERVE cursor_drag,	uint32_t, 1
  7197                              <1> 	NASMX_RESERVE x_drag,		uint32_t, 1
  7198                              <1> 	NASMX_RESERVE focus_row,	uint32_t, 1
  7199                              <1> 	NASMX_RESERVE focus_header_column,	uint32_t, 1
  7200                              <1> 	NASMX_RESERVE anchor,		uint32_t, 1
  7201                              <1> 	NASMX_RESERVE anchor_state,	uint32_t, 1
  7202                              <1> 	NASMX_RESERVE drag_pos,		uint32_t, 1
  7203                              <1> 	NASMX_RESERVE htimer,		uint32_t, 1
  7204                              <1> 	NASMX_RESERVE vtimer,		uint32_t, 1
  7205                              <1> 	NASMX_RESERVE sort_type,	uint32_t, 1
  7206                              <1> 	NASMX_RESERVE compare,		uint32_t, 1
  7207                              <1> 	NASMX_RESERVE sort_column,	uint32_t, 1
  7208                              <1> 	NASMX_RESERVE drag_highlight_row,	uint32_t, 1
  7209                              <1> 	NASMX_RESERVE drag_highlight_pos,	uint32_t, 1
  7210                              <1> NASMX_ENDSTRUC
  7211                              <1> 
  7212                              <1> NASMX_STRUC GtkCListClass
  7213                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  7214                              <1> 	NASMX_RESERVE set_scroll_adjustments,	uint32_t, 1
  7215                              <1> 	NASMX_RESERVE refresh,		uint32_t, 1
  7216                              <1> 	NASMX_RESERVE select_row,	uint32_t, 1
  7217                              <1> 	NASMX_RESERVE unselect_row,	uint32_t, 1
  7218                              <1> 	NASMX_RESERVE row_move,		uint32_t, 1
  7219                              <1> 	NASMX_RESERVE click_column,	uint32_t, 1
  7220                              <1> 	NASMX_RESERVE resize_column,	uint32_t, 1
  7221                              <1> 	NASMX_RESERVE toggle_focus_row,	uint32_t, 1
  7222                              <1> 	NASMX_RESERVE select_all,	uint32_t, 1
  7223                              <1> 	NASMX_RESERVE unselect_all,	uint32_t, 1
  7224                              <1> 	NASMX_RESERVE undo_selection,	uint32_t, 1
  7225                              <1> 	NASMX_RESERVE start_selection,	uint32_t, 1
  7226                              <1> 	NASMX_RESERVE end_selection,	uint32_t, 1
  7227                              <1> 	NASMX_RESERVE extend_selection,	uint32_t, 1
  7228                              <1> 	NASMX_RESERVE scroll_horizontal,	uint32_t, 1
  7229                              <1> 	NASMX_RESERVE scroll_vertical,	uint32_t, 1
  7230                              <1> 	NASMX_RESERVE toggle_add_mode,	uint32_t, 1
  7231                              <1> 	NASMX_RESERVE abort_column_resize,	uint32_t, 1
  7232                              <1> 	NASMX_RESERVE resync_selection,	uint32_t, 1
  7233                              <1> 	NASMX_RESERVE selection_find,	uint32_t, 1
  7234                              <1> 	NASMX_RESERVE draw_row,		uint32_t, 1
  7235                              <1> 	NASMX_RESERVE draw_drag_highlight,	uint32_t, 1
  7236                              <1> 	NASMX_RESERVE clear,		uint32_t, 1
  7237                              <1> 	NASMX_RESERVE fake_unselect_all,	uint32_t, 1
  7238                              <1> 	NASMX_RESERVE sort_list,	uint32_t, 1
  7239                              <1> 	NASMX_RESERVE insert_row,	uint32_t, 1
  7240                              <1> 	NASMX_RESERVE remove_row,	uint32_t, 1
  7241                              <1> 	NASMX_RESERVE set_cell_contents,	uint32_t, 1
  7242                              <1> 	NASMX_RESERVE cell_size_request,	uint32_t, 1
  7243                              <1> NASMX_ENDSTRUC
  7244                              <1> 
  7245                              <1> NASMX_STRUC GtkCListColumn
  7246                              <1> 	NASMX_RESERVE title,		uint32_t, 1
  7247                              <1> 	NASMX_RESERVE area,		int8_t, GdkRectangle_size
  7248                              <1> 	NASMX_RESERVE button,		uint32_t, 1
  7249                              <1> 	NASMX_RESERVE window,		uint32_t, 1
  7250                              <1> 	NASMX_RESERVE width,		uint32_t, 1
  7251                              <1> 	NASMX_RESERVE min_width,	uint32_t, 1
  7252                              <1> 	NASMX_RESERVE max_width,	uint32_t, 1
  7253                              <1> 	NASMX_RESERVE justification,	uint32_t, 1
  7254                              <1> 	NASMX_RESERVE visible,		uint32_t, 1
  7255                              <1> ;.width_set:		RESD 1
  7256                              <1> ;.resizeable:		RESD 1
  7257                              <1> ;.auto_resize:		RESD 1
  7258                              <1> ;.button_passive:	RESD 1
  7259                              <1> NASMX_ENDSTRUC
  7260                              <1> 
  7261                              <1> NASMX_STRUC GtkCListRow
  7262                              <1> 	NASMX_RESERVE cell,		uint32_t, 1
  7263                              <1> 	NASMX_RESERVE state,		uint32_t, 1
  7264                              <1> 	NASMX_RESERVE foreground,	int8_t, GdkColor_size
  7265                              <1> 	NASMX_RESERVE background,	int8_t, GdkColor_size
  7266                              <1> 	NASMX_RESERVE style,		uint32_t, 1
  7267                              <1> 	NASMX_RESERVE data,		uint32_t, 1
  7268                              <1> 	NASMX_RESERVE destroy,		uint32_t, 1
  7269                              <1> 	NASMX_RESERVE fg_set,		uint32_t, 1
  7270                              <1> ;.bg_set:		RESD 1
  7271                              <1> ;.selectable:		RESD 1
  7272                              <1> NASMX_ENDSTRUC
  7273                              <1> 
  7274                              <1> NASMX_STRUC GtkCellText
  7275                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  7276                              <1> 	NASMX_RESERVE vertical,		uint16_t, 1
  7277                              <1> 	NASMX_RESERVE horizontal,	uint16_t, 1
  7278                              <1> 	NASMX_RESERVE style,		uint32_t, 1
  7279                              <1> 	NASMX_RESERVE text,		uint32_t, 1
  7280                              <1> NASMX_ENDSTRUC
  7281                              <1> 
  7282                              <1> NASMX_STRUC GtkCellPixmap
  7283                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  7284                              <1> 	NASMX_RESERVE vertical,		uint16_t, 1
  7285                              <1> 	NASMX_RESERVE horizontal,	uint16_t, 1
  7286                              <1> 	NASMX_RESERVE style,		uint32_t, 1
  7287                              <1> 	NASMX_RESERVE pixmap,		uint32_t, 1
  7288                              <1> 	NASMX_RESERVE mask,		uint32_t, 1
  7289                              <1> NASMX_ENDSTRUC
  7290                              <1> 
  7291                              <1> NASMX_STRUC GtkCellPixText
  7292                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  7293                              <1> 	NASMX_RESERVE vertical,		uint16_t, 1
  7294                              <1> 	NASMX_RESERVE horizontal,	uint16_t, 1
  7295                              <1> 	NASMX_RESERVE style,		uint32_t, 1
  7296                              <1> 	NASMX_RESERVE text,		uint32_t, 1
  7297                              <1> 	NASMX_RESERVE spacing,		int8_t, 1
  7298                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 3
  7299                              <1> 	NASMX_RESERVE pixmap,		uint32_t, 1
  7300                              <1> 	NASMX_RESERVE mask,		uint32_t, 1
  7301                              <1> NASMX_ENDSTRUC
  7302                              <1> 
  7303                              <1> NASMX_STRUC GtkCellWidget
  7304                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  7305                              <1> 	NASMX_RESERVE vertical,		uint16_t, 1
  7306                              <1> 	NASMX_RESERVE horizontal,	uint16_t, 1
  7307                              <1> 	NASMX_RESERVE style,		uint32_t, 1
  7308                              <1> 	NASMX_RESERVE widget,		uint32_t, 1
  7309                              <1> NASMX_ENDSTRUC
  7310                              <1> 
  7311                              <1> NASMX_STRUC GtkCell
  7312                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  7313                              <1> 	NASMX_RESERVE vertical,		uint16_t, 1
  7314                              <1> 	NASMX_RESERVE horizontal,	uint16_t, 1
  7315                              <1> 	NASMX_RESERVE style,		uint32_t, 1
  7316                              <1> 
  7317                              <1> ;;union {
  7318                              <1> ;;    gchar *text;
  7319                              <1> ;;    struct {
  7320                              <1> ;;      GdkPixmap *pixmap;
  7321                              <1> ;;      GdkBitmap *mask;
  7322                              <1> ;;    } pm;
  7323                              <1> ;;    struct {
  7324                              <1> ;;      gchar *text;
  7325                              <1> ;;      guint8 spacing;
  7326                              <1> ;;      GdkPixmap *pixmap;
  7327                              <1> ;;      GdkBitmap *mask;
  7328                              <1> ;;    } pt;
  7329                              <1> ;;    GtkWidget *widget;
  7330                              <1> ;;  } u;
  7331                              <1> 	NASMX_RESERVE u_union,	uint32_t, 4
  7332                              <1> NASMX_ENDSTRUC
  7333                              <1> 
  7334                              <1> NASMX_STRUC GtkCTree
  7335                              <1> 	NASMX_RESERVE clist,		int8_t, GtkCList_size
  7336                              <1> 	NASMX_RESERVE lines_gc,		uint32_t, 1
  7337                              <1> 	NASMX_RESERVE tree_indent,	uint32_t, 1
  7338                              <1> 	NASMX_RESERVE tree_spacing,	uint32_t, 1
  7339                              <1> 	NASMX_RESERVE tree_column,	uint32_t, 1
  7340                              <1> 	NASMX_RESERVE line_style,	uint32_t, 1
  7341                              <1> ;.expander_style:	RESD 1
  7342                              <1> ;.show_stub:		RESD 1
  7343                              <1> 	NASMX_RESERVE drag_compare,	uint32_t, 1
  7344                              <1> NASMX_ENDSTRUC
  7345                              <1> 
  7346                              <1> NASMX_STRUC GtkCTreeClass
  7347                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkCListClass_size
  7348                              <1> 	NASMX_RESERVE tree_select_row,	uint32_t, 1
  7349                              <1> 	NASMX_RESERVE tree_unselect_row,	uint32_t, 1
  7350                              <1> 	NASMX_RESERVE tree_expand,	uint32_t, 1
  7351                              <1> 	NASMX_RESERVE tree_collapse,	uint32_t, 1
  7352                              <1> 	NASMX_RESERVE tree_move,	uint32_t, 1
  7353                              <1> 	NASMX_RESERVE change_focus_row_expansion,	uint32_t, 1
  7354                              <1> NASMX_ENDSTRUC
  7355                              <1> 
  7356                              <1> NASMX_STRUC GtkCTreeRow
  7357                              <1> 	NASMX_RESERVE row,		int8_t, GtkCListRow_size
  7358                              <1> 	NASMX_RESERVE parent,		uint32_t, 1
  7359                              <1> 	NASMX_RESERVE sibling,		uint32_t, 1
  7360                              <1> 	NASMX_RESERVE children,		uint32_t, 1
  7361                              <1> 	NASMX_RESERVE pixmap_closed,	uint32_t, 1
  7362                              <1> 	NASMX_RESERVE mask_closed,	uint32_t, 1
  7363                              <1> 	NASMX_RESERVE pixmap_opened,	uint32_t, 1
  7364                              <1> 	NASMX_RESERVE mask_opened,	uint32_t, 1
  7365                              <1> 	NASMX_RESERVE level,		uint16_t, 1
  7366                              <1> 	NASMX_RESERVE __PADDING1__,	int8_t, 2
  7367                              <1> 	NASMX_RESERVE is_leaf,		uint32_t, 1
  7368                              <1> ;.expanded:		RESD 1
  7369                              <1> NASMX_ENDSTRUC
  7370                              <1> 
  7371                              <1> NASMX_STRUC GtkCurve
  7372                              <1> 	NASMX_RESERVE graph,		int8_t, GtkDrawingArea_size
  7373                              <1> 	NASMX_RESERVE cursor_type,	uint32_t, 1
  7374                              <1> 	NASMX_RESERVE min_x,		uint32_t, 1
  7375                              <1> 	NASMX_RESERVE max_x,		uint32_t, 1
  7376                              <1> 	NASMX_RESERVE min_y,		uint32_t, 1
  7377                              <1> 	NASMX_RESERVE max_y,		uint32_t, 1
  7378                              <1> 	NASMX_RESERVE pixmap,		uint32_t, 1
  7379                              <1> 	NASMX_RESERVE curve_type,	uint32_t, 1
  7380                              <1> 	NASMX_RESERVE height,		uint32_t, 1
  7381                              <1> 	NASMX_RESERVE grab_point,	uint32_t, 1
  7382                              <1> 	NASMX_RESERVE last,		uint32_t, 1
  7383                              <1> 	NASMX_RESERVE num_points,	uint32_t, 1
  7384                              <1> 	NASMX_RESERVE point,		uint32_t, 1
  7385                              <1> 	NASMX_RESERVE num_ctlpoints,	uint32_t, 1
  7386                              <1> 	NASMX_RESERVE ctlpoint,		uint32_t, 1
  7387                              <1> NASMX_ENDSTRUC
  7388                              <1> 
  7389                              <1> NASMX_STRUC GtkCurveClass
  7390                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkDrawingAreaClass_size
  7391                              <1> 	NASMX_RESERVE curve_type_changed,	uint32_t, 1
  7392                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  7393                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  7394                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  7395                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  7396                              <1> NASMX_ENDSTRUC
  7397                              <1> 
  7398                              <1> NASMX_STRUC GtkFileSelection
  7399                              <1> 	NASMX_RESERVE parent_instance,	int8_t, GtkDialog_size
  7400                              <1> 	NASMX_RESERVE dir_list,		uint32_t, 1
  7401                              <1> 	NASMX_RESERVE file_list,	uint32_t, 1
  7402                              <1> 	NASMX_RESERVE selection_entry,	uint32_t, 1
  7403                              <1> 	NASMX_RESERVE selection_text,	uint32_t, 1
  7404                              <1> 	NASMX_RESERVE main_vbox,	uint32_t, 1
  7405                              <1> 	NASMX_RESERVE ok_button,	uint32_t, 1
  7406                              <1> 	NASMX_RESERVE cancel_button,	uint32_t, 1
  7407                              <1> 	NASMX_RESERVE help_button,	uint32_t, 1
  7408                              <1> 	NASMX_RESERVE history_pulldown,	uint32_t, 1
  7409                              <1> 	NASMX_RESERVE history_menu,	uint32_t, 1
  7410                              <1> 	NASMX_RESERVE history_list,	uint32_t, 1
  7411                              <1> 	NASMX_RESERVE fileop_dialog,	uint32_t, 1
  7412                              <1> 	NASMX_RESERVE fileop_entry,	uint32_t, 1
  7413                              <1> 	NASMX_RESERVE fileop_file,	uint32_t, 1
  7414                              <1> 	NASMX_RESERVE cmpl_state,	uint32_t, 1
  7415                              <1> 	NASMX_RESERVE fileop_c_dir,	uint32_t, 1
  7416                              <1> 	NASMX_RESERVE fileop_del_file,	uint32_t, 1
  7417                              <1> 	NASMX_RESERVE fileop_ren_file,	uint32_t, 1
  7418                              <1> 	NASMX_RESERVE button_area,	uint32_t, 1
  7419                              <1> 	NASMX_RESERVE action_area,	uint32_t, 1
  7420                              <1> 	NASMX_RESERVE selected_names,	uint32_t, 1
  7421                              <1> 	NASMX_RESERVE last_selected,	uint32_t, 1
  7422                              <1> NASMX_ENDSTRUC
  7423                              <1> 
  7424                              <1> NASMX_STRUC GtkFileSelectionClass
  7425                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkDialogClass_size
  7426                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  7427                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  7428                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  7429                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  7430                              <1> NASMX_ENDSTRUC
  7431                              <1> 
  7432                              <1> NASMX_STRUC GtkGammaCurve
  7433                              <1> 	NASMX_RESERVE vbox,		int8_t, GtkVBox_size
  7434                              <1> 	NASMX_RESERVE table,		uint32_t, 1
  7435                              <1> 	NASMX_RESERVE curve,		uint32_t, 1
  7436                              <1> 	NASMX_RESERVE button,		uint32_t, 1
  7437                              <1> 	NASMX_RESERVE gamma,		uint32_t, 1
  7438                              <1> 	NASMX_RESERVE gamma_dialog,	uint32_t, 1
  7439                              <1> 	NASMX_RESERVE gamma_text,	uint32_t, 1
  7440                              <1> NASMX_ENDSTRUC
  7441                              <1> 
  7442                              <1> NASMX_STRUC GtkGammaCurveClass
  7443                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkVBoxClass_size
  7444                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  7445                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  7446                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  7447                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  7448                              <1> NASMX_ENDSTRUC
  7449                              <1> 
  7450                              <1> NASMX_STRUC GtkInputDialog
  7451                              <1> 	NASMX_RESERVE dialog,		int8_t, GtkDialog_size
  7452                              <1> 	NASMX_RESERVE axis_list,	uint32_t, 1
  7453                              <1> 	NASMX_RESERVE axis_listbox,	uint32_t, 1
  7454                              <1> 	NASMX_RESERVE mode_optionmenu,	uint32_t, 1
  7455                              <1> 	NASMX_RESERVE close_button,	uint32_t, 1
  7456                              <1> 	NASMX_RESERVE save_button,	uint32_t, 1
  7457                              <1> 	NASMX_RESERVE axis_items,	uint32_t, 1
  7458                              <1> 	NASMX_RESERVE current_device,	uint32_t, 1
  7459                              <1> 	NASMX_RESERVE keys_list,	uint32_t, 1
  7460                              <1> 	NASMX_RESERVE keys_listbox,	uint32_t, 1
  7461                              <1> NASMX_ENDSTRUC
  7462                              <1> 
  7463                              <1> NASMX_STRUC GtkInputDialogClass
  7464                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkDialogClass_size
  7465                              <1> 	NASMX_RESERVE enable_device,	uint32_t, 1
  7466                              <1> 	NASMX_RESERVE disable_device,	uint32_t, 1
  7467                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  7468                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  7469                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  7470                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  7471                              <1> NASMX_ENDSTRUC
  7472                              <1> 
  7473                              <1> NASMX_STRUC GtkItemFactory
  7474                              <1> 	NASMX_RESERVE object,		int8_t, GtkObject_size
  7475                              <1> 	NASMX_RESERVE path,		uint32_t, 1
  7476                              <1> 	NASMX_RESERVE accel_group,	uint32_t, 1
  7477                              <1> 	NASMX_RESERVE widget,		uint32_t, 1
  7478                              <1> 	NASMX_RESERVE items,		uint32_t, 1
  7479                              <1> 	NASMX_RESERVE translate_func,	uint32_t, 1
  7480                              <1> 	NASMX_RESERVE translate_data,	uint32_t, 1
  7481                              <1> 	NASMX_RESERVE translate_notify,	uint32_t, 1
  7482                              <1> NASMX_ENDSTRUC
  7483                              <1> 
  7484                              <1> NASMX_STRUC GtkItemFactoryClass
  7485                              <1> 	NASMX_RESERVE object_class,	int8_t, GtkObjectClass_size
  7486                              <1> 	NASMX_RESERVE item_ht,		uint32_t, 1
  7487                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  7488                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  7489                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  7490                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  7491                              <1> NASMX_ENDSTRUC
  7492                              <1> 
  7493                              <1> NASMX_STRUC GtkItemFactoryEntry
  7494                              <1> 	NASMX_RESERVE path,		uint32_t, 1
  7495                              <1> 	NASMX_RESERVE accelerator,	uint32_t, 1
  7496                              <1> 	NASMX_RESERVE callback,		uint32_t, 1
  7497                              <1> 	NASMX_RESERVE callback_action,	uint32_t, 1
  7498                              <1> 	NASMX_RESERVE item_type,	uint32_t, 1
  7499                              <1> 	NASMX_RESERVE extra_data,	uint32_t, 1
  7500                              <1> NASMX_ENDSTRUC
  7501                              <1> 
  7502                              <1> NASMX_STRUC GtkItemFactoryItem
  7503                              <1> 	NASMX_RESERVE path,		uint32_t, 1
  7504                              <1> 	NASMX_RESERVE widgets,		uint32_t, 1
  7505                              <1> NASMX_ENDSTRUC
  7506                              <1> 
  7507                              <1> NASMX_STRUC GtkList
  7508                              <1> 	NASMX_RESERVE container,	int8_t, GtkContainer_size
  7509                              <1> 	NASMX_RESERVE children,		uint32_t, 1
  7510                              <1> 	NASMX_RESERVE selection,	uint32_t, 1
  7511                              <1> 	NASMX_RESERVE undo_selection,	uint32_t, 1
  7512                              <1> 	NASMX_RESERVE undo_unselection,	uint32_t, 1
  7513                              <1> 	NASMX_RESERVE last_focus_child,	uint32_t, 1
  7514                              <1> 	NASMX_RESERVE undo_focus_child,	uint32_t, 1
  7515                              <1> 	NASMX_RESERVE htimer,		uint32_t, 1
  7516                              <1> 	NASMX_RESERVE vtimer,		uint32_t, 1
  7517                              <1> 	NASMX_RESERVE anchor,		uint32_t, 1
  7518                              <1> 	NASMX_RESERVE drag_pos,		uint32_t, 1
  7519                              <1> 	NASMX_RESERVE anchor_state,	uint32_t, 1
  7520                              <1> 	NASMX_RESERVE selection_mode,	uint32_t, 1
  7521                              <1> ;.drag_selection:	RESD 1
  7522                              <1> ;.add_mode:		RESD 1
  7523                              <1> NASMX_ENDSTRUC
  7524                              <1> 
  7525                              <1> NASMX_STRUC GtkListClass
  7526                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkContainerClass_size
  7527                              <1> 	NASMX_RESERVE selection_changed,	uint32_t, 1
  7528                              <1> 	NASMX_RESERVE select_child,	uint32_t, 1
  7529                              <1> 	NASMX_RESERVE unselect_child,	uint32_t, 1
  7530                              <1> NASMX_ENDSTRUC
  7531                              <1> 
  7532                              <1> NASMX_STRUC GtkListItem
  7533                              <1> 	NASMX_RESERVE item,		int8_t, GtkItem_size
  7534                              <1> NASMX_ENDSTRUC
  7535                              <1> 
  7536                              <1> NASMX_STRUC GtkListItemClass
  7537                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkItemClass_size
  7538                              <1> 	NASMX_RESERVE toggle_focus_row,	uint32_t, 1
  7539                              <1> 	NASMX_RESERVE select_all,	uint32_t, 1
  7540                              <1> 	NASMX_RESERVE unselect_all,	uint32_t, 1
  7541                              <1> 	NASMX_RESERVE undo_selection,	uint32_t, 1
  7542                              <1> 	NASMX_RESERVE start_selection,	uint32_t, 1
  7543                              <1> 	NASMX_RESERVE end_selection,	uint32_t, 1
  7544                              <1> 	NASMX_RESERVE extend_selection,	uint32_t, 1
  7545                              <1> 	NASMX_RESERVE scroll_horizontal,	uint32_t, 1
  7546                              <1> 	NASMX_RESERVE scroll_vertical,	uint32_t, 1
  7547                              <1> 	NASMX_RESERVE toggle_add_mode,	uint32_t, 1
  7548                              <1> NASMX_ENDSTRUC
  7549                              <1> 
  7550                              <1> NASMX_STRUC GtkOldEditable
  7551                              <1> 	NASMX_RESERVE widget,		int8_t, GtkWidget_size
  7552                              <1> 	NASMX_RESERVE current_pos,	uint32_t, 1
  7553                              <1> 	NASMX_RESERVE selection_start_pos,	uint32_t, 1
  7554                              <1> 	NASMX_RESERVE selection_end_pos,	uint32_t, 1
  7555                              <1> 	NASMX_RESERVE has_selection,	uint32_t, 1
  7556                              <1> ;.editable:		RESD 1
  7557                              <1> ;.visible:		RESD 1
  7558                              <1> 	NASMX_RESERVE clipboard_text,	uint32_t, 1
  7559                              <1> NASMX_ENDSTRUC
  7560                              <1> 
  7561                              <1> NASMX_STRUC GtkOldEditableClass
  7562                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  7563                              <1> 	NASMX_RESERVE activate,		uint32_t, 1
  7564                              <1> 	NASMX_RESERVE set_editable,	uint32_t, 1
  7565                              <1> 	NASMX_RESERVE move_cursor,	uint32_t, 1
  7566                              <1> 	NASMX_RESERVE move_word,	uint32_t, 1
  7567                              <1> 	NASMX_RESERVE move_page,	uint32_t, 1
  7568                              <1> 	NASMX_RESERVE move_to_row,	uint32_t, 1
  7569                              <1> 	NASMX_RESERVE move_to_column,	uint32_t, 1
  7570                              <1> 	NASMX_RESERVE kill_char,	uint32_t, 1
  7571                              <1> 	NASMX_RESERVE kill_word,	uint32_t, 1
  7572                              <1> 	NASMX_RESERVE kill_line,	uint32_t, 1
  7573                              <1> 	NASMX_RESERVE cut_clipboard,	uint32_t, 1
  7574                              <1> 	NASMX_RESERVE copy_clipboard,	uint32_t, 1
  7575                              <1> 	NASMX_RESERVE paste_clipboard,	uint32_t, 1
  7576                              <1> 	NASMX_RESERVE update_text,	uint32_t, 1
  7577                              <1> 	NASMX_RESERVE get_chars,	uint32_t, 1
  7578                              <1> 	NASMX_RESERVE set_selection,	uint32_t, 1
  7579                              <1> 	NASMX_RESERVE set_position,	uint32_t, 1
  7580                              <1> NASMX_ENDSTRUC
  7581                              <1> 
  7582                              <1> NASMX_STRUC GtkOptionMenu
  7583                              <1> 	NASMX_RESERVE button,		int8_t, GtkButton_size
  7584                              <1> 	NASMX_RESERVE menu,		uint32_t, 1
  7585                              <1> 	NASMX_RESERVE menu_item,	uint32_t, 1
  7586                              <1> 	NASMX_RESERVE width,		uint16_t, 1
  7587                              <1> 	NASMX_RESERVE height,		uint16_t, 1
  7588                              <1> NASMX_ENDSTRUC
  7589                              <1> 
  7590                              <1> NASMX_STRUC GtkOptionMenuClass
  7591                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkButtonClass_size
  7592                              <1> 	NASMX_RESERVE changed,		uint32_t, 1
  7593                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  7594                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  7595                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  7596                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  7597                              <1> NASMX_ENDSTRUC
  7598                              <1> 
  7599                              <1> NASMX_STRUC GtkPreview
  7600                              <1> 	NASMX_RESERVE widget,		int8_t, GtkWidget_size
  7601                              <1> 	NASMX_RESERVE buffer,		uint32_t, 1
  7602                              <1> 	NASMX_RESERVE buffer_width,	uint16_t, 1
  7603                              <1> 	NASMX_RESERVE buffer_height,	uint16_t, 1
  7604                              <1> 	NASMX_RESERVE bpp,		uint16_t, 1
  7605                              <1> 	NASMX_RESERVE rowstride,	uint16_t, 1
  7606                              <1> 	NASMX_RESERVE dither,		uint32_t, 1
  7607                              <1> 	NASMX_RESERVE type,		uint32_t, 1
  7608                              <1> ;.expand:		RESD 1	
  7609                              <1> NASMX_ENDSTRUC
  7610                              <1> 
  7611                              <1> NASMX_STRUC GtkPreviewInfo
  7612                              <1> 	NASMX_RESERVE lookup,		uint32_t, 1
  7613                              <1> 	NASMX_RESERVE gamma,		uint32_t, 1
  7614                              <1> NASMX_ENDSTRUC
  7615                              <1> 
  7616                              <1> NASMX_STRUC GtkPreviewClass
  7617                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkWidgetClass_size
  7618                              <1> 	NASMX_RESERVE info,		int8_t, GtkPreviewInfo_size
  7619                              <1> NASMX_ENDSTRUC
  7620                              <1> 
  7621                              <1> NASMX_STRUC GtkTipsQuery
  7622                              <1> 	NASMX_RESERVE label,		int8_t, GtkLabel_size
  7623                              <1> 	NASMX_RESERVE emit_always,	uint32_t, 1
  7624                              <1> ;.in_query:		RESD 1
  7625                              <1> 	NASMX_RESERVE label_inactive,	uint32_t, 1
  7626                              <1> 	NASMX_RESERVE label_no_tip,	uint32_t, 1
  7627                              <1> 	NASMX_RESERVE caller,		uint32_t, 1
  7628                              <1> 	NASMX_RESERVE last_crossed,	uint32_t, 1
  7629                              <1> 	NASMX_RESERVE query_cursor,	uint32_t, 1
  7630                              <1> NASMX_ENDSTRUC
  7631                              <1> 
  7632                              <1> NASMX_STRUC GtkTipsQueryClass
  7633                              <1> 	NASMX_RESERVE parent_class,	int8_t, GtkLabelClass_size
  7634                              <1> 	NASMX_RESERVE start_query,	uint32_t, 1
  7635                              <1> 	NASMX_RESERVE stop_query,	uint32_t, 1
  7636                              <1> 	NASMX_RESERVE widget_entered,	uint32_t, 1
  7637                              <1> 	NASMX_RESERVE widget_selected,	uint32_t, 1
  7638                              <1> 	NASMX_RESERVE _gtk_reserved1,	uint32_t, 1
  7639                              <1> 	NASMX_RESERVE _gtk_reserved2,	uint32_t, 1
  7640                              <1> 	NASMX_RESERVE _gtk_reserved3,	uint32_t, 1
  7641                              <1> 	NASMX_RESERVE _gtk_reserved4,	uint32_t, 1
  7642                              <1> NASMX_ENDSTRUC
  7643                              <1> 
  7644                              <1> 
  7645                              <1> ;;enum GUserDirectory
  7646                              <1> %define G_USER_DIRECTORY_PICTURES 	 4
  7647                              <1> %define G_USER_DIRECTORY_DESKTOP 	 0
  7648                              <1> %define G_USER_N_DIRECTORIES 	 8
  7649                              <1> %define G_USER_DIRECTORY_MUSIC 	 3
  7650                              <1> %define G_USER_DIRECTORY_PUBLIC_SHARE 	 5
  7651                              <1> %define G_USER_DIRECTORY_DOCUMENTS 	 1
  7652                              <1> %define G_USER_DIRECTORY_DOWNLOAD 	 2
  7653                              <1> %define G_USER_DIRECTORY_VIDEOS 	 7
  7654                              <1> %define G_USER_DIRECTORY_TEMPLATES 	 6
  7655                              <1> 
  7656                              <1> ;;enum GThreadError
  7657                              <1> %define G_THREAD_ERROR_AGAIN 	 0
  7658                              <1> 
  7659                              <1> ;;enum GThreadPriority
  7660                              <1> %define G_THREAD_PRIORITY_NORMAL 	 1
  7661                              <1> %define G_THREAD_PRIORITY_LOW 	 0
  7662                              <1> %define G_THREAD_PRIORITY_HIGH 	 2
  7663                              <1> %define G_THREAD_PRIORITY_URGENT 	 3
  7664                              <1> 
  7665                              <1> ;;enum GOnceStatus
  7666                              <1> %define G_ONCE_STATUS_READY 	 2
  7667                              <1> %define G_ONCE_STATUS_NOTCALLED 	 0
  7668                              <1> %define G_ONCE_STATUS_PROGRESS 	 1
  7669                              <1> 
  7670                              <1> ;;enum GBookmarkFileError
  7671                              <1> %define G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND 	 3
  7672                              <1> %define G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING 	 5
  7673                              <1> %define G_BOOKMARK_FILE_ERROR_INVALID_VALUE 	 1
  7674                              <1> %define G_BOOKMARK_FILE_ERROR_INVALID_URI 	 0
  7675                              <1> %define G_BOOKMARK_FILE_ERROR_READ 	 4
  7676                              <1> %define G_BOOKMARK_FILE_ERROR_WRITE 	 6
  7677                              <1> %define G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED 	 2
  7678                              <1> %define G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND 	 7
  7679                              <1> 
  7680                              <1> ;;enum GSliceConfig
  7681                              <1> %define G_SLICE_CONFIG_CHUNK_SIZES 	 3
  7682                              <1> %define G_SLICE_CONFIG_WORKING_SET_MSECS 	 1
  7683                              <1> %define G_SLICE_CONFIG_CONTENTION_COUNTER 	 4
  7684                              <1> %define G_SLICE_CONFIG_ALWAYS_MALLOC 	 1
  7685                              <1> %define G_SLICE_CONFIG_BYPASS_MAGAZINES 	 0
  7686                              <1> %define G_SLICE_CONFIG_COLOR_INCREMENT 	 2
  7687                              <1> 
  7688                              <1> ;;enum GChecksumType
  7689                              <1> %define G_CHECKSUM_SHA256 	 2
  7690                              <1> %define G_CHECKSUM_MD5 	 0
  7691                              <1> %define G_CHECKSUM_SHA1 	 1
  7692                              <1> 
  7693                              <1> ;;enum GConvertError
  7694                              <1> %define G_CONVERT_ERROR_ILLEGAL_SEQUENCE 	 1
  7695                              <1> %define G_CONVERT_ERROR_BAD_URI 	 4
  7696                              <1> %define G_CONVERT_ERROR_FAILED 	 2
  7697                              <1> %define G_CONVERT_ERROR_NO_CONVERSION 	 0
  7698                              <1> %define G_CONVERT_ERROR_PARTIAL_INPUT 	 3
  7699                              <1> %define G_CONVERT_ERROR_NOT_ABSOLUTE_PATH 	 5
  7700                              <1> 
  7701                              <1> ;;enum GDateDMY
  7702                              <1> %define G_DATE_YEAR 	 2
  7703                              <1> %define G_DATE_MONTH 	 1
  7704                              <1> %define G_DATE_DAY 	 0
  7705                              <1> 
  7706                              <1> ;;enum GDateWeekday
  7707                              <1> %define G_DATE_THURSDAY 	 4
  7708                              <1> %define G_DATE_SATURDAY 	 6
  7709                              <1> %define G_DATE_MONDAY 	 1
  7710                              <1> %define G_DATE_SUNDAY 	 7
  7711                              <1> %define G_DATE_WEDNESDAY 	 3
  7712                              <1> %define G_DATE_BAD_WEEKDAY 	 0
  7713                              <1> %define G_DATE_TUESDAY 	 2
  7714                              <1> %define G_DATE_FRIDAY 	 5
  7715                              <1> 
  7716                              <1> ;;enum GDateMonth
  7717                              <1> %define G_DATE_SEPTEMBER 	 9
  7718                              <1> %define G_DATE_DECEMBER 	 12
  7719                              <1> %define G_DATE_JUNE 	 6
  7720                              <1> %define G_DATE_OCTOBER 	 10
  7721                              <1> %define G_DATE_JULY 	 7
  7722                              <1> %define G_DATE_AUGUST 	 8
  7723                              <1> %define G_DATE_FEBRUARY 	 2
  7724                              <1> %define G_DATE_MAY 	 5
  7725                              <1> %define G_DATE_APRIL 	 4
  7726                              <1> %define G_DATE_JANUARY 	 1
  7727                              <1> %define G_DATE_MARCH 	 3
  7728                              <1> %define G_DATE_BAD_MONTH 	 0
  7729                              <1> %define G_DATE_NOVEMBER 	 11
  7730                              <1> 
  7731                              <1> ;;enum GTimeType
  7732                              <1> %define G_TIME_TYPE_UNIVERSAL 	 2
  7733                              <1> %define G_TIME_TYPE_STANDARD 	 0
  7734                              <1> %define G_TIME_TYPE_DAYLIGHT 	 1
  7735                              <1> 
  7736                              <1> ;;enum GFileError
  7737                              <1> %define G_FILE_ERROR_NOMEM 	 13
  7738                              <1> %define G_FILE_ERROR_ACCES 	 2
  7739                              <1> %define G_FILE_ERROR_NOSYS 	 23
  7740                              <1> %define G_FILE_ERROR_NOTDIR 	 5
  7741                              <1> %define G_FILE_ERROR_ISDIR 	 1
  7742                              <1> %define G_FILE_ERROR_NFILE 	 15
  7743                              <1> %define G_FILE_ERROR_BADF 	 16
  7744                              <1> %define G_FILE_ERROR_PIPE 	 18
  7745                              <1> %define G_FILE_ERROR_EXIST 	 0
  7746                              <1> %define G_FILE_ERROR_NAMETOOLONG 	 3
  7747                              <1> %define G_FILE_ERROR_ROFS 	 8
  7748                              <1> %define G_FILE_ERROR_NODEV 	 7
  7749                              <1> %define G_FILE_ERROR_INVAL 	 17
  7750                              <1> %define G_FILE_ERROR_FAULT 	 10
  7751                              <1> %define G_FILE_ERROR_FAILED 	 24
  7752                              <1> %define G_FILE_ERROR_NOSPC 	 12
  7753                              <1> %define G_FILE_ERROR_IO 	 21
  7754                              <1> %define G_FILE_ERROR_INTR 	 20
  7755                              <1> %define G_FILE_ERROR_LOOP 	 11
  7756                              <1> %define G_FILE_ERROR_PERM 	 22
  7757                              <1> %define G_FILE_ERROR_NXIO 	 6
  7758                              <1> %define G_FILE_ERROR_MFILE 	 14
  7759                              <1> %define G_FILE_ERROR_NOENT 	 4
  7760                              <1> %define G_FILE_ERROR_AGAIN 	 19
  7761                              <1> %define G_FILE_ERROR_TXTBSY 	 9
  7762                              <1> 
  7763                              <1> ;;enum GFileTest
  7764                              <1> %define G_FILE_TEST_IS_DIR 	 1 << 2
  7765                              <1> %define G_FILE_TEST_IS_REGULAR 	 1 << 0
  7766                              <1> %define G_FILE_TEST_IS_SYMLINK 	 1 << 1
  7767                              <1> %define G_FILE_TEST_EXISTS 	 1 << 4
  7768                              <1> %define G_FILE_TEST_IS_EXECUTABLE 	 1 << 3
  7769                              <1> 
  7770                              <1> ;;enum GHookFlagMask
  7771                              <1> %define G_HOOK_FLAG_MASK 	 0x0f
  7772                              <1> %define G_HOOK_FLAG_IN_CALL 	 1 << 1
  7773                              <1> %define G_HOOK_FLAG_ACTIVE 	 1 << 0
  7774                              <1> 
  7775                              <1> ;;enum GUnicodeType
  7776                              <1> %define G_UNICODE_OTHER_SYMBOL 	 26
  7777                              <1> %define G_UNICODE_ENCLOSING_MARK 	 11
  7778                              <1> %define G_UNICODE_OTHER_LETTER 	 7
  7779                              <1> %define G_UNICODE_CONTROL 	 0
  7780                              <1> %define G_UNICODE_OPEN_PUNCTUATION 	 22
  7781                              <1> %define G_UNICODE_TITLECASE_LETTER 	 8
  7782                              <1> %define G_UNICODE_FORMAT 	 1
  7783                              <1> %define G_UNICODE_UPPERCASE_LETTER 	 9
  7784                              <1> %define G_UNICODE_UNASSIGNED 	 2
  7785                              <1> %define G_UNICODE_LINE_SEPARATOR 	 27
  7786                              <1> %define G_UNICODE_SURROGATE 	 4
  7787                              <1> %define G_UNICODE_LETTER_NUMBER 	 14
  7788                              <1> %define G_UNICODE_MATH_SYMBOL 	 25
  7789                              <1> %define G_UNICODE_CURRENCY_SYMBOL 	 23
  7790                              <1> %define G_UNICODE_SPACE_SEPARATOR 	 29
  7791                              <1> %define G_UNICODE_FINAL_PUNCTUATION 	 19
  7792                              <1> %define G_UNICODE_CLOSE_PUNCTUATION 	 18
  7793                              <1> %define G_UNICODE_LOWERCASE_LETTER 	 5
  7794                              <1> %define G_UNICODE_COMBINING_MARK 	 10
  7795                              <1> %define G_UNICODE_CONNECT_PUNCTUATION 	 16
  7796                              <1> %define G_UNICODE_OTHER_NUMBER 	 15
  7797                              <1> %define G_UNICODE_PARAGRAPH_SEPARATOR 	 28
  7798                              <1> %define G_UNICODE_INITIAL_PUNCTUATION 	 20
  7799                              <1> %define G_UNICODE_NON_SPACING_MARK 	 12
  7800                              <1> %define G_UNICODE_MODIFIER_LETTER 	 6
  7801                              <1> %define G_UNICODE_OTHER_PUNCTUATION 	 21
  7802                              <1> %define G_UNICODE_DECIMAL_NUMBER 	 13
  7803                              <1> %define G_UNICODE_MODIFIER_SYMBOL 	 24
  7804                              <1> %define G_UNICODE_DASH_PUNCTUATION 	 17
  7805                              <1> %define G_UNICODE_PRIVATE_USE 	 3
  7806                              <1> 
  7807                              <1> ;;enum GUnicodeBreakType
  7808                              <1> %define G_UNICODE_BREAK_CONTINGENT 	 8
  7809                              <1> %define G_UNICODE_BREAK_HANGUL_T_JAMO 	 33
  7810                              <1> %define G_UNICODE_BREAK_HYPHEN 	 13
  7811                              <1> %define G_UNICODE_BREAK_INSEPARABLE 	 6
  7812                              <1> %define G_UNICODE_BREAK_COMPLEX_CONTEXT 	 26
  7813                              <1> %define G_UNICODE_BREAK_CLOSE_PARANTHESIS 	 36
  7814                              <1> %define G_UNICODE_BREAK_CLOSE_PUNCTUATION 	 16
  7815                              <1> %define G_UNICODE_BREAK_AFTER 	 10
  7816                              <1> %define G_UNICODE_BREAK_QUOTATION 	 17
  7817                              <1> %define G_UNICODE_BREAK_POSTFIX 	 25
  7818                              <1> %define G_UNICODE_BREAK_BEFORE 	 11
  7819                              <1> %define G_UNICODE_BREAK_BEFORE_AND_AFTER 	 12
  7820                              <1> %define G_UNICODE_BREAK_NUMERIC 	 20
  7821                              <1> %define G_UNICODE_BREAK_HANGUL_L_JAMO 	 31
  7822                              <1> %define G_UNICODE_BREAK_NON_BREAKING_GLUE 	 7
  7823                              <1> %define G_UNICODE_BREAK_MANDATORY 	 0
  7824                              <1> %define G_UNICODE_BREAK_OPEN_PUNCTUATION 	 15
  7825                              <1> %define G_UNICODE_BREAK_LINE_FEED 	 2
  7826                              <1> %define G_UNICODE_BREAK_WORD_JOINER 	 30
  7827                              <1> %define G_UNICODE_BREAK_AMBIGUOUS 	 27
  7828                              <1> %define G_UNICODE_BREAK_INFIX_SEPARATOR 	 21
  7829                              <1> %define G_UNICODE_BREAK_NEXT_LINE 	 29
  7830                              <1> %define G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE 	 35
  7831                              <1> %define G_UNICODE_BREAK_EXCLAMATION 	 18
  7832                              <1> %define G_UNICODE_BREAK_SPACE 	 9
  7833                              <1> %define G_UNICODE_BREAK_SYMBOL 	 22
  7834                              <1> %define G_UNICODE_BREAK_NON_STARTER 	 14
  7835                              <1> %define G_UNICODE_BREAK_IDEOGRAPHIC 	 19
  7836                              <1> %define G_UNICODE_BREAK_PREFIX 	 24
  7837                              <1> %define G_UNICODE_BREAK_HANGUL_V_JAMO 	 32
  7838                              <1> %define G_UNICODE_BREAK_HANGUL_LV_SYLLABLE 	 34
  7839                              <1> %define G_UNICODE_BREAK_ZERO_WIDTH_SPACE 	 5
  7840                              <1> %define G_UNICODE_BREAK_ALPHABETIC 	 23
  7841                              <1> %define G_UNICODE_BREAK_CARRIAGE_RETURN 	 1
  7842                              <1> %define G_UNICODE_BREAK_COMBINING_MARK 	 3
  7843                              <1> %define G_UNICODE_BREAK_SURROGATE 	 4
  7844                              <1> %define G_UNICODE_BREAK_UNKNOWN 	 28
  7845                              <1> 
  7846                              <1> ;;enum GUnicodeScript
  7847                              <1> %define G_UNICODE_SCRIPT_KAYAH_LI 	 66
  7848                              <1> %define G_UNICODE_SCRIPT_GEORGIAN 	 11
  7849                              <1> %define G_UNICODE_SCRIPT_MEETEI_MAYEK 	 86
  7850                              <1> %define G_UNICODE_SCRIPT_HANUNOO 	 42
  7851                              <1> %define G_UNICODE_SCRIPT_KHMER 	 22
  7852                              <1> %define G_UNICODE_SCRIPT_SHAVIAN 	 49
  7853                              <1> %define G_UNICODE_SCRIPT_HIRAGANA 	 19
  7854                              <1> %define G_UNICODE_SCRIPT_ARMENIAN 	 2
  7855                              <1> %define G_UNICODE_SCRIPT_GREEK 	 13
  7856                              <1> %define G_UNICODE_SCRIPT_KANNADA 	 20
  7857                              <1> %define G_UNICODE_SCRIPT_BAMUM 	 78
  7858                              <1> %define G_UNICODE_SCRIPT_BOPOMOFO 	 4
  7859                              <1> %define G_UNICODE_SCRIPT_OLD_TURKIC 	 88
  7860                              <1> %define G_UNICODE_SCRIPT_TAI_THAM 	 90
  7861                              <1> %define G_UNICODE_SCRIPT_REJANG 	 68
  7862                              <1> %define G_UNICODE_SCRIPT_BRAHMI 	 93
  7863                              <1> %define G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI 	 81
  7864                              <1> %define G_UNICODE_SCRIPT_OSMANYA 	 48
  7865                              <1> %define G_UNICODE_SCRIPT_LATIN 	 24
  7866                              <1> %define G_UNICODE_SCRIPT_PHAGS_PA 	 64
  7867                              <1> %define G_UNICODE_SCRIPT_CYPRIOT 	 46
  7868                              <1> %define G_UNICODE_SCRIPT_OLD_PERSIAN 	 58
  7869                              <1> %define G_UNICODE_SCRIPT_KHAROSHTHI 	 59
  7870                              <1> %define G_UNICODE_SCRIPT_BRAILLE 	 45
  7871                              <1> %define G_UNICODE_SCRIPT_CARIAN 	 74
  7872                              <1> %define G_UNICODE_SCRIPT_MYANMAR 	 27
  7873                              <1> %define G_UNICODE_SCRIPT_HANGUL 	 17
  7874                              <1> %define G_UNICODE_SCRIPT_LEPCHA 	 67
  7875                              <1> %define G_UNICODE_SCRIPT_NKO 	 65
  7876                              <1> %define G_UNICODE_SCRIPT_TAGBANWA 	 44
  7877                              <1> %define G_UNICODE_SCRIPT_LYCIAN 	 75
  7878                              <1> %define G_UNICODE_SCRIPT_LIMBU 	 47
  7879                              <1> %define G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL 	 39
  7880                              <1> %define G_UNICODE_SCRIPT_CYRILLIC 	 7
  7881                              <1> %define G_UNICODE_SCRIPT_INVALID_CODE 	 -1
  7882                              <1> %define G_UNICODE_SCRIPT_SUNDANESE 	 69
  7883                              <1> %define G_UNICODE_SCRIPT_ETHIOPIC 	 10
  7884                              <1> %define G_UNICODE_SCRIPT_MALAYALAM 	 25
  7885                              <1> %define G_UNICODE_SCRIPT_TELUGU 	 35
  7886                              <1> %define G_UNICODE_SCRIPT_COPTIC 	 6
  7887                              <1> %define G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN 	 87
  7888                              <1> %define G_UNICODE_SCRIPT_OL_CHIKI 	 72
  7889                              <1> %define G_UNICODE_SCRIPT_CHAM 	 71
  7890                              <1> %define G_UNICODE_SCRIPT_UNKNOWN 	 60
  7891                              <1> %define G_UNICODE_SCRIPT_KATAKANA 	 21
  7892                              <1> %define G_UNICODE_SCRIPT_VAI 	 73
  7893                              <1> %define G_UNICODE_SCRIPT_SYLOTI_NAGRI 	 57
  7894                              <1> %define G_UNICODE_SCRIPT_BUGINESE 	 54
  7895                              <1> %define G_UNICODE_SCRIPT_ARABIC 	 1
  7896                              <1> %define G_UNICODE_SCRIPT_TAI_VIET 	 91
  7897                              <1> %define G_UNICODE_SCRIPT_YI 	 40
  7898                              <1> %define G_UNICODE_SCRIPT_BENGALI 	 3
  7899                              <1> %define G_UNICODE_SCRIPT_SINHALA 	 32
  7900                              <1> %define G_UNICODE_SCRIPT_LINEAR_B 	 50
  7901                              <1> %define G_UNICODE_SCRIPT_LAO 	 23
  7902                              <1> %define G_UNICODE_SCRIPT_MANDAIC 	 94
  7903                              <1> %define G_UNICODE_SCRIPT_HEBREW 	 18
  7904                              <1> %define G_UNICODE_SCRIPT_THAI 	 37
  7905                              <1> %define G_UNICODE_SCRIPT_TAI_LE 	 51
  7906                              <1> %define G_UNICODE_SCRIPT_OLD_ITALIC 	 29
  7907                              <1> %define G_UNICODE_SCRIPT_BALINESE 	 61
  7908                              <1> %define G_UNICODE_SCRIPT_GLAGOLITIC 	 55
  7909                              <1> %define G_UNICODE_SCRIPT_CHEROKEE 	 5
  7910                              <1> %define G_UNICODE_SCRIPT_COMMON 	 0
  7911                              <1> %define G_UNICODE_SCRIPT_BUHID 	 43
  7912                              <1> %define G_UNICODE_SCRIPT_DESERET 	 8
  7913                              <1> %define G_UNICODE_SCRIPT_TAMIL 	 34
  7914                              <1> %define G_UNICODE_SCRIPT_THAANA 	 36
  7915                              <1> %define G_UNICODE_SCRIPT_SYRIAC 	 33
  7916                              <1> %define G_UNICODE_SCRIPT_AVESTAN 	 77
  7917                              <1> %define G_UNICODE_SCRIPT_HAN 	 16
  7918                              <1> %define G_UNICODE_SCRIPT_RUNIC 	 31
  7919                              <1> %define G_UNICODE_SCRIPT_LISU 	 85
  7920                              <1> %define G_UNICODE_SCRIPT_MONGOLIAN 	 26
  7921                              <1> %define G_UNICODE_SCRIPT_TIBETAN 	 38
  7922                              <1> %define G_UNICODE_SCRIPT_SAMARITAN 	 89
  7923                              <1> %define G_UNICODE_SCRIPT_GURMUKHI 	 15
  7924                              <1> %define G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS 	 79
  7925                              <1> %define G_UNICODE_SCRIPT_DEVANAGARI 	 9
  7926                              <1> %define G_UNICODE_SCRIPT_GUJARATI 	 14
  7927                              <1> %define G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN 	 82
  7928                              <1> %define G_UNICODE_SCRIPT_SAURASHTRA 	 70
  7929                              <1> %define G_UNICODE_SCRIPT_TAGALOG 	 41
  7930                              <1> %define G_UNICODE_SCRIPT_CUNEIFORM 	 62
  7931                              <1> %define G_UNICODE_SCRIPT_NEW_TAI_LUE 	 53
  7932                              <1> %define G_UNICODE_SCRIPT_KAITHI 	 84
  7933                              <1> %define G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC 	 80
  7934                              <1> %define G_UNICODE_SCRIPT_JAVANESE 	 83
  7935                              <1> %define G_UNICODE_SCRIPT_UGARITIC 	 52
  7936                              <1> %define G_UNICODE_SCRIPT_LYDIAN 	 76
  7937                              <1> %define G_UNICODE_SCRIPT_OGHAM 	 28
  7938                              <1> %define G_UNICODE_SCRIPT_INHERITED 	 0
  7939                              <1> %define G_UNICODE_SCRIPT_TIFINAGH 	 56
  7940                              <1> %define G_UNICODE_SCRIPT_BATAK 	 92
  7941                              <1> %define G_UNICODE_SCRIPT_PHOENICIAN 	 63
  7942                              <1> %define G_UNICODE_SCRIPT_ORIYA 	 30
  7943                              <1> %define G_UNICODE_SCRIPT_GOTHIC 	 12
  7944                              <1> 
  7945                              <1> ;;enum GNormalizeMode
  7946                              <1> %define G_NORMALIZE_DEFAULT 	 0
  7947                              <1> %define G_NORMALIZE_NFD 	 G_NORMALIZE_DEFAULT
  7948                              <1> %define G_NORMALIZE_ALL_COMPOSE 	 3
  7949                              <1> %define G_NORMALIZE_NFKD 	 G_NORMALIZE_ALL
  7950                              <1> %define G_NORMALIZE_DEFAULT_COMPOSE 	 1
  7951                              <1> %define G_NORMALIZE_ALL 	 2
  7952                              <1> %define G_NORMALIZE_NFC 	 G_NORMALIZE_DEFAULT_COMPOSE
  7953                              <1> %define G_NORMALIZE_NFKC 	 G_NORMALIZE_ALL_COMPOSE
  7954                              <1> 
  7955                              <1> ;;enum GIOError
  7956                              <1> %define G_IO_ERROR_INVAL 	 2
  7957                              <1> %define G_IO_ERROR_UNKNOWN 	 3
  7958                              <1> %define G_IO_ERROR_AGAIN 	 1
  7959                              <1> %define G_IO_ERROR_NONE 	 0
  7960                              <1> 
  7961                              <1> ;;enum GIOChannelError
  7962                              <1> %define G_IO_CHANNEL_ERROR_FBIG 	 0
  7963                              <1> %define G_IO_CHANNEL_ERROR_OVERFLOW 	 6
  7964                              <1> %define G_IO_CHANNEL_ERROR_NXIO 	 5
  7965                              <1> %define G_IO_CHANNEL_ERROR_PIPE 	 7
  7966                              <1> %define G_IO_CHANNEL_ERROR_IO 	 2
  7967                              <1> %define G_IO_CHANNEL_ERROR_INVAL 	 1
  7968                              <1> %define G_IO_CHANNEL_ERROR_NOSPC 	 4
  7969                              <1> %define G_IO_CHANNEL_ERROR_ISDIR 	 3
  7970                              <1> %define G_IO_CHANNEL_ERROR_FAILED 	 8
  7971                              <1> 
  7972                              <1> ;;enum GIOStatus
  7973                              <1> %define G_IO_STATUS_EOF 	 2
  7974                              <1> %define G_IO_STATUS_ERROR 	 0
  7975                              <1> %define G_IO_STATUS_NORMAL 	 1
  7976                              <1> %define G_IO_STATUS_AGAIN 	 3
  7977                              <1> 
  7978                              <1> ;;enum GSeekType
  7979                              <1> %define G_SEEK_END 	 2
  7980                              <1> %define G_SEEK_CUR 	 0
  7981                              <1> %define G_SEEK_SET 	 1
  7982                              <1> 
  7983                              <1> ;;enum GIOCondition
  7984                              <1> %define G_IO_ERR 	 8
  7985                              <1> %define G_IO_PRI 	 2
  7986                              <1> %define G_IO_HUP 	 16
  7987                              <1> %define G_IO_IN 	 1
  7988                              <1> %define G_IO_OUT 	 4
  7989                              <1> %define G_IO_NVAL 	 32
  7990                              <1> 
  7991                              <1> ;;enum GIOFlags
  7992                              <1> %define G_IO_FLAG_GET_MASK 	 G_IO_FLAG_MASK
  7993                              <1> %define G_IO_FLAG_IS_WRITEABLE 	 1 << 3
  7994                              <1> %define G_IO_FLAG_MASK 	 (1 << 5) - 1
  7995                              <1> %define G_IO_FLAG_NONBLOCK 	 1 << 1
  7996                              <1> %define G_IO_FLAG_APPEND 	 1 << 0
  7997                              <1> %define G_IO_FLAG_SET_MASK 	 G_IO_FLAG_APPEND | G_IO_FLAG_NONBLOCK
  7998                              <1> %define G_IO_FLAG_IS_SEEKABLE 	 1 << 4
  7999                              <1> %define G_IO_FLAG_IS_READABLE 	 1 << 2
  8000                              <1> 
  8001                              <1> ;;enum GKeyFileError
  8002                              <1> %define G_KEY_FILE_ERROR_GROUP_NOT_FOUND 	 4
  8003                              <1> %define G_KEY_FILE_ERROR_NOT_FOUND 	 2
  8004                              <1> %define G_KEY_FILE_ERROR_UNKNOWN_ENCODING 	 0
  8005                              <1> %define G_KEY_FILE_ERROR_KEY_NOT_FOUND 	 3
  8006                              <1> %define G_KEY_FILE_ERROR_PARSE 	 1
  8007                              <1> %define G_KEY_FILE_ERROR_INVALID_VALUE 	 5
  8008                              <1> 
  8009                              <1> ;;enum GKeyFileFlags
  8010                              <1> %define G_KEY_FILE_KEEP_COMMENTS 	 1 << 0
  8011                              <1> %define G_KEY_FILE_NONE 	 0
  8012                              <1> %define G_KEY_FILE_KEEP_TRANSLATIONS 	 1 << 1
  8013                              <1> 
  8014                              <1> ;;enum GMarkupError
  8015                              <1> %define G_MARKUP_ERROR_EMPTY 	 1
  8016                              <1> %define G_MARKUP_ERROR_MISSING_ATTRIBUTE 	 6
  8017                              <1> %define G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE 	 4
  8018                              <1> %define G_MARKUP_ERROR_UNKNOWN_ELEMENT 	 3
  8019                              <1> %define G_MARKUP_ERROR_BAD_UTF8 	 0
  8020                              <1> %define G_MARKUP_ERROR_INVALID_CONTENT 	 5
  8021                              <1> %define G_MARKUP_ERROR_PARSE 	 2
  8022                              <1> 
  8023                              <1> ;;enum GMarkupParseFlags
  8024                              <1> %define G_MARKUP_PREFIX_ERROR_POSITION 	 1 << 2
  8025                              <1> %define G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG 	 1 << 0
  8026                              <1> %define G_MARKUP_TREAT_CDATA_AS_TEXT 	 1 << 1
  8027                              <1> 
  8028                              <1> ;;enum GMarkupCollectType
  8029                              <1> %define G_MARKUP_COLLECT_INVALID 	 0
  8030                              <1> %define G_MARKUP_COLLECT_STRING 	 1
  8031                              <1> %define G_MARKUP_COLLECT_BOOLEAN 	 3
  8032                              <1> %define G_MARKUP_COLLECT_STRDUP 	 2
  8033                              <1> %define G_MARKUP_COLLECT_OPTIONAL 	 (1 << 16)
  8034                              <1> %define G_MARKUP_COLLECT_TRISTATE 	 4
  8035                              <1> 
  8036                              <1> ;;enum GLogLevelFlags
  8037                              <1> %define G_LOG_LEVEL_ERROR 	 1 << 2
  8038                              <1> %define G_LOG_LEVEL_DEBUG 	 1 << 7
  8039                              <1> %define G_LOG_LEVEL_CRITICAL 	 1 << 3
  8040                              <1> %define G_LOG_LEVEL_MESSAGE 	 1 << 5
  8041                              <1> %define G_LOG_LEVEL_WARNING 	 1 << 4
  8042                              <1> %define G_LOG_LEVEL_MASK 	 ~(G_LOG_FLAG_RECURSION | G_LOG_FLAG_FATAL)
  8043                              <1> %define G_LOG_LEVEL_INFO 	 1 << 6
  8044                              <1> %define G_LOG_FLAG_FATAL 	 1 << 1
  8045                              <1> %define G_LOG_FLAG_RECURSION 	 1 << 0
  8046                              <1> 
  8047                              <1> ;;enum GTraverseFlags
  8048                              <1> %define G_TRAVERSE_NON_LEAVES 	 1 << 1
  8049                              <1> %define G_TRAVERSE_NON_LEAFS 	 G_TRAVERSE_NON_LEAVES
  8050                              <1> %define G_TRAVERSE_MASK 	 0x03
  8051                              <1> %define G_TRAVERSE_LEAFS 	 G_TRAVERSE_LEAVES
  8052                              <1> %define G_TRAVERSE_LEAVES 	 1 << 0
  8053                              <1> %define G_TRAVERSE_ALL 	 G_TRAVERSE_LEAVES | G_TRAVERSE_NON_LEAVES
  8054                              <1> 
  8055                              <1> ;;enum GTraverseType
  8056                              <1> %define G_POST_ORDER 	 2
  8057                              <1> %define G_LEVEL_ORDER 	 3
  8058                              <1> %define G_IN_ORDER 	 0
  8059                              <1> %define G_PRE_ORDER 	 1
  8060                              <1> 
  8061                              <1> ;;enum GOptionFlags
  8062                              <1> %define G_OPTION_FLAG_REVERSE 	 1 << 2
  8063                              <1> %define G_OPTION_FLAG_NO_ARG 	 1 << 3
  8064                              <1> %define G_OPTION_FLAG_IN_MAIN 	 1 << 1
  8065                              <1> %define G_OPTION_FLAG_OPTIONAL_ARG 	 1 << 5
  8066                              <1> %define G_OPTION_FLAG_FILENAME 	 1 << 4
  8067                              <1> %define G_OPTION_FLAG_NOALIAS 	 1 << 6
  8068                              <1> %define G_OPTION_FLAG_HIDDEN 	 1 << 0
  8069                              <1> 
  8070                              <1> ;;enum GOptionArg
  8071                              <1> %define G_OPTION_ARG_DOUBLE 	 7
  8072                              <1> %define G_OPTION_ARG_STRING 	 1
  8073                              <1> %define G_OPTION_ARG_INT 	 2
  8074                              <1> %define G_OPTION_ARG_CALLBACK 	 3
  8075                              <1> %define G_OPTION_ARG_STRING_ARRAY 	 5
  8076                              <1> %define G_OPTION_ARG_NONE 	 0
  8077                              <1> %define G_OPTION_ARG_FILENAME 	 4
  8078                              <1> %define G_OPTION_ARG_INT64 	 8
  8079                              <1> %define G_OPTION_ARG_FILENAME_ARRAY 	 6
  8080                              <1> 
  8081                              <1> ;;enum GOptionError
  8082                              <1> %define G_OPTION_ERROR_UNKNOWN_OPTION 	 0
  8083                              <1> %define G_OPTION_ERROR_FAILED 	 2
  8084                              <1> %define G_OPTION_ERROR_BAD_VALUE 	 1
  8085                              <1> 
  8086                              <1> ;;enum GRegexError
  8087                              <1> %define G_REGEX_ERROR_MATCH 	 3
  8088                              <1> %define G_REGEX_ERROR_MEMORY_ERROR 	 121
  8089                              <1> %define G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR 	 142
  8090                              <1> %define G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND 	 136
  8091                              <1> %define G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS 	 107
  8092                              <1> %define G_REGEX_ERROR_QUANTIFIER_TOO_BIG 	 105
  8093                              <1> %define G_REGEX_ERROR_OPTIMIZE 	 1
  8094                              <1> %define G_REGEX_ERROR_MALFORMED_PROPERTY 	 146
  8095                              <1> %define G_REGEX_ERROR_EXPRESSION_TOO_LARGE 	 120
  8096                              <1> %define G_REGEX_ERROR_NOTHING_TO_REPEAT 	 109
  8097                              <1> %define G_REGEX_ERROR_TOO_MANY_SUBPATTERNS 	 149
  8098                              <1> %define G_REGEX_ERROR_MALFORMED_CONDITION 	 126
  8099                              <1> %define G_REGEX_ERROR_STRAY_BACKSLASH 	 101
  8100                              <1> %define G_REGEX_ERROR_ASSERTION_EXPECTED 	 128
  8101                              <1> %define G_REGEX_ERROR_UNRECOGNIZED_CHARACTER 	 112
  8102                              <1> %define G_REGEX_ERROR_MISSING_CONTROL_CHAR 	 102
  8103                              <1> %define G_REGEX_ERROR_REPLACE 	 2
  8104                              <1> %define G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS 	 156
  8105                              <1> %define G_REGEX_ERROR_UNMATCHED_PARENTHESIS 	 114
  8106                              <1> %define G_REGEX_ERROR_DEFINE_REPETION 	 155
  8107                              <1> %define G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME 	 130
  8108                              <1> %define G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES 	 127
  8109                              <1> %define G_REGEX_ERROR_INVALID_CONDITION 	 135
  8110                              <1> %define G_REGEX_ERROR_MISSING_BACK_REFERENCE 	 157
  8111                              <1> %define G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED 	 131
  8112                              <1> %define G_REGEX_ERROR_UNKNOWN_PROPERTY 	 147
  8113                              <1> %define G_REGEX_ERROR_INFINITE_LOOP 	 140
  8114                              <1> %define G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG 	 148
  8115                              <1> %define G_REGEX_ERROR_INTERNAL 	 4
  8116                              <1> %define G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND 	 125
  8117                              <1> %define G_REGEX_ERROR_UNRECOGNIZED_ESCAPE 	 103
  8118                              <1> %define G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME 	 143
  8119                              <1> %define G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS 	 113
  8120                              <1> %define G_REGEX_ERROR_RANGE_OUT_OF_ORDER 	 108
  8121                              <1> %define G_REGEX_ERROR_UNTERMINATED_COMMENT 	 118
  8122                              <1> %define G_REGEX_ERROR_INVALID_OCTAL_VALUE 	 151
  8123                              <1> %define G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE 	 154
  8124                              <1> %define G_REGEX_ERROR_HEX_CODE_TOO_LARGE 	 134
  8125                              <1> %define G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS 	 106
  8126                              <1> %define G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER 	 104
  8127                              <1> %define G_REGEX_ERROR_COMPILE 	 0
  8128                              <1> %define G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE 	 115
  8129                              <1> 
  8130                              <1> ;;enum GRegexCompileFlags
  8131                              <1> %define G_REGEX_NO_AUTO_CAPTURE 	 1 << 12
  8132                              <1> %define G_REGEX_NEWLINE_CR 	 1 << 20
  8133                              <1> %define G_REGEX_ANCHORED 	 1 << 4
  8134                              <1> %define G_REGEX_DUPNAMES 	 1 << 19
  8135                              <1> %define G_REGEX_DOLLAR_ENDONLY 	 1 << 5
  8136                              <1> %define G_REGEX_EXTENDED 	 1 << 3
  8137                              <1> %define G_REGEX_UNGREEDY 	 1 << 9
  8138                              <1> %define G_REGEX_OPTIMIZE 	 1 << 13
  8139                              <1> %define G_REGEX_DOTALL 	 1 << 2
  8140                              <1> %define G_REGEX_NEWLINE_CRLF 	 G_REGEX_NEWLINE_CR | G_REGEX_NEWLINE_LF
  8141                              <1> %define G_REGEX_RAW 	 1 << 11
  8142                              <1> %define G_REGEX_NEWLINE_LF 	 1 << 21
  8143                              <1> %define G_REGEX_MULTILINE 	 1 << 1
  8144                              <1> %define G_REGEX_CASELESS 	 1 << 0
  8145                              <1> 
  8146                              <1> ;;enum GRegexMatchFlags
  8147                              <1> %define G_REGEX_MATCH_NOTBOL 	 1 << 7
  8148                              <1> %define G_REGEX_MATCH_ANCHORED 	 1 << 4
  8149                              <1> %define G_REGEX_MATCH_NEWLINE_CRLF 	 G_REGEX_MATCH_NEWLINE_CR | G_REGEX_MATCH_NEWLINE_LF
  8150                              <1> %define G_REGEX_MATCH_NOTEMPTY 	 1 << 10
  8151                              <1> %define G_REGEX_MATCH_NEWLINE_CR 	 1 << 20
  8152                              <1> %define G_REGEX_MATCH_NEWLINE_LF 	 1 << 21
  8153                              <1> %define G_REGEX_MATCH_PARTIAL 	 1 << 15
  8154                              <1> %define G_REGEX_MATCH_NOTEOL 	 1 << 8
  8155                              <1> %define G_REGEX_MATCH_NEWLINE_ANY 	 1 << 22
  8156                              <1> 
  8157                              <1> ;;enum GErrorType
  8158                              <1> %define G_ERR_DIGIT_RADIX 	 5
  8159                              <1> %define G_ERR_FLOAT_MALFORMED 	 7
  8160                              <1> %define G_ERR_UNEXP_EOF_IN_COMMENT 	 3
  8161                              <1> %define G_ERR_NON_DIGIT_IN_CONST 	 4
  8162                              <1> %define G_ERR_FLOAT_RADIX 	 6
  8163                              <1> %define G_ERR_UNEXP_EOF 	 1
  8164                              <1> %define G_ERR_UNEXP_EOF_IN_STRING 	 2
  8165                              <1> %define G_ERR_UNKNOWN 	 0
  8166                              <1> 
  8167                              <1> ;;enum GTokenType
  8168                              <1> %define G_TOKEN_COMMENT_SINGLE 	 268
  8169                              <1> %define G_TOKEN_INT 	 261
  8170                              <1> %define G_TOKEN_BINARY 	 259
  8171                              <1> %define G_TOKEN_OCTAL 	 260
  8172                              <1> %define G_TOKEN_COMMA 	 ','
  8173                              <1> %define G_TOKEN_RIGHT_CURLY 	 '}'
  8174                              <1> %define G_TOKEN_RIGHT_BRACE 	 ']'
  8175                              <1> %define G_TOKEN_LAST 	 270
  8176                              <1> %define G_TOKEN_COMMENT_MULTI 	 269
  8177                              <1> %define G_TOKEN_STRING 	 264
  8178                              <1> %define G_TOKEN_HEX 	 262
  8179                              <1> %define G_TOKEN_RIGHT_PAREN 	 ')'
  8180                              <1> %define G_TOKEN_IDENTIFIER 	 266
  8181                              <1> %define G_TOKEN_EQUAL_SIGN 	 '='
  8182                              <1> %define G_TOKEN_ERROR 	 257
  8183                              <1> %define G_TOKEN_SYMBOL 	 265
  8184                              <1> %define G_TOKEN_LEFT_CURLY 	 ''
  8185                              <1> %define G_TOKEN_NONE 	 256
  8186                              <1> %define G_TOKEN_FLOAT 	 263
  8187                              <1> %define G_TOKEN_CHAR 	 258
  8188                              <1> %define G_TOKEN_IDENTIFIER_NULL 	 267
  8189                              <1> %define G_TOKEN_LEFT_PAREN 	 '('
  8190                              <1> %define G_TOKEN_LEFT_BRACE 	 '['
  8191                              <1> %define G_TOKEN_EOF 	 0
  8192                              <1> 
  8193                              <1> ;;enum GShellError
  8194                              <1> %define G_SHELL_ERROR_FAILED 	 2
  8195                              <1> %define G_SHELL_ERROR_BAD_QUOTING 	 0
  8196                              <1> %define G_SHELL_ERROR_EMPTY_STRING 	 1
  8197                              <1> 
  8198                              <1> ;;enum GSpawnError
  8199                              <1> %define G_SPAWN_ERROR_READ 	 1
  8200                              <1> %define G_SPAWN_ERROR_MFILE 	 15
  8201                              <1> %define G_SPAWN_ERROR_NFILE 	 14
  8202                              <1> %define G_SPAWN_ERROR_INVAL 	 16
  8203                              <1> %define G_SPAWN_ERROR_FORK 	 0
  8204                              <1> %define G_SPAWN_ERROR_IO 	 13
  8205                              <1> %define G_SPAWN_ERROR_NOTDIR 	 10
  8206                              <1> %define G_SPAWN_ERROR_FAILED 	 19
  8207                              <1> %define G_SPAWN_ERROR_NOEXEC 	 6
  8208                              <1> %define G_SPAWN_ERROR_NOENT 	 8
  8209                              <1> %define G_SPAWN_ERROR_PERM 	 4
  8210                              <1> %define G_SPAWN_ERROR_NAMETOOLONG 	 7
  8211                              <1> %define G_SPAWN_ERROR_ACCES 	 3
  8212                              <1> %define G_SPAWN_ERROR_NOMEM 	 9
  8213                              <1> %define G_SPAWN_ERROR_CHDIR 	 2
  8214                              <1> %define G_SPAWN_ERROR_TXTBUSY 	 12
  8215                              <1> %define G_SPAWN_ERROR_2BIG 	 5
  8216                              <1> %define G_SPAWN_ERROR_LOOP 	 11
  8217                              <1> %define G_SPAWN_ERROR_LIBBAD 	 18
  8218                              <1> %define G_SPAWN_ERROR_ISDIR 	 17
  8219                              <1> 
  8220                              <1> ;;enum GSpawnFlags
  8221                              <1> %define G_SPAWN_LEAVE_DESCRIPTORS_OPEN 	 1 << 0
  8222                              <1> %define G_SPAWN_DO_NOT_REAP_CHILD 	 1 << 1
  8223                              <1> %define G_SPAWN_SEARCH_PATH 	 1 << 2
  8224                              <1> %define G_SPAWN_FILE_AND_ARGV_ZERO 	 1 << 6
  8225                              <1> %define G_SPAWN_CHILD_INHERITS_STDIN 	 1 << 5
  8226                              <1> %define G_SPAWN_STDERR_TO_DEV_NULL 	 1 << 4
  8227                              <1> %define G_SPAWN_STDOUT_TO_DEV_NULL 	 1 << 3
  8228                              <1> 
  8229                              <1> ;;enum GAsciiType
  8230                              <1> %define G_ASCII_UPPER 	 1 << 9
  8231                              <1> %define G_ASCII_DIGIT 	 1 << 3
  8232                              <1> %define G_ASCII_CNTRL 	 1 << 2
  8233                              <1> %define G_ASCII_ALNUM 	 1 << 0
  8234                              <1> %define G_ASCII_PUNCT 	 1 << 7
  8235                              <1> %define G_ASCII_XDIGIT 	 1 << 10
  8236                              <1> %define G_ASCII_GRAPH 	 1 << 4
  8237                              <1> %define G_ASCII_PRINT 	 1 << 6
  8238                              <1> %define G_ASCII_SPACE 	 1 << 8
  8239                              <1> %define G_ASCII_LOWER 	 1 << 5
  8240                              <1> %define G_ASCII_ALPHA 	 1 << 1
  8241                              <1> 
  8242                              <1> ;;enum GTestTrapFlags
  8243                              <1> %define G_TEST_TRAP_SILENCE_STDOUT 	 1 << 7
  8244                              <1> %define G_TEST_TRAP_INHERIT_STDIN 	 1 << 9
  8245                              <1> %define G_TEST_TRAP_SILENCE_STDERR 	 1 << 8
  8246                              <1> 
  8247                              <1> ;;enum GTestLogType
  8248                              <1> %define G_TEST_LOG_STOP_CASE 	 6
  8249                              <1> %define G_TEST_LOG_START_CASE 	 5
  8250                              <1> %define G_TEST_LOG_MESSAGE 	 9
  8251                              <1> %define G_TEST_LOG_SKIP_CASE 	 4
  8252                              <1> %define G_TEST_LOG_MIN_RESULT 	 7
  8253                              <1> %define G_TEST_LOG_ERROR 	 1
  8254                              <1> %define G_TEST_LOG_LIST_CASE 	 3
  8255                              <1> %define G_TEST_LOG_NONE 	 0
  8256                              <1> %define G_TEST_LOG_MAX_RESULT 	 8
  8257                              <1> %define G_TEST_LOG_START_BINARY 	 2
  8258                              <1> 
  8259                              <1> ;;enum GVariantClass
  8260                              <1> %define G_VARIANT_CLASS_MAYBE 	 'm'
  8261                              <1> %define G_VARIANT_CLASS_BOOLEAN 	 'b'
  8262                              <1> %define G_VARIANT_CLASS_VARIANT 	 'v'
  8263                              <1> %define G_VARIANT_CLASS_BYTE 	 'y'
  8264                              <1> %define G_VARIANT_CLASS_HANDLE 	 'h'
  8265                              <1> %define G_VARIANT_CLASS_TUPLE 	 '('
  8266                              <1> %define G_VARIANT_CLASS_UINT32 	 'u'
  8267                              <1> %define G_VARIANT_CLASS_UINT64 	 't'
  8268                              <1> %define G_VARIANT_CLASS_INT64 	 'x'
  8269                              <1> %define G_VARIANT_CLASS_ARRAY 	 'a'
  8270                              <1> %define G_VARIANT_CLASS_UINT16 	 'q'
  8271                              <1> %define G_VARIANT_CLASS_STRING 	 's'
  8272                              <1> %define G_VARIANT_CLASS_INT16 	 'n'
  8273                              <1> %define G_VARIANT_CLASS_SIGNATURE 	 'g'
  8274                              <1> %define G_VARIANT_CLASS_OBJECT_PATH 	 'o'
  8275                              <1> %define G_VARIANT_CLASS_DOUBLE 	 'd'
  8276                              <1> %define G_VARIANT_CLASS_INT32 	 'i'
  8277                              <1> %define G_VARIANT_CLASS_DICT_ENTRY 	 ''
  8278                              <1> 
  8279                              <1> ;;enum GVariantParseError
  8280                              <1> %define G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE 	 2
  8281                              <1> %define G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH 	 7
  8282                              <1> %define G_VARIANT_PARSE_ERROR_VALUE_EXPECTED 	 17
  8283                              <1> %define G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE 	 11
  8284                              <1> %define G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE 	 8
  8285                              <1> %define G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING 	 9
  8286                              <1> %define G_VARIANT_PARSE_ERROR_TYPE_ERROR 	 13
  8287                              <1> %define G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE 	 10
  8288                              <1> %define G_VARIANT_PARSE_ERROR_INVALID_CHARACTER 	 5
  8289                              <1> %define G_VARIANT_PARSE_ERROR_FAILED 	 0
  8290                              <1> %define G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED 	 3
  8291                              <1> %define G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN 	 14
  8292                              <1> %define G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT 	 16
  8293                              <1> %define G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED 	 1
  8294                              <1> %define G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG 	 12
  8295                              <1> %define G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD 	 15
  8296                              <1> %define G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING 	 6
  8297                              <1> %define G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END 	 4
  8298                              <1> 
  8299                              <1> ;;enum GTypeDebugFlags
  8300                              <1> %define G_TYPE_DEBUG_OBJECTS 	 1 << 0
  8301                              <1> %define G_TYPE_DEBUG_SIGNALS 	 1 << 1
  8302                              <1> %define G_TYPE_DEBUG_NONE 	 0
  8303                              <1> %define G_TYPE_DEBUG_MASK 	 0x03
  8304                              <1> 
  8305                              <1> ;;enum GTypeFundamentalFlags
  8306                              <1> %define G_TYPE_FLAG_DERIVABLE 	 (1 << 2)
  8307                              <1> %define G_TYPE_FLAG_INSTANTIATABLE 	 (1 << 1)
  8308                              <1> %define G_TYPE_FLAG_DEEP_DERIVABLE 	 (1 << 3)
  8309                              <1> %define G_TYPE_FLAG_CLASSED 	 (1 << 0)
  8310                              <1> 
  8311                              <1> ;;enum GTypeFlags
  8312                              <1> %define G_TYPE_FLAG_VALUE_ABSTRACT 	 (1 << 5)
  8313                              <1> %define G_TYPE_FLAG_ABSTRACT 	 (1 << 4)
  8314                              <1> 
  8315                              <1> ;;enum GParamFlags
  8316                              <1> %define G_PARAM_CONSTRUCT_ONLY 	 1 << 3
  8317                              <1> %define G_PARAM_STATIC_NAME 	 1 << 5
  8318                              <1> %define G_PARAM_STATIC_NICK 	 1 << 6
  8319                              <1> %define G_PARAM_PRIVATE 	 G_PARAM_STATIC_NAME
  8320                              <1> %define G_PARAM_DEPRECATED 	 1 << 31
  8321                              <1> %define G_PARAM_STATIC_BLURB 	 1 << 7
  8322                              <1> %define G_PARAM_READABLE 	 1 << 0
  8323                              <1> %define G_PARAM_WRITABLE 	 1 << 1
  8324                              <1> %define G_PARAM_LAX_VALIDATION 	 1 << 4
  8325                              <1> %define G_PARAM_CONSTRUCT 	 1 << 2
  8326                              <1> 
  8327                              <1> ;;enum GSignalFlags
  8328                              <1> %define G_SIGNAL_NO_HOOKS 	 1 << 6
  8329                              <1> %define G_SIGNAL_NO_RECURSE 	 1 << 3
  8330                              <1> %define G_SIGNAL_RUN_LAST 	 1 << 1
  8331                              <1> %define G_SIGNAL_RUN_CLEANUP 	 1 << 2
  8332                              <1> %define G_SIGNAL_RUN_FIRST 	 1 << 0
  8333                              <1> %define G_SIGNAL_ACTION 	 1 << 5
  8334                              <1> %define G_SIGNAL_DETAILED 	 1 << 4
  8335                              <1> 
  8336                              <1> ;;enum GConnectFlags
  8337                              <1> %define G_CONNECT_AFTER 	 1 << 0
  8338                              <1> %define G_CONNECT_SWAPPED 	 1 << 1
  8339                              <1> 
  8340                              <1> ;;enum GSignalMatchType
  8341                              <1> %define G_SIGNAL_MATCH_FUNC 	 1 << 3
  8342                              <1> %define G_SIGNAL_MATCH_ID 	 1 << 0
  8343                              <1> %define G_SIGNAL_MATCH_UNBLOCKED 	 1 << 5
  8344                              <1> %define G_SIGNAL_MATCH_DATA 	 1 << 4
  8345                              <1> %define G_SIGNAL_MATCH_DETAIL 	 1 << 1
  8346                              <1> %define G_SIGNAL_MATCH_CLOSURE 	 1 << 2
  8347                              <1> 
  8348                              <1> ;;enum GBindingFlags
  8349                              <1> %define G_BINDING_BIDIRECTIONAL 	 1 << 0
  8350                              <1> %define G_BINDING_DEFAULT 	 0
  8351                              <1> %define G_BINDING_SYNC_CREATE 	 1 << 1
  8352                              <1> %define G_BINDING_INVERT_BOOLEAN 	 1 << 2
  8353                              <1> 
  8354                              <1> ;;enum GAppInfoCreateFlags
  8355                              <1> %define G_APP_INFO_CREATE_NONE 	 0
  8356                              <1> %define G_APP_INFO_CREATE_SUPPORTS_URIS 	 (1 << 1)
  8357                              <1> %define G_APP_INFO_CREATE_NEEDS_TERMINAL 	 (1 << 0)
  8358                              <1> %define G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION 	 (1 << 2)
  8359                              <1> 
  8360                              <1> ;;enum GConverterFlags
  8361                              <1> %define G_CONVERTER_NO_FLAGS 	 0
  8362                              <1> %define G_CONVERTER_INPUT_AT_END 	 (1 << 0)
  8363                              <1> %define G_CONVERTER_FLUSH 	 (1 << 1)
  8364                              <1> 
  8365                              <1> ;;enum GConverterResult
  8366                              <1> %define G_CONVERTER_ERROR 	 0
  8367                              <1> %define G_CONVERTER_CONVERTED 	 1
  8368                              <1> %define G_CONVERTER_FINISHED 	 2
  8369                              <1> %define G_CONVERTER_FLUSHED 	 3
  8370                              <1> 
  8371                              <1> ;;enum GDataStreamByteOrder
  8372                              <1> %define G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN 	 2
  8373                              <1> %define G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN 	 1
  8374                              <1> %define G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN 	 0
  8375                              <1> 
  8376                              <1> ;;enum GDataStreamNewlineType
  8377                              <1> %define G_DATA_STREAM_NEWLINE_TYPE_ANY 	 3
  8378                              <1> %define G_DATA_STREAM_NEWLINE_TYPE_LF 	 0
  8379                              <1> %define G_DATA_STREAM_NEWLINE_TYPE_CR_LF 	 2
  8380                              <1> %define G_DATA_STREAM_NEWLINE_TYPE_CR 	 1
  8381                              <1> 
  8382                              <1> ;;enum GFileAttributeType
  8383                              <1> %define G_FILE_ATTRIBUTE_TYPE_UINT64 	 5
  8384                              <1> %define G_FILE_ATTRIBUTE_TYPE_STRINGV 	 8
  8385                              <1> %define G_FILE_ATTRIBUTE_TYPE_INVALID 	 0
  8386                              <1> %define G_FILE_ATTRIBUTE_TYPE_BOOLEAN 	 2
  8387                              <1> %define G_FILE_ATTRIBUTE_TYPE_OBJECT 	 7
  8388                              <1> %define G_FILE_ATTRIBUTE_TYPE_BYTE_STRING 	 1
  8389                              <1> %define G_FILE_ATTRIBUTE_TYPE_INT64 	 6
  8390                              <1> %define G_FILE_ATTRIBUTE_TYPE_INT32 	 4
  8391                              <1> %define G_FILE_ATTRIBUTE_TYPE_UINT32 	 3
  8392                              <1> %define G_FILE_ATTRIBUTE_TYPE_STRING 	 0
  8393                              <1> 
  8394                              <1> ;;enum GFileAttributeInfoFlags
  8395                              <1> %define G_FILE_ATTRIBUTE_INFO_NONE 	 0
  8396                              <1> %define G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED 	 (1 << 1)
  8397                              <1> %define G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE 	 (1 << 0)
  8398                              <1> 
  8399                              <1> ;;enum GFileAttributeStatus
  8400                              <1> %define G_FILE_ATTRIBUTE_STATUS_SET 	 0
  8401                              <1> %define G_FILE_ATTRIBUTE_STATUS_UNSET 	 0
  8402                              <1> %define G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING 	 1
  8403                              <1> 
  8404                              <1> ;;enum GFileQueryInfoFlags
  8405                              <1> %define G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS 	 (1 << 0)
  8406                              <1> %define G_FILE_QUERY_INFO_NONE 	 0
  8407                              <1> 
  8408                              <1> ;;enum GFileCreateFlags
  8409                              <1> %define G_FILE_CREATE_REPLACE_DESTINATION 	 (1 << 1)
  8410                              <1> %define G_FILE_CREATE_NONE 	 0
  8411                              <1> %define G_FILE_CREATE_PRIVATE 	 (1 << 0)
  8412                              <1> 
  8413                              <1> ;;enum GMountMountFlags
  8414                              <1> %define G_MOUNT_MOUNT_NONE 	 0
  8415                              <1> 
  8416                              <1> ;;enum GMountUnmountFlags
  8417                              <1> %define G_MOUNT_UNMOUNT_FORCE 	 (1 << 0)
  8418                              <1> %define G_MOUNT_UNMOUNT_NONE 	 0
  8419                              <1> 
  8420                              <1> ;;enum GDriveStartFlags
  8421                              <1> %define G_DRIVE_START_NONE 	 0
  8422                              <1> 
  8423                              <1> ;;enum GDriveStartStopType
  8424                              <1> %define G_DRIVE_START_STOP_TYPE_PASSWORD 	 4
  8425                              <1> %define G_DRIVE_START_STOP_TYPE_UNKNOWN 	 0
  8426                              <1> %define G_DRIVE_START_STOP_TYPE_SHUTDOWN 	 1
  8427                              <1> %define G_DRIVE_START_STOP_TYPE_MULTIDISK 	 3
  8428                              <1> %define G_DRIVE_START_STOP_TYPE_NETWORK 	 2
  8429                              <1> 
  8430                              <1> ;;enum GFileCopyFlags
  8431                              <1> %define G_FILE_COPY_ALL_METADATA 	 (1 << 3)
  8432                              <1> %define G_FILE_COPY_BACKUP 	 (1 << 1)
  8433                              <1> %define G_FILE_COPY_NO_FALLBACK_FOR_MOVE 	 (1 << 4)
  8434                              <1> %define G_FILE_COPY_NOFOLLOW_SYMLINKS 	 (1 << 2)
  8435                              <1> %define G_FILE_COPY_TARGET_DEFAULT_PERMS 	 (1 << 5)
  8436                              <1> %define G_FILE_COPY_NONE 	 0
  8437                              <1> %define G_FILE_COPY_OVERWRITE 	 (1 << 0)
  8438                              <1> 
  8439                              <1> ;;enum GFileMonitorFlags
  8440                              <1> %define G_FILE_MONITOR_SEND_MOVED 	 (1 << 1)
  8441                              <1> %define G_FILE_MONITOR_NONE 	 0
  8442                              <1> %define G_FILE_MONITOR_WATCH_MOUNTS 	 (1 << 0)
  8443                              <1> 
  8444                              <1> ;;enum GFileType
  8445                              <1> %define G_FILE_TYPE_REGULAR 	 0
  8446                              <1> %define G_FILE_TYPE_SYMBOLIC_LINK 	 2
  8447                              <1> %define G_FILE_TYPE_SHORTCUT 	 4
  8448                              <1> %define G_FILE_TYPE_SPECIAL 	 3
  8449                              <1> %define G_FILE_TYPE_UNKNOWN 	 0
  8450                              <1> %define G_FILE_TYPE_MOUNTABLE 	 5
  8451                              <1> %define G_FILE_TYPE_DIRECTORY 	 1
  8452                              <1> 
  8453                              <1> ;;enum GFilesystemPreviewType
  8454                              <1> %define G_FILESYSTEM_PREVIEW_TYPE_NEVER 	 1
  8455                              <1> %define G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS 	 0
  8456                              <1> %define G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL 	 0
  8457                              <1> 
  8458                              <1> ;;enum GFileMonitorEvent
  8459                              <1> %define G_FILE_MONITOR_EVENT_MOVED 	 7
  8460                              <1> %define G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED 	 4
  8461                              <1> %define G_FILE_MONITOR_EVENT_PRE_UNMOUNT 	 5
  8462                              <1> %define G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT 	 1
  8463                              <1> %define G_FILE_MONITOR_EVENT_CHANGED 	 0
  8464                              <1> %define G_FILE_MONITOR_EVENT_CREATED 	 3
  8465                              <1> %define G_FILE_MONITOR_EVENT_UNMOUNTED 	 6
  8466                              <1> %define G_FILE_MONITOR_EVENT_DELETED 	 2
  8467                              <1> 
  8468                              <1> ;;enum GIOErrorEnum
  8469                              <1> %define G_IO_ERROR_READ_ONLY 	 21
  8470                              <1> %define G_IO_ERROR_IS_DIRECTORY 	 3
  8471                              <1> %define G_IO_ERROR_NO_SPACE 	 12
  8472                              <1> %define G_IO_ERROR_WOULD_MERGE 	 29
  8473                              <1> %define G_IO_ERROR_NOT_FOUND 	 1
  8474                              <1> %define G_IO_ERROR_PROXY_NOT_ALLOWED 	 43
  8475                              <1> %define G_IO_ERROR_ALREADY_MOUNTED 	 17
  8476                              <1> %define G_IO_ERROR_TOO_MANY_LINKS 	 11
  8477                              <1> %define G_IO_ERROR_NOT_DIRECTORY 	 4
  8478                              <1> %define G_IO_ERROR_PROXY_NEED_AUTH 	 42
  8479                              <1> %define G_IO_ERROR_PROXY_FAILED 	 40
  8480                              <1> %define G_IO_ERROR_PENDING 	 20
  8481                              <1> %define G_IO_ERROR_WOULD_RECURSE 	 25
  8482                              <1> %define G_IO_ERROR_PROXY_AUTH_FAILED 	 41
  8483                              <1> %define G_IO_ERROR_FAILED 	 0
  8484                              <1> %define G_IO_ERROR_PERMISSION_DENIED 	 14
  8485                              <1> %define G_IO_ERROR_NETWORK_UNREACHABLE 	 38
  8486                              <1> %define G_IO_ERROR_PARTIAL_INPUT 	 34
  8487                              <1> %define G_IO_ERROR_TOO_MANY_OPEN_FILES 	 31
  8488                              <1> %define G_IO_ERROR_NOT_MOUNTABLE_FILE 	 8
  8489                              <1> %define G_IO_ERROR_CANCELLED 	 19
  8490                              <1> %define G_IO_ERROR_NOT_REGULAR_FILE 	 6
  8491                              <1> %define G_IO_ERROR_HOST_NOT_FOUND 	 28
  8492                              <1> %define G_IO_ERROR_INVALID_ARGUMENT 	 13
  8493                              <1> %define G_IO_ERROR_NOT_SYMBOLIC_LINK 	 7
  8494                              <1> %define G_IO_ERROR_NOT_MOUNTED 	 16
  8495                              <1> %define G_IO_ERROR_DBUS_ERROR 	 36
  8496                              <1> %define G_IO_ERROR_CLOSED 	 18
  8497                              <1> %define G_IO_ERROR_INVALID_FILENAME 	 10
  8498                              <1> %define G_IO_ERROR_NOT_EMPTY 	 5
  8499                              <1> %define G_IO_ERROR_BUSY 	 26
  8500                              <1> %define G_IO_ERROR_CANT_CREATE_BACKUP 	 22
  8501                              <1> %define G_IO_ERROR_WOULD_BLOCK 	 27
  8502                              <1> %define G_IO_ERROR_ADDRESS_IN_USE 	 33
  8503                              <1> %define G_IO_ERROR_WRONG_ETAG 	 23
  8504                              <1> %define G_IO_ERROR_NOT_INITIALIZED 	 32
  8505                              <1> %define G_IO_ERROR_INVALID_DATA 	 35
  8506                              <1> %define G_IO_ERROR_EXISTS 	 2
  8507                              <1> %define G_IO_ERROR_FILENAME_TOO_LONG 	 9
  8508                              <1> %define G_IO_ERROR_FAILED_HANDLED 	 30
  8509                              <1> %define G_IO_ERROR_HOST_UNREACHABLE 	 37
  8510                              <1> %define G_IO_ERROR_TIMED_OUT 	 24
  8511                              <1> %define G_IO_ERROR_CONNECTION_REFUSED 	 39
  8512                              <1> %define G_IO_ERROR_NOT_SUPPORTED 	 15
  8513                              <1> 
  8514                              <1> ;;enum GAskPasswordFlags
  8515                              <1> %define G_ASK_PASSWORD_NEED_PASSWORD 	 (1 << 0)
  8516                              <1> %define G_ASK_PASSWORD_NEED_DOMAIN 	 (1 << 2)
  8517                              <1> %define G_ASK_PASSWORD_NEED_USERNAME 	 (1 << 1)
  8518                              <1> %define G_ASK_PASSWORD_SAVING_SUPPORTED 	 (1 << 3)
  8519                              <1> %define G_ASK_PASSWORD_ANONYMOUS_SUPPORTED 	 (1 << 4)
  8520                              <1> 
  8521                              <1> ;;enum GPasswordSave
  8522                              <1> %define G_PASSWORD_SAVE_NEVER 	 0
  8523                              <1> %define G_PASSWORD_SAVE_FOR_SESSION 	 1
  8524                              <1> %define G_PASSWORD_SAVE_PERMANENTLY 	 2
  8525                              <1> 
  8526                              <1> ;;enum GMountOperationResult
  8527                              <1> %define G_MOUNT_OPERATION_HANDLED 	 0
  8528                              <1> %define G_MOUNT_OPERATION_UNHANDLED 	 2
  8529                              <1> %define G_MOUNT_OPERATION_ABORTED 	 1
  8530                              <1> 
  8531                              <1> ;;enum GOutputStreamSpliceFlags
  8532                              <1> %define G_OUTPUT_STREAM_SPLICE_NONE 	 0
  8533                              <1> %define G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE 	 (1 << 0)
  8534                              <1> %define G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET 	 (1 << 1)
  8535                              <1> 
  8536                              <1> ;;enum GIOStreamSpliceFlags
  8537                              <1> %define G_IO_STREAM_SPLICE_CLOSE_STREAM2 	 (1 << 1)
  8538                              <1> %define G_IO_STREAM_SPLICE_WAIT_FOR_BOTH 	 (1 << 2)
  8539                              <1> %define G_IO_STREAM_SPLICE_NONE 	 0
  8540                              <1> %define G_IO_STREAM_SPLICE_CLOSE_STREAM1 	 (1 << 0)
  8541                              <1> 
  8542                              <1> ;;enum GEmblemOrigin
  8543                              <1> %define G_EMBLEM_ORIGIN_TAG 	 3
  8544                              <1> %define G_EMBLEM_ORIGIN_LIVEMETADATA 	 2
  8545                              <1> %define G_EMBLEM_ORIGIN_DEVICE 	 1
  8546                              <1> %define G_EMBLEM_ORIGIN_UNKNOWN 	 0
  8547                              <1> 
  8548                              <1> ;;enum GResolverError
  8549                              <1> %define G_RESOLVER_ERROR_INTERNAL 	 2
  8550                              <1> %define G_RESOLVER_ERROR_NOT_FOUND 	 0
  8551                              <1> %define G_RESOLVER_ERROR_TEMPORARY_FAILURE 	 1
  8552                              <1> 
  8553                              <1> ;;enum GSocketFamily
  8554                              <1> %define G_SOCKET_FAMILY_INVALID 	 0
  8555                              <1> %define G_SOCKET_FAMILY_UNIX 	 1
  8556                              <1> %define G_SOCKET_FAMILY_IPV4 	 2
  8557                              <1> %define G_SOCKET_FAMILY_IPV6 	 23
  8558                              <1> 
  8559                              <1> ;;enum GSocketType
  8560                              <1> %define G_SOCKET_TYPE_STREAM 	 1
  8561                              <1> %define G_SOCKET_TYPE_INVALID 	 0
  8562                              <1> %define G_SOCKET_TYPE_DATAGRAM 	 2
  8563                              <1> %define G_SOCKET_TYPE_SEQPACKET 	 3
  8564                              <1> 
  8565                              <1> ;;enum GSocketMsgFlags
  8566                              <1> %define G_SOCKET_MSG_PEEK 	 2
  8567                              <1> %define G_SOCKET_MSG_NONE 	 0
  8568                              <1> %define G_SOCKET_MSG_DONTROUTE 	 4
  8569                              <1> %define G_SOCKET_MSG_OOB 	 1
  8570                              <1> 
  8571                              <1> ;;enum GSocketProtocol
  8572                              <1> %define G_SOCKET_PROTOCOL_SCTP 	 132
  8573                              <1> %define G_SOCKET_PROTOCOL_UNKNOWN 	 -1
  8574                              <1> %define G_SOCKET_PROTOCOL_TCP 	 6
  8575                              <1> %define G_SOCKET_PROTOCOL_DEFAULT 	 0
  8576                              <1> %define G_SOCKET_PROTOCOL_UDP 	 17
  8577                              <1> 
  8578                              <1> ;;enum GZlibCompressorFormat
  8579                              <1> %define G_ZLIB_COMPRESSOR_FORMAT_ZLIB 	 0
  8580                              <1> %define G_ZLIB_COMPRESSOR_FORMAT_RAW 	 2
  8581                              <1> %define G_ZLIB_COMPRESSOR_FORMAT_GZIP 	 1
  8582                              <1> 
  8583                              <1> ;;enum GUnixSocketAddressType
  8584                              <1> %define G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED 	 4
  8585                              <1> %define G_UNIX_SOCKET_ADDRESS_PATH 	 2
  8586                              <1> %define G_UNIX_SOCKET_ADDRESS_ABSTRACT 	 3
  8587                              <1> %define G_UNIX_SOCKET_ADDRESS_ANONYMOUS 	 1
  8588                              <1> %define G_UNIX_SOCKET_ADDRESS_INVALID 	 0
  8589                              <1> 
  8590                              <1> ;;enum GBusType
  8591                              <1> %define G_BUS_TYPE_NONE 	 0
  8592                              <1> %define G_BUS_TYPE_SYSTEM 	 1
  8593                              <1> %define G_BUS_TYPE_STARTER 	 -1
  8594                              <1> %define G_BUS_TYPE_SESSION 	 2
  8595                              <1> 
  8596                              <1> ;;enum GBusNameOwnerFlags
  8597                              <1> %define G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT 	 (1<<0)
  8598                              <1> %define G_BUS_NAME_OWNER_FLAGS_REPLACE 	 (1<<1)
  8599                              <1> %define G_BUS_NAME_OWNER_FLAGS_NONE 	 0
  8600                              <1> 
  8601                              <1> ;;enum GBusNameWatcherFlags
  8602                              <1> %define G_BUS_NAME_WATCHER_FLAGS_AUTO_START 	 (1<<0)
  8603                              <1> %define G_BUS_NAME_WATCHER_FLAGS_NONE 	 0
  8604                              <1> 
  8605                              <1> ;;enum GDBusProxyFlags
  8606                              <1> %define G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START 	 (1<<2)
  8607                              <1> %define G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS 	 (1<<1)
  8608                              <1> %define G_DBUS_PROXY_FLAGS_NONE 	 0
  8609                              <1> %define G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES 	 (1<<0)
  8610                              <1> 
  8611                              <1> ;;enum GDBusError
  8612                              <1> %define G_DBUS_ERROR_NO_REPLY 	 4
  8613                              <1> %define G_DBUS_ERROR_BAD_ADDRESS 	 6
  8614                              <1> %define G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN 	 35
  8615                              <1> %define G_DBUS_ERROR_FILE_EXISTS 	 18
  8616                              <1> %define G_DBUS_ERROR_TIMEOUT 	 12
  8617                              <1> %define G_DBUS_ERROR_IO_ERROR 	 5
  8618                              <1> %define G_DBUS_ERROR_SERVICE_UNKNOWN 	 2
  8619                              <1> %define G_DBUS_ERROR_SPAWN_CHILD_SIGNALED 	 26
  8620                              <1> %define G_DBUS_ERROR_SPAWN_SETUP_FAILED 	 28
  8621                              <1> %define G_DBUS_ERROR_MATCH_RULE_INVALID 	 22
  8622                              <1> %define G_DBUS_ERROR_NO_MEMORY 	 1
  8623                              <1> %define G_DBUS_ERROR_NO_SERVER 	 11
  8624                              <1> %define G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND 	 31
  8625                              <1> %define G_DBUS_ERROR_SPAWN_FAILED 	 27
  8626                              <1> %define G_DBUS_ERROR_DISCONNECTED 	 15
  8627                              <1> %define G_DBUS_ERROR_MATCH_RULE_NOT_FOUND 	 21
  8628                              <1> %define G_DBUS_ERROR_SPAWN_CHILD_EXITED 	 25
  8629                              <1> %define G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN 	 38
  8630                              <1> %define G_DBUS_ERROR_INVALID_ARGS 	 16
  8631                              <1> %define G_DBUS_ERROR_LIMITS_EXCEEDED 	 8
  8632                              <1> %define G_DBUS_ERROR_AUTH_FAILED 	 10
  8633                              <1> %define G_DBUS_ERROR_ADDRESS_IN_USE 	 14
  8634                              <1> %define G_DBUS_ERROR_NO_NETWORK 	 13
  8635                              <1> %define G_DBUS_ERROR_SPAWN_CONFIG_INVALID 	 29
  8636                              <1> %define G_DBUS_ERROR_INVALID_SIGNATURE 	 36
  8637                              <1> %define G_DBUS_ERROR_OBJECT_PATH_IN_USE 	 40
  8638                              <1> %define G_DBUS_ERROR_FILE_NOT_FOUND 	 17
  8639                              <1> %define G_DBUS_ERROR_SPAWN_FILE_INVALID 	 33
  8640                              <1> %define G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN 	 39
  8641                              <1> %define G_DBUS_ERROR_TIMED_OUT 	 20
  8642                              <1> %define G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID 	 32
  8643                              <1> %define G_DBUS_ERROR_NAME_HAS_NO_OWNER 	 3
  8644                              <1> %define G_DBUS_ERROR_SPAWN_EXEC_FAILED 	 23
  8645                              <1> %define G_DBUS_ERROR_FAILED 	 0
  8646                              <1> %define G_DBUS_ERROR_NOT_SUPPORTED 	 7
  8647                              <1> %define G_DBUS_ERROR_SPAWN_SERVICE_INVALID 	 30
  8648                              <1> %define G_DBUS_ERROR_SPAWN_NO_MEMORY 	 34
  8649                              <1> %define G_DBUS_ERROR_SPAWN_FORK_FAILED 	 24
  8650                              <1> %define G_DBUS_ERROR_UNKNOWN_METHOD 	 19
  8651                              <1> %define G_DBUS_ERROR_INVALID_FILE_CONTENT 	 37
  8652                              <1> %define G_DBUS_ERROR_ACCESS_DENIED 	 9
  8653                              <1> 
  8654                              <1> ;;enum GDBusConnectionFlags
  8655                              <1> %define G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER 	 (1<<1)
  8656                              <1> %define G_DBUS_CONNECTION_FLAGS_NONE 	 0
  8657                              <1> %define G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION 	 (1<<3)
  8658                              <1> %define G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING 	 (1<<4)
  8659                              <1> %define G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS 	 (1<<2)
  8660                              <1> %define G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT 	 (1<<0)
  8661                              <1> 
  8662                              <1> ;;enum GDBusCapabilityFlags
  8663                              <1> %define G_DBUS_CAPABILITY_FLAGS_NONE 	 0
  8664                              <1> %define G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING 	 (1<<0)
  8665                              <1> 
  8666                              <1> ;;enum GDBusCallFlags
  8667                              <1> %define G_DBUS_CALL_FLAGS_NONE 	 0
  8668                              <1> %define G_DBUS_CALL_FLAGS_NO_AUTO_START 	 (1<<0)
  8669                              <1> 
  8670                              <1> ;;enum GDBusMessageType
  8671                              <1> %define G_DBUS_MESSAGE_TYPE_ERROR 	 3
  8672                              <1> %define G_DBUS_MESSAGE_TYPE_INVALID 	 0
  8673                              <1> %define G_DBUS_MESSAGE_TYPE_METHOD_RETURN 	 2
  8674                              <1> %define G_DBUS_MESSAGE_TYPE_METHOD_CALL 	 1
  8675                              <1> %define G_DBUS_MESSAGE_TYPE_SIGNAL 	 4
  8676                              <1> 
  8677                              <1> ;;enum GDBusMessageFlags
  8678                              <1> %define G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED 	 (1<<0)
  8679                              <1> %define G_DBUS_MESSAGE_FLAGS_NO_AUTO_START 	 (1<<1)
  8680                              <1> %define G_DBUS_MESSAGE_FLAGS_NONE 	 0
  8681                              <1> 
  8682                              <1> ;;enum GDBusMessageHeaderField
  8683                              <1> %define G_DBUS_MESSAGE_HEADER_FIELD_SENDER 	 7
  8684                              <1> %define G_DBUS_MESSAGE_HEADER_FIELD_MEMBER 	 3
  8685                              <1> %define G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME 	 4
  8686                              <1> %define G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS 	 9
  8687                              <1> %define G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE 	 8
  8688                              <1> %define G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL 	 5
  8689                              <1> %define G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE 	 2
  8690                              <1> %define G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION 	 6
  8691                              <1> %define G_DBUS_MESSAGE_HEADER_FIELD_INVALID 	 0
  8692                              <1> %define G_DBUS_MESSAGE_HEADER_FIELD_PATH 	 1
  8693                              <1> 
  8694                              <1> ;;enum GDBusPropertyInfoFlags
  8695                              <1> %define G_DBUS_PROPERTY_INFO_FLAGS_READABLE 	 (1<<0)
  8696                              <1> %define G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE 	 (1<<1)
  8697                              <1> %define G_DBUS_PROPERTY_INFO_FLAGS_NONE 	 0
  8698                              <1> 
  8699                              <1> ;;enum GDBusSubtreeFlags
  8700                              <1> %define G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES 	 (1<<0)
  8701                              <1> %define G_DBUS_SUBTREE_FLAGS_NONE 	 0
  8702                              <1> 
  8703                              <1> ;;enum GDBusServerFlags
  8704                              <1> %define G_DBUS_SERVER_FLAGS_NONE 	 0
  8705                              <1> %define G_DBUS_SERVER_FLAGS_RUN_IN_THREAD 	 (1<<0)
  8706                              <1> %define G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS 	 (1<<1)
  8707                              <1> 
  8708                              <1> ;;enum GDBusSignalFlags
  8709                              <1> %define G_DBUS_SIGNAL_FLAGS_NONE 	 0
  8710                              <1> %define G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE 	 (1<<0)
  8711                              <1> 
  8712                              <1> ;;enum GDBusSendMessageFlags
  8713                              <1> %define G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL 	 (1<<0)
  8714                              <1> %define G_DBUS_SEND_MESSAGE_FLAGS_NONE 	 0
  8715                              <1> 
  8716                              <1> ;;enum GCredentialsType
  8717                              <1> %define G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED 	 2
  8718                              <1> %define G_CREDENTIALS_TYPE_LINUX_UCRED 	 1
  8719                              <1> %define G_CREDENTIALS_TYPE_INVALID 	 0
  8720                              <1> 
  8721                              <1> ;;enum GDBusMessageByteOrder
  8722                              <1> %define G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN 	 'B'
  8723                              <1> %define G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN 	 'l'
  8724                              <1> 
  8725                              <1> ;;enum GApplicationFlags
  8726                              <1> %define G_APPLICATION_SEND_ENVIRONMENT 	 (1 << 4)
  8727                              <1> %define G_APPLICATION_IS_SERVICE 	 (1 << 0)
  8728                              <1> %define G_APPLICATION_FLAGS_NONE 	 0
  8729                              <1> %define G_APPLICATION_HANDLES_COMMAND_LINE 	 (1 << 3)
  8730                              <1> %define G_APPLICATION_IS_LAUNCHER 	 (1 << 1)
  8731                              <1> %define G_APPLICATION_HANDLES_OPEN 	 (1 << 2)
  8732                              <1> 
  8733                              <1> ;;enum GTlsError
  8734                              <1> %define G_TLS_ERROR_EOF 	 6
  8735                              <1> %define G_TLS_ERROR_HANDSHAKE 	 4
  8736                              <1> %define G_TLS_ERROR_MISC 	 1
  8737                              <1> %define G_TLS_ERROR_NOT_TLS 	 3
  8738                              <1> %define G_TLS_ERROR_CERTIFICATE_REQUIRED 	 5
  8739                              <1> %define G_TLS_ERROR_UNAVAILABLE 	 0
  8740                              <1> %define G_TLS_ERROR_BAD_CERTIFICATE 	 2
  8741                              <1> 
  8742                              <1> ;;enum GTlsCertificateFlags
  8743                              <1> %define G_TLS_CERTIFICATE_UNKNOWN_CA 	 (1 << 0)
  8744                              <1> %define G_TLS_CERTIFICATE_VALIDATE_ALL 	 0x007f
  8745                              <1> %define G_TLS_CERTIFICATE_EXPIRED 	 (1 << 3)
  8746                              <1> %define G_TLS_CERTIFICATE_REVOKED 	 (1 << 4)
  8747                              <1> %define G_TLS_CERTIFICATE_NOT_ACTIVATED 	 (1 << 2)
  8748                              <1> %define G_TLS_CERTIFICATE_GENERIC_ERROR 	 (1 << 6)
  8749                              <1> %define G_TLS_CERTIFICATE_BAD_IDENTITY 	 (1 << 1)
  8750                              <1> %define G_TLS_CERTIFICATE_INSECURE 	 (1 << 5)
  8751                              <1> 
  8752                              <1> ;;enum GTlsAuthenticationMode
  8753                              <1> %define G_TLS_AUTHENTICATION_REQUIRED 	 2
  8754                              <1> %define G_TLS_AUTHENTICATION_REQUESTED 	 1
  8755                              <1> %define G_TLS_AUTHENTICATION_NONE 	 0
  8756                              <1> 
  8757                              <1> ;;enum GTlsRehandshakeMode
  8758                              <1> %define G_TLS_REHANDSHAKE_NEVER 	 0
  8759                              <1> %define G_TLS_REHANDSHAKE_UNSAFELY 	 2
  8760                              <1> %define G_TLS_REHANDSHAKE_SAFELY 	 1
  8761                              <1> 
  8762                              <1> ;;enum GModuleFlags
  8763                              <1> %define G_MODULE_BIND_LAZY 	 1 << 0
  8764                              <1> %define G_MODULE_BIND_LOCAL 	 1 << 1
  8765                              <1> %define G_MODULE_BIND_MASK 	 0x03
  8766                              <1> 
  8767                              <1> ;;enum GSettingsBindFlags
  8768                              <1> %define G_SETTINGS_BIND_GET_NO_CHANGES 	 (1<<3)
  8769                              <1> %define G_SETTINGS_BIND_DEFAULT 	 0
  8770                              <1> %define G_SETTINGS_BIND_INVERT_BOOLEAN 	 (1<<4)
  8771                              <1> %define G_SETTINGS_BIND_GET 	 (1<<0)
  8772                              <1> %define G_SETTINGS_BIND_NO_SENSITIVITY 	 (1<<2)
  8773                              <1> %define G_SETTINGS_BIND_SET 	 (1<<1)
  8774                              <1> 
  8775                              <1> ;;enum cairo_status_t
  8776                              <1> %define CAIRO_STATUS_INVALID_CLUSTERS 	 28
  8777                              <1> %define CAIRO_STATUS_DEVICE_ERROR 	 34
  8778                              <1> %define CAIRO_STATUS_INVALID_DSC_COMMENT 	 19
  8779                              <1> %define CAIRO_STATUS_TEMP_FILE_ERROR 	 22
  8780                              <1> %define CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED 	 32
  8781                              <1> %define CAIRO_STATUS_WRITE_ERROR 	 10
  8782                              <1> %define CAIRO_STATUS_INVALID_SIZE 	 31
  8783                              <1> %define CAIRO_STATUS_SURFACE_FINISHED 	 11
  8784                              <1> %define CAIRO_STATUS_NULL_POINTER 	 6
  8785                              <1> %define CAIRO_STATUS_LAST_STATUS 	 35
  8786                              <1> %define CAIRO_STATUS_INVALID_DASH 	 18
  8787                              <1> %define CAIRO_STATUS_INVALID_STRIDE 	 23
  8788                              <1> %define CAIRO_STATUS_SUCCESS 	 0
  8789                              <1> %define CAIRO_STATUS_FILE_NOT_FOUND 	 17
  8790                              <1> %define CAIRO_STATUS_INVALID_RESTORE 	 1
  8791                              <1> %define CAIRO_STATUS_NO_CURRENT_POINT 	 3
  8792                              <1> %define CAIRO_STATUS_INVALID_INDEX 	 20
  8793                              <1> %define CAIRO_STATUS_READ_ERROR 	 9
  8794                              <1> %define CAIRO_STATUS_INVALID_SLANT 	 29
  8795                              <1> %define CAIRO_STATUS_INVALID_CONTENT 	 14
  8796                              <1> %define CAIRO_STATUS_DEVICE_TYPE_MISMATCH 	 33
  8797                              <1> %define CAIRO_STATUS_INVALID_STATUS 	 5
  8798                              <1> %define CAIRO_STATUS_INVALID_WEIGHT 	 30
  8799                              <1> %define CAIRO_STATUS_INVALID_POP_GROUP 	 2
  8800                              <1> %define CAIRO_STATUS_INVALID_PATH_DATA 	 8
  8801                              <1> %define CAIRO_STATUS_NO_MEMORY 	 0
  8802                              <1> %define CAIRO_STATUS_PATTERN_TYPE_MISMATCH 	 13
  8803                              <1> %define CAIRO_STATUS_INVALID_MATRIX 	 4
  8804                              <1> %define CAIRO_STATUS_SURFACE_TYPE_MISMATCH 	 12
  8805                              <1> %define CAIRO_STATUS_CLIP_NOT_REPRESENTABLE 	 21
  8806                              <1> %define CAIRO_STATUS_NEGATIVE_COUNT 	 27
  8807                              <1> %define CAIRO_STATUS_USER_FONT_ERROR 	 26
  8808                              <1> %define CAIRO_STATUS_INVALID_FORMAT 	 15
  8809                              <1> %define CAIRO_STATUS_INVALID_VISUAL 	 16
  8810                              <1> %define CAIRO_STATUS_INVALID_STRING 	 7
  8811                              <1> %define CAIRO_STATUS_FONT_TYPE_MISMATCH 	 24
  8812                              <1> %define CAIRO_STATUS_USER_FONT_IMMUTABLE 	 25
  8813                              <1> 
  8814                              <1> ;;enum cairo_content_t
  8815                              <1> %define CAIRO_CONTENT_COLOR 	 0x1000
  8816                              <1> %define CAIRO_CONTENT_COLOR_ALPHA 	 0x3000
  8817                              <1> %define CAIRO_CONTENT_ALPHA 	 0x2000
  8818                              <1> 
  8819                              <1> ;;enum cairo_operator_t
  8820                              <1> %define CAIRO_OPERATOR_DARKEN 	 17
  8821                              <1> %define CAIRO_OPERATOR_SATURATE 	 13
  8822                              <1> %define CAIRO_OPERATOR_HSL_LUMINOSITY 	 28
  8823                              <1> %define CAIRO_OPERATOR_IN 	 3
  8824                              <1> %define CAIRO_OPERATOR_DEST_OUT 	 9
  8825                              <1> %define CAIRO_OPERATOR_MULTIPLY 	 14
  8826                              <1> %define CAIRO_OPERATOR_OUT 	 4
  8827                              <1> %define CAIRO_OPERATOR_HSL_HUE 	 25
  8828                              <1> %define CAIRO_OPERATOR_HARD_LIGHT 	 21
  8829                              <1> %define CAIRO_OPERATOR_EXCLUSION 	 24
  8830                              <1> %define CAIRO_OPERATOR_SOFT_LIGHT 	 22
  8831                              <1> %define CAIRO_OPERATOR_SCREEN 	 15
  8832                              <1> %define CAIRO_OPERATOR_HSL_SATURATION 	 26
  8833                              <1> %define CAIRO_OPERATOR_COLOR_BURN 	 20
  8834                              <1> %define CAIRO_OPERATOR_DEST_ATOP 	 10
  8835                              <1> %define CAIRO_OPERATOR_CLEAR 	 0
  8836                              <1> %define CAIRO_OPERATOR_DEST_OVER 	 7
  8837                              <1> %define CAIRO_OPERATOR_ATOP 	 5
  8838                              <1> %define CAIRO_OPERATOR_XOR 	 11
  8839                              <1> %define CAIRO_OPERATOR_DEST_IN 	 8
  8840                              <1> %define CAIRO_OPERATOR_DEST 	 6
  8841                              <1> %define CAIRO_OPERATOR_OVER 	 2
  8842                              <1> %define CAIRO_OPERATOR_DIFFERENCE 	 23
  8843                              <1> %define CAIRO_OPERATOR_LIGHTEN 	 18
  8844                              <1> %define CAIRO_OPERATOR_COLOR_DODGE 	 19
  8845                              <1> %define CAIRO_OPERATOR_ADD 	 12
  8846                              <1> %define CAIRO_OPERATOR_OVERLAY 	 16
  8847                              <1> %define CAIRO_OPERATOR_SOURCE 	 1
  8848                              <1> %define CAIRO_OPERATOR_HSL_COLOR 	 27
  8849                              <1> 
  8850                              <1> ;;enum cairo_antialias_t
  8851                              <1> %define CAIRO_ANTIALIAS_GRAY 	 2
  8852                              <1> %define CAIRO_ANTIALIAS_NONE 	 1
  8853                              <1> %define CAIRO_ANTIALIAS_DEFAULT 	 0
  8854                              <1> %define CAIRO_ANTIALIAS_SUBPIXEL 	 3
  8855                              <1> 
  8856                              <1> ;;enum cairo_fill_rule_t
  8857                              <1> %define CAIRO_FILL_RULE_EVEN_ODD 	 1
  8858                              <1> %define CAIRO_FILL_RULE_WINDING 	 0
  8859                              <1> 
  8860                              <1> ;;enum cairo_line_cap_t
  8861                              <1> %define CAIRO_LINE_CAP_SQUARE 	 2
  8862                              <1> %define CAIRO_LINE_CAP_BUTT 	 0
  8863                              <1> %define CAIRO_LINE_CAP_ROUND 	 1
  8864                              <1> 
  8865                              <1> ;;enum cairo_line_join_t
  8866                              <1> %define CAIRO_LINE_JOIN_ROUND 	 1
  8867                              <1> %define CAIRO_LINE_JOIN_MITER 	 0
  8868                              <1> %define CAIRO_LINE_JOIN_BEVEL 	 2
  8869                              <1> 
  8870                              <1> ;;enum cairo_text_cluster_flags_t
  8871                              <1> %define CAIRO_TEXT_CLUSTER_FLAG_BACKWARD 	 0x00000001
  8872                              <1> 
  8873                              <1> ;;enum cairo_font_slant_t
  8874                              <1> %define CAIRO_FONT_SLANT_NORMAL 	 0
  8875                              <1> %define CAIRO_FONT_SLANT_OBLIQUE 	 2
  8876                              <1> %define CAIRO_FONT_SLANT_ITALIC 	 1
  8877                              <1> 
  8878                              <1> ;;enum cairo_font_weight_t
  8879                              <1> %define CAIRO_FONT_WEIGHT_NORMAL 	 0
  8880                              <1> %define CAIRO_FONT_WEIGHT_BOLD 	 1
  8881                              <1> 
  8882                              <1> ;;enum cairo_subpixel_order_t
  8883                              <1> %define CAIRO_SUBPIXEL_ORDER_BGR 	 2
  8884                              <1> %define CAIRO_SUBPIXEL_ORDER_DEFAULT 	 0
  8885                              <1> %define CAIRO_SUBPIXEL_ORDER_VRGB 	 3
  8886                              <1> %define CAIRO_SUBPIXEL_ORDER_RGB 	 1
  8887                              <1> %define CAIRO_SUBPIXEL_ORDER_VBGR 	 4
  8888                              <1> 
  8889                              <1> ;;enum cairo_hint_style_t
  8890                              <1> %define CAIRO_HINT_STYLE_DEFAULT 	 0
  8891                              <1> %define CAIRO_HINT_STYLE_FULL 	 4
  8892                              <1> %define CAIRO_HINT_STYLE_MEDIUM 	 3
  8893                              <1> %define CAIRO_HINT_STYLE_SLIGHT 	 2
  8894                              <1> %define CAIRO_HINT_STYLE_NONE 	 1
  8895                              <1> 
  8896                              <1> ;;enum cairo_hint_metrics_t
  8897                              <1> %define CAIRO_HINT_METRICS_DEFAULT 	 0
  8898                              <1> %define CAIRO_HINT_METRICS_OFF 	 1
  8899                              <1> %define CAIRO_HINT_METRICS_ON 	 2
  8900                              <1> 
  8901                              <1> ;;enum cairo_font_type_t
  8902                              <1> %define CAIRO_FONT_TYPE_QUARTZ 	 3
  8903                              <1> %define CAIRO_FONT_TYPE_WIN32 	 2
  8904                              <1> %define CAIRO_FONT_TYPE_USER 	 4
  8905                              <1> %define CAIRO_FONT_TYPE_FT 	 1
  8906                              <1> %define CAIRO_FONT_TYPE_TOY 	 0
  8907                              <1> 
  8908                              <1> ;;enum cairo_path_data_type_t
  8909                              <1> %define CAIRO_PATH_LINE_TO 	 1
  8910                              <1> %define CAIRO_PATH_MOVE_TO 	 0
  8911                              <1> %define CAIRO_PATH_CURVE_TO 	 2
  8912                              <1> %define CAIRO_PATH_CLOSE_PATH 	 3
  8913                              <1> 
  8914                              <1> ;;enum cairo_device_type_t
  8915                              <1> %define CAIRO_DEVICE_TYPE_XLIB 	 4
  8916                              <1> %define CAIRO_DEVICE_TYPE_DRM 	 0
  8917                              <1> %define CAIRO_DEVICE_TYPE_XML 	 5
  8918                              <1> %define CAIRO_DEVICE_TYPE_GL 	 1
  8919                              <1> %define CAIRO_DEVICE_TYPE_SCRIPT 	 2
  8920                              <1> %define CAIRO_DEVICE_TYPE_XCB 	 3
  8921                              <1> 
  8922                              <1> ;;enum cairo_surface_type_t
  8923                              <1> %define CAIRO_SURFACE_TYPE_GL 	 18
  8924                              <1> %define CAIRO_SURFACE_TYPE_BEOS 	 8
  8925                              <1> %define CAIRO_SURFACE_TYPE_WIN32 	 7
  8926                              <1> %define CAIRO_SURFACE_TYPE_PS 	 2
  8927                              <1> %define CAIRO_SURFACE_TYPE_OS2 	 11
  8928                              <1> %define CAIRO_SURFACE_TYPE_QUARTZ 	 6
  8929                              <1> %define CAIRO_SURFACE_TYPE_SKIA 	 22
  8930                              <1> %define CAIRO_SURFACE_TYPE_XML 	 21
  8931                              <1> %define CAIRO_SURFACE_TYPE_GLITZ 	 5
  8932                              <1> %define CAIRO_SURFACE_TYPE_SCRIPT 	 14
  8933                              <1> %define CAIRO_SURFACE_TYPE_SUBSURFACE 	 23
  8934                              <1> %define CAIRO_SURFACE_TYPE_QUARTZ_IMAGE 	 13
  8935                              <1> %define CAIRO_SURFACE_TYPE_XLIB 	 3
  8936                              <1> %define CAIRO_SURFACE_TYPE_DIRECTFB 	 9
  8937                              <1> %define CAIRO_SURFACE_TYPE_TEE 	 20
  8938                              <1> %define CAIRO_SURFACE_TYPE_QT 	 15
  8939                              <1> %define CAIRO_SURFACE_TYPE_RECORDING 	 16
  8940                              <1> %define CAIRO_SURFACE_TYPE_IMAGE 	 0
  8941                              <1> %define CAIRO_SURFACE_TYPE_PDF 	 1
  8942                              <1> %define CAIRO_SURFACE_TYPE_SVG 	 10
  8943                              <1> %define CAIRO_SURFACE_TYPE_XCB 	 4
  8944                              <1> %define CAIRO_SURFACE_TYPE_VG 	 17
  8945                              <1> %define CAIRO_SURFACE_TYPE_DRM 	 19
  8946                              <1> %define CAIRO_SURFACE_TYPE_WIN32_PRINTING 	 12
  8947                              <1> 
  8948                              <1> ;;enum cairo_format_t
  8949                              <1> %define CAIRO_FORMAT_A1 	 3
  8950                              <1> %define CAIRO_FORMAT_A8 	 2
  8951                              <1> %define CAIRO_FORMAT_ARGB32 	 0
  8952                              <1> %define CAIRO_FORMAT_INVALID 	 -1
  8953                              <1> %define CAIRO_FORMAT_RGB24 	 1
  8954                              <1> %define CAIRO_FORMAT_RGB16_565 	 4
  8955                              <1> 
  8956                              <1> ;;enum cairo_pattern_type_t
  8957                              <1> %define CAIRO_PATTERN_TYPE_RADIAL 	 3
  8958                              <1> %define CAIRO_PATTERN_TYPE_SURFACE 	 1
  8959                              <1> %define CAIRO_PATTERN_TYPE_SOLID 	 0
  8960                              <1> %define CAIRO_PATTERN_TYPE_LINEAR 	 2
  8961                              <1> 
  8962                              <1> ;;enum cairo_extend_t
  8963                              <1> %define CAIRO_EXTEND_PAD 	 3
  8964                              <1> %define CAIRO_EXTEND_REPEAT 	 1
  8965                              <1> %define CAIRO_EXTEND_REFLECT 	 2
  8966                              <1> %define CAIRO_EXTEND_NONE 	 0
  8967                              <1> 
  8968                              <1> ;;enum cairo_filter_t
  8969                              <1> %define CAIRO_FILTER_BEST 	 2
  8970                              <1> %define CAIRO_FILTER_NEAREST 	 3
  8971                              <1> %define CAIRO_FILTER_FAST 	 0
  8972                              <1> %define CAIRO_FILTER_BILINEAR 	 4
  8973                              <1> %define CAIRO_FILTER_GOOD 	 1
  8974                              <1> %define CAIRO_FILTER_GAUSSIAN 	 5
  8975                              <1> 
  8976                              <1> ;;enum cairo_region_overlap_t
  8977                              <1> %define CAIRO_REGION_OVERLAP_PART 	 2
  8978                              <1> %define CAIRO_REGION_OVERLAP_IN 	 0
  8979                              <1> %define CAIRO_REGION_OVERLAP_OUT 	 1
  8980                              <1> 
  8981                              <1> ;;enum PangoCoverageLevel
  8982                              <1> %define PANGO_COVERAGE_FALLBACK 	 1
  8983                              <1> %define PANGO_COVERAGE_EXACT 	 3
  8984                              <1> %define PANGO_COVERAGE_NONE 	 0
  8985                              <1> %define PANGO_COVERAGE_APPROXIMATE 	 2
  8986                              <1> 
  8987                              <1> ;;enum PangoGravity
  8988                              <1> %define PANGO_GRAVITY_WEST 	 3
  8989                              <1> %define PANGO_GRAVITY_SOUTH 	 0
  8990                              <1> %define PANGO_GRAVITY_NORTH 	 2
  8991                              <1> %define PANGO_GRAVITY_EAST 	 1
  8992                              <1> %define PANGO_GRAVITY_AUTO 	 4
  8993                              <1> 
  8994                              <1> ;;enum PangoGravityHint
  8995                              <1> %define PANGO_GRAVITY_HINT_LINE 	 2
  8996                              <1> %define PANGO_GRAVITY_HINT_STRONG 	 1
  8997                              <1> %define PANGO_GRAVITY_HINT_NATURAL 	 0
  8998                              <1> 
  8999                              <1> ;;enum PangoScript
  9000                              <1> %define PANGO_SCRIPT_TAGBANWA 	 44
  9001                              <1> %define PANGO_SCRIPT_NEW_TAI_LUE 	 53
  9002                              <1> %define PANGO_SCRIPT_GOTHIC 	 12
  9003                              <1> %define PANGO_SCRIPT_LINEAR_B 	 50
  9004                              <1> %define PANGO_SCRIPT_KANNADA 	 20
  9005                              <1> %define PANGO_SCRIPT_OGHAM 	 28
  9006                              <1> %define PANGO_SCRIPT_MONGOLIAN 	 26
  9007                              <1> %define PANGO_SCRIPT_COMMON 	 0
  9008                              <1> %define PANGO_SCRIPT_BOPOMOFO 	 4
  9009                              <1> %define PANGO_SCRIPT_SYLOTI_NAGRI 	 57
  9010                              <1> %define PANGO_SCRIPT_KHMER 	 22
  9011                              <1> %define PANGO_SCRIPT_LATIN 	 24
  9012                              <1> %define PANGO_SCRIPT_GLAGOLITIC 	 55
  9013                              <1> %define PANGO_SCRIPT_GREEK 	 13
  9014                              <1> %define PANGO_SCRIPT_DEVANAGARI 	 9
  9015                              <1> %define PANGO_SCRIPT_OLD_ITALIC 	 29
  9016                              <1> %define PANGO_SCRIPT_UNKNOWN 	 60
  9017                              <1> %define PANGO_SCRIPT_BRAILLE 	 45
  9018                              <1> %define PANGO_SCRIPT_HANUNOO 	 42
  9019                              <1> %define PANGO_SCRIPT_COPTIC 	 6
  9020                              <1> %define PANGO_SCRIPT_INHERITED 	 0
  9021                              <1> %define PANGO_SCRIPT_TIFINAGH 	 56
  9022                              <1> %define PANGO_SCRIPT_CUNEIFORM 	 62
  9023                              <1> %define PANGO_SCRIPT_GEORGIAN 	 11
  9024                              <1> %define PANGO_SCRIPT_YI 	 40
  9025                              <1> %define PANGO_SCRIPT_LYCIAN 	 75
  9026                              <1> %define PANGO_SCRIPT_SYRIAC 	 33
  9027                              <1> %define PANGO_SCRIPT_TAI_LE 	 51
  9028                              <1> %define PANGO_SCRIPT_LAO 	 23
  9029                              <1> %define PANGO_SCRIPT_PHAGS_PA 	 64
  9030                              <1> %define PANGO_SCRIPT_BALINESE 	 61
  9031                              <1> %define PANGO_SCRIPT_BUGINESE 	 54
  9032                              <1> %define PANGO_SCRIPT_CYPRIOT 	 46
  9033                              <1> %define PANGO_SCRIPT_TIBETAN 	 38
  9034                              <1> %define PANGO_SCRIPT_HANGUL 	 17
  9035                              <1> %define PANGO_SCRIPT_NKO 	 65
  9036                              <1> %define PANGO_SCRIPT_CYRILLIC 	 7
  9037                              <1> %define PANGO_SCRIPT_CHAM 	 71
  9038                              <1> %define PANGO_SCRIPT_HIRAGANA 	 19
  9039                              <1> %define PANGO_SCRIPT_TELUGU 	 35
  9040                              <1> %define PANGO_SCRIPT_RUNIC 	 31
  9041                              <1> %define PANGO_SCRIPT_SUNDANESE 	 69
  9042                              <1> %define PANGO_SCRIPT_KAYAH_LI 	 66
  9043                              <1> %define PANGO_SCRIPT_SINHALA 	 32
  9044                              <1> %define PANGO_SCRIPT_UGARITIC 	 52
  9045                              <1> %define PANGO_SCRIPT_DESERET 	 8
  9046                              <1> %define PANGO_SCRIPT_TAMIL 	 34
  9047                              <1> %define PANGO_SCRIPT_THAI 	 37
  9048                              <1> %define PANGO_SCRIPT_REJANG 	 68
  9049                              <1> %define PANGO_SCRIPT_KATAKANA 	 21
  9050                              <1> %define PANGO_SCRIPT_OLD_PERSIAN 	 58
  9051                              <1> %define PANGO_SCRIPT_HAN 	 16
  9052                              <1> %define PANGO_SCRIPT_ARABIC 	 1
  9053                              <1> %define PANGO_SCRIPT_KHAROSHTHI 	 59
  9054                              <1> %define PANGO_SCRIPT_MALAYALAM 	 25
  9055                              <1> %define PANGO_SCRIPT_OL_CHIKI 	 72
  9056                              <1> %define PANGO_SCRIPT_SAURASHTRA 	 70
  9057                              <1> %define PANGO_SCRIPT_LYDIAN 	 76
  9058                              <1> 
  9059                              <1> %define PANGO_SCRIPT_CHEROKEE 	 5
  9060                              <1> %define PANGO_SCRIPT_BUHID 	 43
  9061                              <1> %define PANGO_SCRIPT_TAGALOG 	 41
  9062                              <1> %define PANGO_SCRIPT_ETHIOPIC 	 10
  9063                              <1> %define PANGO_SCRIPT_VAI 	 73
  9064                              <1> %define PANGO_SCRIPT_INVALID_CODE 	 -1
  9065                              <1> %define PANGO_SCRIPT_LEPCHA 	 67
  9066                              <1> %define PANGO_SCRIPT_LIMBU 	 47
  9067                              <1> %define PANGO_SCRIPT_GURMUKHI 	 15
  9068                              <1> %define PANGO_SCRIPT_CARIAN 	 74
  9069                              <1> %define PANGO_SCRIPT_CANADIAN_ABORIGINAL 	 39
  9070                              <1> %define PANGO_SCRIPT_MYANMAR 	 27
  9071                              <1> %define PANGO_SCRIPT_ARMENIAN 	 2
  9072                              <1> %define PANGO_SCRIPT_OSMANYA 	 48
  9073                              <1> %define PANGO_SCRIPT_BENGALI 	 3
  9074                              <1> %define PANGO_SCRIPT_HEBREW 	 18
  9075                              <1> %define PANGO_SCRIPT_GUJARATI 	 14
  9076                              <1> %define PANGO_SCRIPT_PHOENICIAN 	 63
  9077                              <1> %define PANGO_SCRIPT_SHAVIAN 	 49
  9078                              <1> %define PANGO_SCRIPT_ORIYA 	 30
  9079                              <1> %define PANGO_SCRIPT_THAANA 	 36
  9080                              <1> 
  9081                              <1> ;;enum PangoBidiType
  9082                              <1> %define PANGO_BIDI_TYPE_RLO 	 6
  9083                              <1> %define PANGO_BIDI_TYPE_ET 	 10
  9084                              <1> %define PANGO_BIDI_TYPE_B 	 15
  9085                              <1> %define PANGO_BIDI_TYPE_EN 	 8
  9086                              <1> %define PANGO_BIDI_TYPE_AL 	 4
  9087                              <1> %define PANGO_BIDI_TYPE_R 	 3
  9088                              <1> %define PANGO_BIDI_TYPE_NSM 	 13
  9089                              <1> %define PANGO_BIDI_TYPE_RLE 	 5
  9090                              <1> %define PANGO_BIDI_TYPE_LRE 	 1
  9091                              <1> %define PANGO_BIDI_TYPE_AN 	 11
  9092                              <1> %define PANGO_BIDI_TYPE_ES 	 9
  9093                              <1> %define PANGO_BIDI_TYPE_S 	 16
  9094                              <1> %define PANGO_BIDI_TYPE_L 	 0
  9095                              <1> %define PANGO_BIDI_TYPE_PDF 	 7
  9096                              <1> %define PANGO_BIDI_TYPE_WS 	 17
  9097                              <1> %define PANGO_BIDI_TYPE_BN 	 14
  9098                              <1> %define PANGO_BIDI_TYPE_ON 	 18
  9099                              <1> %define PANGO_BIDI_TYPE_LRO 	 2
  9100                              <1> %define PANGO_BIDI_TYPE_CS 	 12
  9101                              <1> 
  9102                              <1> ;;enum PangoDirection
  9103                              <1> %define PANGO_DIRECTION_LTR 	 0
  9104                              <1> %define PANGO_DIRECTION_WEAK_RTL 	 5
  9105                              <1> %define PANGO_DIRECTION_NEUTRAL 	 6
  9106                              <1> %define PANGO_DIRECTION_RTL 	 1
  9107                              <1> %define PANGO_DIRECTION_TTB_LTR 	 2
  9108                              <1> %define PANGO_DIRECTION_TTB_RTL 	 3
  9109                              <1> %define PANGO_DIRECTION_WEAK_LTR 	 4
  9110                              <1> 
  9111                              <1> ;;enum PangoStyle
  9112                              <1> %define PANGO_STYLE_OBLIQUE 	 1
  9113                              <1> %define PANGO_STYLE_ITALIC 	 2
  9114                              <1> %define PANGO_STYLE_NORMAL 	 0
  9115                              <1> 
  9116                              <1> ;;enum PangoVariant
  9117                              <1> %define PANGO_VARIANT_NORMAL 	 0
  9118                              <1> %define PANGO_VARIANT_SMALL_CAPS 	 1
  9119                              <1> 
  9120                              <1> ;;enum PangoWeight
  9121                              <1> %define PANGO_WEIGHT_HEAVY 	 900
  9122                              <1> %define PANGO_WEIGHT_ULTRABOLD 	 800
  9123                              <1> %define PANGO_WEIGHT_ULTRAHEAVY 	 1000
  9124                              <1> %define PANGO_WEIGHT_SEMIBOLD 	 600
  9125                              <1> %define PANGO_WEIGHT_BOLD 	 700
  9126                              <1> %define PANGO_WEIGHT_NORMAL 	 400
  9127                              <1> %define PANGO_WEIGHT_BOOK 	 380
  9128                              <1> %define PANGO_WEIGHT_LIGHT 	 300
  9129                              <1> %define PANGO_WEIGHT_MEDIUM 	 500
  9130                              <1> %define PANGO_WEIGHT_THIN 	 100
  9131                              <1> %define PANGO_WEIGHT_ULTRALIGHT 	 200
  9132                              <1> 
  9133                              <1> ;;enum PangoStretch
  9134                              <1> %define PANGO_STRETCH_ULTRA_EXPANDED 	 8
  9135                              <1> %define PANGO_STRETCH_CONDENSED 	 2
  9136                              <1> %define PANGO_STRETCH_EXTRA_CONDENSED 	 1
  9137                              <1> %define PANGO_STRETCH_ULTRA_CONDENSED 	 0
  9138                              <1> %define PANGO_STRETCH_SEMI_CONDENSED 	 3
  9139                              <1> %define PANGO_STRETCH_NORMAL 	 4
  9140                              <1> %define PANGO_STRETCH_SEMI_EXPANDED 	 5
  9141                              <1> %define PANGO_STRETCH_EXPANDED 	 6
  9142                              <1> %define PANGO_STRETCH_EXTRA_EXPANDED 	 7
  9143                              <1> 
  9144                              <1> ;;enum PangoFontMask
  9145                              <1> %define PANGO_FONT_MASK_SIZE 	 1 << 5
  9146                              <1> %define PANGO_FONT_MASK_STRETCH 	 1 << 4
  9147                              <1> %define PANGO_FONT_MASK_VARIANT 	 1 << 2
  9148                              <1> %define PANGO_FONT_MASK_STYLE 	 1 << 1
  9149                              <1> %define PANGO_FONT_MASK_GRAVITY 	 1 << 6
  9150                              <1> %define PANGO_FONT_MASK_WEIGHT 	 1 << 3
  9151                              <1> %define PANGO_FONT_MASK_FAMILY 	 1 << 0
  9152                              <1> 
  9153                              <1> ;;enum PangoAttrType
  9154                              <1> %define PANGO_ATTR_ABSOLUTE_SIZE 	 20
  9155                              <1> %define PANGO_ATTR_SCALE 	 15
  9156                              <1> %define PANGO_ATTR_FALLBACK 	 16
  9157                              <1> %define PANGO_ATTR_STRETCH 	 6
  9158                              <1> %define PANGO_ATTR_BACKGROUND 	 10
  9159                              <1> %define PANGO_ATTR_RISE 	 13
  9160                              <1> %define PANGO_ATTR_GRAVITY_HINT 	 22
  9161                              <1> %define PANGO_ATTR_SIZE 	 7
  9162                              <1> %define PANGO_ATTR_STRIKETHROUGH_COLOR 	 19
  9163                              <1> %define PANGO_ATTR_UNDERLINE_COLOR 	 18
  9164                              <1> %define PANGO_ATTR_VARIANT 	 5
  9165                              <1> %define PANGO_ATTR_SHAPE 	 14
  9166                              <1> %define PANGO_ATTR_WEIGHT 	 4
  9167                              <1> %define PANGO_ATTR_STYLE 	 3
  9168                              <1> %define PANGO_ATTR_LANGUAGE 	 1
  9169                              <1> %define PANGO_ATTR_GRAVITY 	 21
  9170                              <1> %define PANGO_ATTR_INVALID 	 0
  9171                              <1> %define PANGO_ATTR_FONT_DESC 	 8
  9172                              <1> %define PANGO_ATTR_LETTER_SPACING 	 17
  9173                              <1> %define PANGO_ATTR_FAMILY 	 2
  9174                              <1> %define PANGO_ATTR_UNDERLINE 	 11
  9175                              <1> %define PANGO_ATTR_FOREGROUND 	 9
  9176                              <1> %define PANGO_ATTR_STRIKETHROUGH 	 12
  9177                              <1> 
  9178                              <1> ;;enum PangoUnderline
  9179                              <1> %define PANGO_UNDERLINE_LOW 	 3
  9180                              <1> %define PANGO_UNDERLINE_NONE 	 0
  9181                              <1> %define PANGO_UNDERLINE_DOUBLE 	 2
  9182                              <1> %define PANGO_UNDERLINE_SINGLE 	 1
  9183                              <1> %define PANGO_UNDERLINE_ERROR 	 4
  9184                              <1> 
  9185                              <1> ;;enum PangoTabAlign
  9186                              <1> %define PANGO_TAB_LEFT 	 0
  9187                              <1> 
  9188                              <1> ;;enum PangoAlignment
  9189                              <1> %define PANGO_ALIGN_RIGHT 	 2
  9190                              <1> %define PANGO_ALIGN_LEFT 	 0
  9191                              <1> %define PANGO_ALIGN_CENTER 	 1
  9192                              <1> 
  9193                              <1> ;;enum PangoWrapMode
  9194                              <1> %define PANGO_WRAP_WORD 	 0
  9195                              <1> %define PANGO_WRAP_WORD_CHAR 	 2
  9196                              <1> %define PANGO_WRAP_CHAR 	 1
  9197                              <1> 
  9198                              <1> ;;enum PangoEllipsizeMode
  9199                              <1> %define PANGO_ELLIPSIZE_NONE 	 0
  9200                              <1> %define PANGO_ELLIPSIZE_END 	 3
  9201                              <1> %define PANGO_ELLIPSIZE_START 	 1
  9202                              <1> %define PANGO_ELLIPSIZE_MIDDLE 	 2
  9203                              <1> 
  9204                              <1> ;;enum PangoRenderPart
  9205                              <1> %define PANGO_RENDER_PART_FOREGROUND 	 0
  9206                              <1> %define PANGO_RENDER_PART_UNDERLINE 	 2
  9207                              <1> %define PANGO_RENDER_PART_STRIKETHROUGH 	 3
  9208                              <1> %define PANGO_RENDER_PART_BACKGROUND 	 1
  9209                              <1> 
  9210                              <1> ;;enum GdkByteOrder
  9211                              <1> %define GDK_MSB_FIRST 	 1
  9212                              <1> %define GDK_LSB_FIRST 	 0
  9213                              <1> 
  9214                              <1> ;;enum GdkModifierType
  9215                              <1> %define GDK_MOD4_MASK 	 1 << 6
  9216                              <1> %define GDK_BUTTON1_MASK 	 1 << 8
  9217                              <1> %define GDK_MODIFIER_MASK 	 0x5c001fff
  9218                              <1> %define GDK_LOCK_MASK 	 1 << 1
  9219                              <1> %define GDK_HYPER_MASK 	 1 << 27
  9220                              <1> %define GDK_BUTTON4_MASK 	 1 << 11
  9221                              <1> %define GDK_SHIFT_MASK 	 1 << 0
  9222                              <1> %define GDK_BUTTON3_MASK 	 1 << 10
  9223                              <1> %define GDK_MOD3_MASK 	 1 << 5
  9224                              <1> %define GDK_MOD2_MASK 	 1 << 4
  9225                              <1> %define GDK_MOD5_MASK 	 1 << 7
  9226                              <1> %define GDK_SUPER_MASK 	 1 << 26
  9227                              <1> %define GDK_BUTTON5_MASK 	 1 << 12
  9228                              <1> %define GDK_META_MASK 	 1 << 28
  9229                              <1> %define GDK_BUTTON2_MASK 	 1 << 9
  9230                              <1> %define GDK_CONTROL_MASK 	 1 << 2
  9231                              <1> %define GDK_MOD1_MASK 	 1 << 3
  9232                              <1> %define GDK_RELEASE_MASK 	 1 << 30
  9233                              <1> 
  9234                              <1> ;;enum GdkInputCondition
  9235                              <1> %define GDK_INPUT_WRITE 	 1 << 1
  9236                              <1> %define GDK_INPUT_READ 	 1 << 0
  9237                              <1> %define GDK_INPUT_EXCEPTION 	 1 << 2
  9238                              <1> 
  9239                              <1> ;;enum GdkStatus
  9240                              <1> %define GDK_ERROR_PARAM 	 -2
  9241                              <1> %define GDK_OK 	 0
  9242                              <1> %define GDK_ERROR_MEM 	 -4
  9243                              <1> %define GDK_ERROR 	 -1
  9244                              <1> %define GDK_ERROR_FILE 	 -3
  9245                              <1> 
  9246                              <1> ;;enum GdkGrabStatus
  9247                              <1> %define GDK_GRAB_FROZEN 	 4
  9248                              <1> %define GDK_GRAB_ALREADY_GRABBED 	 1
  9249                              <1> %define GDK_GRAB_SUCCESS 	 0
  9250                              <1> %define GDK_GRAB_NOT_VIEWABLE 	 3
  9251                              <1> %define GDK_GRAB_INVALID_TIME 	 2
  9252                              <1> 
  9253                              <1> ;;enum GdkDragAction
  9254                              <1> %define GDK_ACTION_COPY 	 1 << 1
  9255                              <1> %define GDK_ACTION_DEFAULT 	 1 << 0
  9256                              <1> %define GDK_ACTION_ASK 	 1 << 5
  9257                              <1> %define GDK_ACTION_PRIVATE 	 1 << 4
  9258                              <1> %define GDK_ACTION_MOVE 	 1 << 2
  9259                              <1> %define GDK_ACTION_LINK 	 1 << 3
  9260                              <1> 
  9261                              <1> ;;enum GdkDragProtocol
  9262                              <1> %define GDK_DRAG_PROTO_NONE 	 3
  9263                              <1> %define GDK_DRAG_PROTO_OLE2 	 5
  9264                              <1> %define GDK_DRAG_PROTO_ROOTWIN 	 2
  9265                              <1> %define GDK_DRAG_PROTO_WIN32_DROPFILES 	 4
  9266                              <1> %define GDK_DRAG_PROTO_LOCAL 	 6
  9267                              <1> %define GDK_DRAG_PROTO_XDND 	 1
  9268                              <1> %define GDK_DRAG_PROTO_MOTIF 	 0
  9269                              <1> 
  9270                              <1> ;;enum GdkExtensionMode
  9271                              <1> %define GDK_EXTENSION_EVENTS_ALL 	 1
  9272                              <1> %define GDK_EXTENSION_EVENTS_NONE 	 0
  9273                              <1> %define GDK_EXTENSION_EVENTS_CURSOR 	 2
  9274                              <1> 
  9275                              <1> ;;enum GdkInputSource
  9276                              <1> %define GDK_SOURCE_ERASER 	 2
  9277                              <1> %define GDK_SOURCE_PEN 	 1
  9278                              <1> %define GDK_SOURCE_MOUSE 	 0
  9279                              <1> %define GDK_SOURCE_CURSOR 	 3
  9280                              <1> 
  9281                              <1> ;;enum GdkInputMode
  9282                              <1> %define GDK_MODE_SCREEN 	 1
  9283                              <1> %define GDK_MODE_DISABLED 	 0
  9284                              <1> %define GDK_MODE_WINDOW 	 2
  9285                              <1> 
  9286                              <1> ;;enum GdkAxisUse
  9287                              <1> %define GDK_AXIS_Y 	 2
  9288                              <1> %define GDK_AXIS_X 	 1
  9289                              <1> %define GDK_AXIS_IGNORE 	 0
  9290                              <1> %define GDK_AXIS_LAST 	 7
  9291                              <1> %define GDK_AXIS_XTILT 	 4
  9292                              <1> %define GDK_AXIS_YTILT 	 5
  9293                              <1> %define GDK_AXIS_WHEEL 	 6
  9294                              <1> %define GDK_AXIS_PRESSURE 	 3
  9295                              <1> 
  9296                              <1> ;;enum GdkFilterReturn
  9297                              <1> %define GDK_FILTER_CONTINUE 	 0
  9298                              <1> %define GDK_FILTER_REMOVE 	 2
  9299                              <1> %define GDK_FILTER_TRANSLATE 	 1
  9300                              <1> 
  9301                              <1> ;;enum GdkEventType
  9302                              <1> %define GDK_SETTING 	 33
  9303                              <1> %define GDK_LEAVE_NOTIFY 	 11
  9304                              <1> %define GDK_3BUTTON_PRESS 	 6
  9305                              <1> %define GDK_CLIENT_EVENT 	 28
  9306                              <1> %define GDK_WINDOW_STATE 	 32
  9307                              <1> %define GDK_VISIBILITY_NOTIFY 	 29
  9308                              <1> %define GDK_SELECTION_NOTIFY 	 19
  9309                              <1> %define GDK_MOTION_NOTIFY 	 3
  9310                              <1> %define GDK_NOTHING 	 -1
  9311                              <1> %define GDK_SELECTION_CLEAR 	 17
  9312                              <1> %define GDK_SCROLL 	 31
  9313                              <1> %define GDK_OWNER_CHANGE 	 34
  9314                              <1> %define GDK_DRAG_LEAVE 	 23
  9315                              <1> %define GDK_EVENT_LAST 	 0
  9316                              <1> %define GDK_DROP_START 	 26
  9317                              <1> %define GDK_DESTROY 	 1
  9318                              <1> %define GDK_MAP 	 14
  9319                              <1> %define GDK_DELETE 	 0
  9320                              <1> %define GDK_2BUTTON_PRESS 	 5
  9321                              <1> %define GDK_BUTTON_PRESS 	 4
  9322                              <1> %define GDK_DROP_FINISHED 	 27
  9323                              <1> %define GDK_ENTER_NOTIFY 	 10
  9324                              <1> %define GDK_GRAB_BROKEN 	 35
  9325                              <1> %define GDK_DRAG_ENTER 	 22
  9326                              <1> %define GDK_UNMAP 	 15
  9327                              <1> %define GDK_CONFIGURE 	 13
  9328                              <1> %define GDK_PROPERTY_NOTIFY 	 16
  9329                              <1> %define GDK_FOCUS_CHANGE 	 12
  9330                              <1> %define GDK_SELECTION_REQUEST 	 18
  9331                              <1> %define GDK_KEY_RELEASE 	 9
  9332                              <1> %define GDK_DRAG_STATUS 	 25
  9333                              <1> %define GDK_DRAG_MOTION 	 24
  9334                              <1> %define GDK_PROXIMITY_IN 	 20
  9335                              <1> %define GDK_BUTTON_RELEASE 	 7
  9336                              <1> %define GDK_PROXIMITY_OUT 	 21
  9337                              <1> %define GDK_EXPOSE 	 2
  9338                              <1> %define GDK_DAMAGE 	 36
  9339                              <1> %define GDK_KEY_PRESS 	 8
  9340                              <1> %define GDK_NO_EXPOSE 	 30
  9341                              <1> 
  9342                              <1> ;;enum GdkEventMask
  9343                              <1> %define GDK_PROXIMITY_OUT_MASK 	 1 << 19
  9344                              <1> %define GDK_KEY_PRESS_MASK 	 1 << 10
  9345                              <1> %define GDK_SCROLL_MASK 	 1 << 21
  9346                              <1> %define GDK_POINTER_MOTION_HINT_MASK 	 1 << 3
  9347                              <1> %define GDK_BUTTON_RELEASE_MASK 	 1 << 9
  9348                              <1> %define GDK_STRUCTURE_MASK 	 1 << 15
  9349                              <1> %define GDK_VISIBILITY_NOTIFY_MASK 	 1 << 17
  9350                              <1> %define GDK_LEAVE_NOTIFY_MASK 	 1 << 13
  9351                              <1> %define GDK_EXPOSURE_MASK 	 1 << 1
  9352                              <1> %define GDK_ALL_EVENTS_MASK 	 0x3FFFFE
  9353                              <1> %define GDK_PROPERTY_CHANGE_MASK 	 1 << 16
  9354                              <1> %define GDK_BUTTON_MOTION_MASK 	 1 << 4
  9355                              <1> %define GDK_BUTTON_PRESS_MASK 	 1 << 8
  9356                              <1> %define GDK_ENTER_NOTIFY_MASK 	 1 << 12
  9357                              <1> %define GDK_BUTTON1_MOTION_MASK 	 1 << 5
  9358                              <1> %define GDK_PROXIMITY_IN_MASK 	 1 << 18
  9359                              <1> %define GDK_SUBSTRUCTURE_MASK 	 1 << 20
  9360                              <1> %define GDK_FOCUS_CHANGE_MASK 	 1 << 14
  9361                              <1> %define GDK_BUTTON3_MOTION_MASK 	 1 << 7
  9362                              <1> %define GDK_BUTTON2_MOTION_MASK 	 1 << 6
  9363                              <1> %define GDK_POINTER_MOTION_MASK 	 1 << 2
  9364                              <1> %define GDK_KEY_RELEASE_MASK 	 1 << 11
  9365                              <1> 
  9366                              <1> ;;enum GdkVisibilityState
  9367                              <1> %define GDK_VISIBILITY_FULLY_OBSCURED 	 2
  9368                              <1> %define GDK_VISIBILITY_UNOBSCURED 	 0
  9369                              <1> %define GDK_VISIBILITY_PARTIAL 	 1
  9370                              <1> 
  9371                              <1> ;;enum GdkScrollDirection
  9372                              <1> %define GDK_SCROLL_RIGHT 	 3
  9373                              <1> %define GDK_SCROLL_DOWN 	 1
  9374                              <1> %define GDK_SCROLL_UP 	 0
  9375                              <1> %define GDK_SCROLL_LEFT 	 2
  9376                              <1> 
  9377                              <1> ;;enum GdkNotifyType
  9378                              <1> %define GDK_NOTIFY_NONLINEAR 	 3
  9379                              <1> %define GDK_NOTIFY_NONLINEAR_VIRTUAL 	 4
  9380                              <1> %define GDK_NOTIFY_VIRTUAL 	 1
  9381                              <1> %define GDK_NOTIFY_UNKNOWN 	 5
  9382                              <1> %define GDK_NOTIFY_INFERIOR 	 2
  9383                              <1> %define GDK_NOTIFY_ANCESTOR 	 0
  9384                              <1> 
  9385                              <1> ;;enum GdkCrossingMode
  9386                              <1> %define GDK_CROSSING_GTK_GRAB 	 3
  9387                              <1> %define GDK_CROSSING_GRAB 	 1
  9388                              <1> %define GDK_CROSSING_UNGRAB 	 2
  9389                              <1> %define GDK_CROSSING_STATE_CHANGED 	 5
  9390                              <1> %define GDK_CROSSING_NORMAL 	 0
  9391                              <1> %define GDK_CROSSING_GTK_UNGRAB 	 4
  9392                              <1> 
  9393                              <1> ;;enum GdkPropertyState
  9394                              <1> %define GDK_PROPERTY_NEW_VALUE 	 0
  9395                              <1> %define GDK_PROPERTY_DELETE 	 1
  9396                              <1> 
  9397                              <1> ;;enum GdkWindowState
  9398                              <1> %define GDK_WINDOW_STATE_MAXIMIZED 	 1 << 2
  9399                              <1> %define GDK_WINDOW_STATE_WITHDRAWN 	 1 << 0
  9400                              <1> %define GDK_WINDOW_STATE_ABOVE 	 1 << 5
  9401                              <1> %define GDK_WINDOW_STATE_ICONIFIED 	 1 << 1
  9402                              <1> %define GDK_WINDOW_STATE_BELOW 	 1 << 6
  9403                              <1> %define GDK_WINDOW_STATE_FULLSCREEN 	 1 << 4
  9404                              <1> %define GDK_WINDOW_STATE_STICKY 	 1 << 3
  9405                              <1> 
  9406                              <1> ;;enum GdkSettingAction
  9407                              <1> %define GDK_SETTING_ACTION_DELETED 	 2
  9408                              <1> %define GDK_SETTING_ACTION_NEW 	 0
  9409                              <1> %define GDK_SETTING_ACTION_CHANGED 	 1
  9410                              <1> 
  9411                              <1> ;;enum GdkOwnerChange
  9412                              <1> %define GDK_OWNER_CHANGE_DESTROY 	 1
  9413                              <1> %define GDK_OWNER_CHANGE_NEW_OWNER 	 0
  9414                              <1> %define GDK_OWNER_CHANGE_CLOSE 	 2
  9415                              <1> 
  9416                              <1> ;;enum GdkRgbDither
  9417                              <1> %define GDK_RGB_DITHER_NORMAL 	 1
  9418                              <1> %define GDK_RGB_DITHER_NONE 	 0
  9419                              <1> %define GDK_RGB_DITHER_MAX 	 2
  9420                              <1> 
  9421                              <1> ;;enum GdkPixbufAlphaMode
  9422                              <1> %define GDK_PIXBUF_ALPHA_BILEVEL 	 0
  9423                              <1> %define GDK_PIXBUF_ALPHA_FULL 	 1
  9424                              <1> 
  9425                              <1> ;;enum GdkColorspace
  9426                              <1> %define GDK_COLORSPACE_RGB 	 0
  9427                              <1> 
  9428                              <1> ;;enum GdkPixbufError
  9429                              <1> %define GDK_PIXBUF_ERROR_UNKNOWN_TYPE 	 3
  9430                              <1> %define GDK_PIXBUF_ERROR_BAD_OPTION 	 2
  9431                              <1> %define GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION 	 4
  9432                              <1> %define GDK_PIXBUF_ERROR_FAILED 	 5
  9433                              <1> %define GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY 	 1
  9434                              <1> %define GDK_PIXBUF_ERROR_CORRUPT_IMAGE 	 0
  9435                              <1> 
  9436                              <1> ;;enum GdkInterpType
  9437                              <1> %define GDK_INTERP_TILES 	 1
  9438                              <1> %define GDK_INTERP_NEAREST 	 0
  9439                              <1> %define GDK_INTERP_BILINEAR 	 2
  9440                              <1> %define GDK_INTERP_HYPER 	 3
  9441                              <1> 
  9442                              <1> ;;enum GdkPixbufRotation
  9443                              <1> %define GDK_PIXBUF_ROTATE_UPSIDEDOWN 	 180
  9444                              <1> %define GDK_PIXBUF_ROTATE_CLOCKWISE 	 270
  9445                              <1> %define GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE 	 90
  9446                              <1> %define GDK_PIXBUF_ROTATE_NONE 	 0
  9447                              <1> 
  9448                              <1> ;;enum GdkCursorType
  9449                              <1> %define GDK_CROSS 	 30
  9450                              <1> %define GDK_EXCHANGE 	 50
  9451                              <1> %define GDK_WATCH 	 150
  9452                              <1> %define GDK_LEFTBUTTON 	 74
  9453                              <1> %define GDK_HAND1 	 58
  9454                              <1> %define GDK_SB_RIGHT_ARROW 	 112
  9455                              <1> %define GDK_HEART 	 62
  9456                              <1> %define GDK_BOTTOM_TEE 	 18
  9457                              <1> %define GDK_BOTTOM_LEFT_CORNER 	 12
  9458                              <1> %define GDK_COFFEE_MUG 	 28
  9459                              <1> %define GDK_LEFT_SIDE 	 70
  9460                              <1> %define GDK_RTL_LOGO 	 102
  9461                              <1> %define GDK_X_CURSOR 	 0
  9462                              <1> %define GDK_GUMBY 	 56
  9463                              <1> %define GDK_BOGOSITY 	 10
  9464                              <1> %define GDK_UMBRELLA 	 146
  9465                              <1> %define GDK_BASED_ARROW_DOWN 	 4
  9466                              <1> %define GDK_TCROSS 	 130
  9467                              <1> %define GDK_SAILBOAT 	 104
  9468                              <1> %define GDK_MAN 	 80
  9469                              <1> %define GDK_UL_ANGLE 	 144
  9470                              <1> %define GDK_ICON 	 64
  9471                              <1> %define GDK_CLOCK 	 26
  9472                              <1> %define GDK_PENCIL 	 86
  9473                              <1> %define GDK_LR_ANGLE 	 78
  9474                              <1> %define GDK_TOP_RIGHT_CORNER 	 136
  9475                              <1> %define GDK_SB_V_DOUBLE_ARROW 	 116
  9476                              <1> %define GDK_RIGHT_TEE 	 98
  9477                              <1> %define GDK_MOUSE 	 84
  9478                              <1> %define GDK_BOTTOM_SIDE 	 16
  9479                              <1> %define GDK_RIGHT_PTR 	 94
  9480                              <1> %define GDK_IRON_CROSS 	 66
  9481                              <1> %define GDK_TOP_SIDE 	 138
  9482                              <1> %define GDK_PIRATE 	 88
  9483                              <1> %define GDK_XTERM 	 152
  9484                              <1> %define GDK_CENTER_PTR 	 22
  9485                              <1> %define GDK_BOTTOM_RIGHT_CORNER 	 14
  9486                              <1> %define GDK_FLEUR 	 52
  9487                              <1> %define GDK_GOBBLER 	 54
  9488                              <1> %define GDK_DRAFT_SMALL 	 46
  9489                              <1> %define GDK_SB_H_DOUBLE_ARROW 	 108
  9490                              <1> %define GDK_DOTBOX 	 40
  9491                              <1> %define GDK_DRAPED_BOX 	 48
  9492                              <1> %define GDK_CIRCLE 	 24
  9493                              <1> %define GDK_ARROW 	 2
  9494                              <1> %define GDK_TOP_LEFT_ARROW 	 132
  9495                              <1> %define GDK_TREK 	 142
  9496                              <1> %define GDK_QUESTION_ARROW 	 92
  9497                              <1> %define GDK_SPIDER 	 122
  9498                              <1> %define GDK_LL_ANGLE 	 76
  9499                              <1> %define GDK_HAND2 	 60
  9500                              <1> %define GDK_SB_LEFT_ARROW 	 110
  9501                              <1> %define GDK_RIGHTBUTTON 	 100
  9502                              <1> %define GDK_CURSOR_IS_PIXMAP 	 -1
  9503                              <1> %define GDK_LEFT_TEE 	 72
  9504                              <1> %define GDK_LEFT_PTR 	 68
  9505                              <1> %define GDK_LAST_CURSOR 	 0
  9506                              <1> %define GDK_MIDDLEBUTTON 	 82
  9507                              <1> %define GDK_DOT 	 38
  9508                              <1> %define GDK_CROSS_REVERSE 	 32
  9509                              <1> %define GDK_BLANK_CURSOR 	 -2
  9510                              <1> %define GDK_SB_DOWN_ARROW 	 106
  9511                              <1> %define GDK_TARGET 	 128
  9512                              <1> %define GDK_SHUTTLE 	 118
  9513                              <1> %define GDK_DOUBLE_ARROW 	 42
  9514                              <1> %define GDK_TOP_LEFT_CORNER 	 134
  9515                              <1> %define GDK_UR_ANGLE 	 148
  9516                              <1> %define GDK_DIAMOND_CROSS 	 36
  9517                              <1> %define GDK_CROSSHAIR 	 34
  9518                              <1> %define GDK_BOAT 	 8
  9519                              <1> %define GDK_STAR 	 126
  9520                              <1> %define GDK_SIZING 	 120
  9521                              <1> %define GDK_BASED_ARROW_UP 	 6
  9522                              <1> %define GDK_PLUS 	 90
  9523                              <1> %define GDK_SB_UP_ARROW 	 114
  9524                              <1> %define GDK_RIGHT_SIDE 	 96
  9525                              <1> %define GDK_DRAFT_LARGE 	 44
  9526                              <1> %define GDK_TOP_TEE 	 140
  9527                              <1> %define GDK_SPRAYCAN 	 124
  9528                              <1> %define GDK_BOX_SPIRAL 	 20
  9529                              <1> 
  9530                              <1> ;;enum GdkCapStyle
  9531                              <1> %define GDK_CAP_ROUND 	 2
  9532                              <1> %define GDK_CAP_BUTT 	 1
  9533                              <1> %define GDK_CAP_NOT_LAST 	 0
  9534                              <1> %define GDK_CAP_PROJECTING 	 3
  9535                              <1> 
  9536                              <1> ;;enum GdkFill
  9537                              <1> %define GDK_STIPPLED 	 2
  9538                              <1> %define GDK_SOLID 	 0
  9539                              <1> %define GDK_OPAQUE_STIPPLED 	 3
  9540                              <1> %define GDK_TILED 	 1
  9541                              <1> 
  9542                              <1> ;;enum GdkFunction
  9543                              <1> %define GDK_CLEAR 	 3
  9544                              <1> %define GDK_AND_INVERT 	 6
  9545                              <1> %define GDK_EQUIV 	 9
  9546                              <1> %define GDK_AND_REVERSE 	 5
  9547                              <1> %define GDK_INVERT 	 1
  9548                              <1> %define GDK_OR_INVERT 	 12
  9549                              <1> %define GDK_OR_REVERSE 	 10
  9550                              <1> %define GDK_NOR 	 14
  9551                              <1> %define GDK_OR 	 8
  9552                              <1> %define GDK_AND 	 4
  9553                              <1> %define GDK_COPY 	 0
  9554                              <1> %define GDK_NOOP 	 7
  9555                              <1> %define GDK_COPY_INVERT 	 11
  9556                              <1> %define GDK_SET 	 15
  9557                              <1> %define GDK_XOR 	 2
  9558                              <1> %define GDK_NAND 	 13
  9559                              <1> 
  9560                              <1> ;;enum GdkJoinStyle
  9561                              <1> %define GDK_JOIN_ROUND 	 1
  9562                              <1> %define GDK_JOIN_BEVEL 	 2
  9563                              <1> %define GDK_JOIN_MITER 	 0
  9564                              <1> 
  9565                              <1> ;;enum GdkLineStyle
  9566                              <1> %define GDK_LINE_ON_OFF_DASH 	 1
  9567                              <1> %define GDK_LINE_DOUBLE_DASH 	 2
  9568                              <1> %define GDK_LINE_SOLID 	 0
  9569                              <1> 
  9570                              <1> ;;enum GdkSubwindowMode
  9571                              <1> %define GDK_CLIP_BY_CHILDREN 	 0
  9572                              <1> %define GDK_INCLUDE_INFERIORS 	 1
  9573                              <1> 
  9574                              <1> ;;enum GdkGCValuesMask
  9575                              <1> %define GDK_GC_FILL 	 1 << 4
  9576                              <1> %define GDK_GC_TS_Y_ORIGIN 	 1 << 10
  9577                              <1> %define GDK_GC_JOIN_STYLE 	 1 << 17
  9578                              <1> %define GDK_GC_LINE_STYLE 	 1 << 15
  9579                              <1> %define GDK_GC_FOREGROUND 	 1 << 0
  9580                              <1> %define GDK_GC_FUNCTION 	 1 << 3
  9581                              <1> %define GDK_GC_TILE 	 1 << 5
  9582                              <1> %define GDK_GC_BACKGROUND 	 1 << 1
  9583                              <1> %define GDK_GC_CLIP_X_ORIGIN 	 1 << 11
  9584                              <1> %define GDK_GC_CLIP_Y_ORIGIN 	 1 << 12
  9585                              <1> %define GDK_GC_SUBWINDOW 	 1 << 8
  9586                              <1> %define GDK_GC_CAP_STYLE 	 1 << 16
  9587                              <1> %define GDK_GC_CLIP_MASK 	 1 << 7
  9588                              <1> %define GDK_GC_EXPOSURES 	 1 << 13
  9589                              <1> %define GDK_GC_FONT 	 1 << 2
  9590                              <1> %define GDK_GC_TS_X_ORIGIN 	 1 << 9
  9591                              <1> %define GDK_GC_LINE_WIDTH 	 1 << 14
  9592                              <1> %define GDK_GC_STIPPLE 	 1 << 6
  9593                              <1> 
  9594                              <1> ;;enum GdkFontType
  9595                              <1> %define GDK_FONT_FONTSET 	 1
  9596                              <1> %define GDK_FONT_FONT 	 0
  9597                              <1> 
  9598                              <1> ;;enum GdkImageType
  9599                              <1> %define GDK_IMAGE_FASTEST 	 2
  9600                              <1> %define GDK_IMAGE_SHARED 	 1
  9601                              <1> %define GDK_IMAGE_NORMAL 	 0
  9602                              <1> 
  9603                              <1> ;;enum GdkPropMode
  9604                              <1> %define GDK_PROP_MODE_PREPEND 	 1
  9605                              <1> %define GDK_PROP_MODE_APPEND 	 2
  9606                              <1> %define GDK_PROP_MODE_REPLACE 	 0
  9607                              <1> 
  9608                              <1> ;;enum GdkFillRule
  9609                              <1> %define GDK_EVEN_ODD_RULE 	 0
  9610                              <1> %define GDK_WINDING_RULE 	 1
  9611                              <1> 
  9612                              <1> ;;enum GdkOverlapType
  9613                              <1> %define GDK_OVERLAP_RECTANGLE_PART 	 2
  9614                              <1> %define GDK_OVERLAP_RECTANGLE_IN 	 0
  9615                              <1> %define GDK_OVERLAP_RECTANGLE_OUT 	 1
  9616                              <1> 
  9617                              <1> ;;enum GdkWindowClass
  9618                              <1> %define GDK_INPUT_OUTPUT 	 0
  9619                              <1> %define GDK_INPUT_ONLY 	 1
  9620                              <1> 
  9621                              <1> ;;enum GdkWindowType
  9622                              <1> %define GDK_WINDOW_DIALOG 	 3
  9623                              <1> %define GDK_WINDOW_FOREIGN 	 5
  9624                              <1> %define GDK_WINDOW_CHILD 	 2
  9625                              <1> %define GDK_WINDOW_OFFSCREEN 	 6
  9626                              <1> %define GDK_WINDOW_ROOT 	 0
  9627                              <1> %define GDK_WINDOW_TOPLEVEL 	 1
  9628                              <1> %define GDK_WINDOW_TEMP 	 4
  9629                              <1> 
  9630                              <1> ;;enum GdkWindowAttributesType
  9631                              <1> %define GDK_WA_WMCLASS 	 1 << 7
  9632                              <1> %define GDK_WA_CURSOR 	 1 << 4
  9633                              <1> %define GDK_WA_TYPE_HINT 	 1 << 9
  9634                              <1> %define GDK_WA_TITLE 	 1 << 1
  9635                              <1> %define GDK_WA_VISUAL 	 1 << 6
  9636                              <1> %define GDK_WA_COLORMAP 	 1 << 5
  9637                              <1> %define GDK_WA_X 	 1 << 2
  9638                              <1> %define GDK_WA_NOREDIR 	 1 << 8
  9639                              <1> %define GDK_WA_Y 	 1 << 3
  9640                              <1> 
  9641                              <1> ;;enum GdkWindowHints
  9642                              <1> %define GDK_HINT_RESIZE_INC 	 1 << 5
  9643                              <1> %define GDK_HINT_MIN_SIZE 	 1 << 1
  9644                              <1> %define GDK_HINT_MAX_SIZE 	 1 << 2
  9645                              <1> %define GDK_HINT_BASE_SIZE 	 1 << 3
  9646                              <1> %define GDK_HINT_POS 	 1 << 0
  9647                              <1> %define GDK_HINT_WIN_GRAVITY 	 1 << 6
  9648                              <1> %define GDK_HINT_USER_SIZE 	 1 << 8
  9649                              <1> %define GDK_HINT_USER_POS 	 1 << 7
  9650                              <1> %define GDK_HINT_ASPECT 	 1 << 4
  9651                              <1> 
  9652                              <1> ;;enum GdkWindowTypeHint
  9653                              <1> %define GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU 	 8
  9654                              <1> %define GDK_WINDOW_TYPE_HINT_NORMAL 	 0
  9655                              <1> %define GDK_WINDOW_TYPE_HINT_DOCK 	 6
  9656                              <1> %define GDK_WINDOW_TYPE_HINT_POPUP_MENU 	 9
  9657                              <1> %define GDK_WINDOW_TYPE_HINT_DND 	 13
  9658                              <1> %define GDK_WINDOW_TYPE_HINT_MENU 	 2
  9659                              <1> %define GDK_WINDOW_TYPE_HINT_COMBO 	 12
  9660                              <1> %define GDK_WINDOW_TYPE_HINT_SPLASHSCREEN 	 4
  9661                              <1> %define GDK_WINDOW_TYPE_HINT_DIALOG 	 1
  9662                              <1> %define GDK_WINDOW_TYPE_HINT_UTILITY 	 5
  9663                              <1> %define GDK_WINDOW_TYPE_HINT_TOOLBAR 	 3
  9664                              <1> %define GDK_WINDOW_TYPE_HINT_NOTIFICATION 	 11
  9665                              <1> %define GDK_WINDOW_TYPE_HINT_TOOLTIP 	 10
  9666                              <1> %define GDK_WINDOW_TYPE_HINT_DESKTOP 	 7
  9667                              <1> 
  9668                              <1> ;;enum GdkWMDecoration
  9669                              <1> %define GDK_DECOR_ALL 	 1 << 0
  9670                              <1> %define GDK_DECOR_MINIMIZE 	 1 << 5
  9671                              <1> %define GDK_DECOR_BORDER 	 1 << 1
  9672                              <1> %define GDK_DECOR_MENU 	 1 << 4
  9673                              <1> %define GDK_DECOR_RESIZEH 	 1 << 2
  9674                              <1> %define GDK_DECOR_TITLE 	 1 << 3
  9675                              <1> %define GDK_DECOR_MAXIMIZE 	 1 << 6
  9676                              <1> 
  9677                              <1> ;;enum GdkWMFunction
  9678                              <1> %define GDK_FUNC_ALL 	 1 << 0
  9679                              <1> %define GDK_FUNC_MINIMIZE 	 1 << 3
  9680                              <1> %define GDK_FUNC_CLOSE 	 1 << 5
  9681                              <1> %define GDK_FUNC_MAXIMIZE 	 1 << 4
  9682                              <1> %define GDK_FUNC_MOVE 	 1 << 2
  9683                              <1> %define GDK_FUNC_RESIZE 	 1 << 1
  9684                              <1> 
  9685                              <1> ;;enum GdkGravity
  9686                              <1> %define GDK_GRAVITY_STATIC 	 8
  9687                              <1> %define GDK_GRAVITY_SOUTH 	 6
  9688                              <1> %define GDK_GRAVITY_CENTER 	 3
  9689                              <1> %define GDK_GRAVITY_NORTH 	 0
  9690                              <1> %define GDK_GRAVITY_SOUTH_WEST 	 5
  9691                              <1> %define GDK_GRAVITY_EAST 	 4
  9692                              <1> %define GDK_GRAVITY_NORTH_WEST 	 1
  9693                              <1> %define GDK_GRAVITY_SOUTH_EAST 	 7
  9694                              <1> %define GDK_GRAVITY_NORTH_EAST 	 1
  9695                              <1> %define GDK_GRAVITY_WEST 	 2
  9696                              <1> 
  9697                              <1> ;;enum GdkWindowEdge
  9698                              <1> %define GDK_WINDOW_EDGE_NORTH_EAST 	 2
  9699                              <1> %define GDK_WINDOW_EDGE_SOUTH 	 6
  9700                              <1> %define GDK_WINDOW_EDGE_NORTH 	 1
  9701                              <1> %define GDK_WINDOW_EDGE_NORTH_WEST 	 0
  9702                              <1> %define GDK_WINDOW_EDGE_EAST 	 4
  9703                              <1> %define GDK_WINDOW_EDGE_WEST 	 3
  9704                              <1> %define GDK_WINDOW_EDGE_SOUTH_EAST 	 7
  9705                              <1> %define GDK_WINDOW_EDGE_SOUTH_WEST 	 5
  9706                              <1> 
  9707                              <1> ;;enum GdkVisualType
  9708                              <1> %define GDK_VISUAL_TRUE_COLOR 	 4
  9709                              <1> %define GDK_VISUAL_STATIC_GRAY 	 0
  9710                              <1> %define GDK_VISUAL_STATIC_COLOR 	 2
  9711                              <1> %define GDK_VISUAL_GRAYSCALE 	 1
  9712                              <1> %define GDK_VISUAL_DIRECT_COLOR 	 5
  9713                              <1> %define GDK_VISUAL_PSEUDO_COLOR 	 3
  9714                              <1> 
  9715                              <1> ;;enum GtkAnchorType
  9716                              <1> %define GTK_ANCHOR_NORTH_WEST 	 2
  9717                              <1> %define GTK_ANCHOR_E 	 GTK_ANCHOR_EAST
  9718                              <1> %define GTK_ANCHOR_NE 	 GTK_ANCHOR_NORTH_EAST
  9719                              <1> %define GTK_ANCHOR_W 	 GTK_ANCHOR_WEST
  9720                              <1> %define GTK_ANCHOR_SE 	 GTK_ANCHOR_SOUTH_EAST
  9721                              <1> %define GTK_ANCHOR_S 	 GTK_ANCHOR_SOUTH
  9722                              <1> %define GTK_ANCHOR_SOUTH_EAST 	 6
  9723                              <1> %define GTK_ANCHOR_EAST 	 8
  9724                              <1> %define GTK_ANCHOR_NW 	 GTK_ANCHOR_NORTH_WEST
  9725                              <1> %define GTK_ANCHOR_SOUTH 	 4
  9726                              <1> %define GTK_ANCHOR_WEST 	 7
  9727                              <1> %define GTK_ANCHOR_NORTH_EAST 	 3
  9728                              <1> %define GTK_ANCHOR_SOUTH_WEST 	 5
  9729                              <1> %define GTK_ANCHOR_SW 	 GTK_ANCHOR_SOUTH_WEST
  9730                              <1> %define GTK_ANCHOR_NORTH 	 1
  9731                              <1> %define GTK_ANCHOR_CENTER 	 0
  9732                              <1> %define GTK_ANCHOR_N 	 GTK_ANCHOR_NORTH
  9733                              <1> 
  9734                              <1> ;;enum GtkArrowPlacement
  9735                              <1> %define GTK_ARROWS_BOTH 	 0
  9736                              <1> %define GTK_ARROWS_END 	 2
  9737                              <1> %define GTK_ARROWS_START 	 1
  9738                              <1> 
  9739                              <1> ;;enum GtkArrowType
  9740                              <1> %define GTK_ARROW_LEFT 	 2
  9741                              <1> %define GTK_ARROW_NONE 	 4
  9742                              <1> %define GTK_ARROW_UP 	 0
  9743                              <1> %define GTK_ARROW_DOWN 	 1
  9744                              <1> %define GTK_ARROW_RIGHT 	 3
  9745                              <1> 
  9746                              <1> ;;enum GtkAttachOptions
  9747                              <1> %define GTK_FILL 	 1 << 2
  9748                              <1> %define GTK_EXPAND 	 1 << 0
  9749                              <1> %define GTK_SHRINK 	 1 << 1
  9750                              <1> 
  9751                              <1> ;;enum GtkButtonBoxStyle
  9752                              <1> %define GTK_BUTTONBOX_END 	 4
  9753                              <1> %define GTK_BUTTONBOX_SPREAD 	 1
  9754                              <1> %define GTK_BUTTONBOX_CENTER 	 5
  9755                              <1> %define GTK_BUTTONBOX_DEFAULT_STYLE 	 0
  9756                              <1> %define GTK_BUTTONBOX_EDGE 	 2
  9757                              <1> %define GTK_BUTTONBOX_START 	 3
  9758                              <1> 
  9759                              <1> ;;enum GtkCurveType
  9760                              <1> %define GTK_CURVE_TYPE_FREE 	 2
  9761                              <1> %define GTK_CURVE_TYPE_SPLINE 	 1
  9762                              <1> %define GTK_CURVE_TYPE_LINEAR 	 0
  9763                              <1> 
  9764                              <1> ;;enum GtkDeleteType
  9765                              <1> %define GTK_DELETE_PARAGRAPH_ENDS 	 5
  9766                              <1> %define GTK_DELETE_WHITESPACE 	 7
  9767                              <1> %define GTK_DELETE_WORD_ENDS 	 1
  9768                              <1> %define GTK_DELETE_DISPLAY_LINE_ENDS 	 4
  9769                              <1> %define GTK_DELETE_DISPLAY_LINES 	 3
  9770                              <1> %define GTK_DELETE_CHARS 	 0
  9771                              <1> %define GTK_DELETE_PARAGRAPHS 	 6
  9772                              <1> %define GTK_DELETE_WORDS 	 2
  9773                              <1> 
  9774                              <1> ;;enum GtkDirectionType
  9775                              <1> %define GTK_DIR_TAB_FORWARD 	 0
  9776                              <1> %define GTK_DIR_LEFT 	 4
  9777                              <1> %define GTK_DIR_RIGHT 	 5
  9778                              <1> %define GTK_DIR_DOWN 	 3
  9779                              <1> %define GTK_DIR_UP 	 2
  9780                              <1> %define GTK_DIR_TAB_BACKWARD 	 1
  9781                              <1> 
  9782                              <1> ;;enum GtkExpanderStyle
  9783                              <1> %define GTK_EXPANDER_SEMI_EXPANDED 	 2
  9784                              <1> %define GTK_EXPANDER_EXPANDED 	 3
  9785                              <1> %define GTK_EXPANDER_COLLAPSED 	 0
  9786                              <1> %define GTK_EXPANDER_SEMI_COLLAPSED 	 1
  9787                              <1> 
  9788                              <1> ;;enum GtkIconSize
  9789                              <1> %define GTK_ICON_SIZE_DIALOG 	 6
  9790                              <1> %define GTK_ICON_SIZE_INVALID 	 0
  9791                              <1> %define GTK_ICON_SIZE_DND 	 5
  9792                              <1> %define GTK_ICON_SIZE_BUTTON 	 4
  9793                              <1> %define GTK_ICON_SIZE_SMALL_TOOLBAR 	 2
  9794                              <1> %define GTK_ICON_SIZE_MENU 	 1
  9795                              <1> %define GTK_ICON_SIZE_LARGE_TOOLBAR 	 3
  9796                              <1> 
  9797                              <1> ;;enum GtkSensitivityType
  9798                              <1> %define GTK_SENSITIVITY_ON 	 1
  9799                              <1> %define GTK_SENSITIVITY_OFF 	 2
  9800                              <1> %define GTK_SENSITIVITY_AUTO 	 0
  9801                              <1> 
  9802                              <1> ;;enum GtkSideType
  9803                              <1> %define GTK_SIDE_TOP 	 0
  9804                              <1> %define GTK_SIDE_BOTTOM 	 1
  9805                              <1> %define GTK_SIDE_RIGHT 	 3
  9806                              <1> %define GTK_SIDE_LEFT 	 2
  9807                              <1> 
  9808                              <1> ;;enum GtkTextDirection
  9809                              <1> %define GTK_TEXT_DIR_LTR 	 1
  9810                              <1> %define GTK_TEXT_DIR_NONE 	 0
  9811                              <1> %define GTK_TEXT_DIR_RTL 	 2
  9812                              <1> 
  9813                              <1> ;;enum GtkJustification
  9814                              <1> %define GTK_JUSTIFY_RIGHT 	 1
  9815                              <1> %define GTK_JUSTIFY_CENTER 	 2
  9816                              <1> %define GTK_JUSTIFY_LEFT 	 0
  9817                              <1> %define GTK_JUSTIFY_FILL 	 3
  9818                              <1> 
  9819                              <1> ;;enum GtkMatchType
  9820                              <1> %define GTK_MATCH_HEAD 	 2
  9821                              <1> %define GTK_MATCH_ALL_TAIL 	 1
  9822                              <1> %define GTK_MATCH_LAST 	 5
  9823                              <1> %define GTK_MATCH_EXACT 	 4
  9824                              <1> %define GTK_MATCH_ALL 	 0
  9825                              <1> %define GTK_MATCH_TAIL 	 3
  9826                              <1> 
  9827                              <1> ;;enum GtkMenuDirectionType
  9828                              <1> %define GTK_MENU_DIR_CHILD 	 1
  9829                              <1> %define GTK_MENU_DIR_PARENT 	 0
  9830                              <1> %define GTK_MENU_DIR_NEXT 	 2
  9831                              <1> %define GTK_MENU_DIR_PREV 	 3
  9832                              <1> 
  9833                              <1> ;;enum GtkMessageType
  9834                              <1> %define GTK_MESSAGE_QUESTION 	 2
  9835                              <1> %define GTK_MESSAGE_INFO 	 0
  9836                              <1> %define GTK_MESSAGE_OTHER 	 4
  9837                              <1> %define GTK_MESSAGE_ERROR 	 3
  9838                              <1> %define GTK_MESSAGE_WARNING 	 1
  9839                              <1> 
  9840                              <1> ;;enum GtkMetricType
  9841                              <1> %define GTK_INCHES 	 1
  9842                              <1> %define GTK_PIXELS 	 0
  9843                              <1> %define GTK_CENTIMETERS 	 2
  9844                              <1> 
  9845                              <1> ;;enum GtkMovementStep
  9846                              <1> %define GTK_MOVEMENT_BUFFER_ENDS 	 8
  9847                              <1> %define GTK_MOVEMENT_PARAGRAPHS 	 5
  9848                              <1> %define GTK_MOVEMENT_WORDS 	 2
  9849                              <1> %define GTK_MOVEMENT_DISPLAY_LINE_ENDS 	 4
  9850                              <1> %define GTK_MOVEMENT_PAGES 	 7
  9851                              <1> %define GTK_MOVEMENT_HORIZONTAL_PAGES 	 9
  9852                              <1> %define GTK_MOVEMENT_LOGICAL_POSITIONS 	 0
  9853                              <1> %define GTK_MOVEMENT_VISUAL_POSITIONS 	 1
  9854                              <1> %define GTK_MOVEMENT_PARAGRAPH_ENDS 	 6
  9855                              <1> %define GTK_MOVEMENT_DISPLAY_LINES 	 3
  9856                              <1> 
  9857                              <1> ;;enum GtkScrollStep
  9858                              <1> %define GTK_SCROLL_HORIZONTAL_ENDS 	 5
  9859                              <1> %define GTK_SCROLL_HORIZONTAL_STEPS 	 3
  9860                              <1> %define GTK_SCROLL_STEPS 	 0
  9861                              <1> %define GTK_SCROLL_ENDS 	 2
  9862                              <1> %define GTK_SCROLL_PAGES 	 1
  9863                              <1> %define GTK_SCROLL_HORIZONTAL_PAGES 	 4
  9864                              <1> 
  9865                              <1> ;;enum GtkOrientation
  9866                              <1> %define GTK_ORIENTATION_VERTICAL 	 1
  9867                              <1> %define GTK_ORIENTATION_HORIZONTAL 	 0
  9868                              <1> 
  9869                              <1> ;;enum GtkCornerType
  9870                              <1> %define GTK_CORNER_BOTTOM_RIGHT 	 3
  9871                              <1> %define GTK_CORNER_BOTTOM_LEFT 	 1
  9872                              <1> %define GTK_CORNER_TOP_LEFT 	 0
  9873                              <1> %define GTK_CORNER_TOP_RIGHT 	 2
  9874                              <1> 
  9875                              <1> ;;enum GtkPackType
  9876                              <1> %define GTK_PACK_START 	 0
  9877                              <1> %define GTK_PACK_END 	 1
  9878                              <1> 
  9879                              <1> ;;enum GtkPathPriorityType
  9880                              <1> %define GTK_PATH_PRIO_THEME 	 10
  9881                              <1> %define GTK_PATH_PRIO_LOWEST 	 0
  9882                              <1> %define GTK_PATH_PRIO_RC 	 12
  9883                              <1> %define GTK_PATH_PRIO_GTK 	 4
  9884                              <1> %define GTK_PATH_PRIO_APPLICATION 	 8
  9885                              <1> %define GTK_PATH_PRIO_HIGHEST 	 15
  9886                              <1> 
  9887                              <1> ;;enum GtkPathType
  9888                              <1> %define GTK_PATH_WIDGET_CLASS 	 1
  9889                              <1> %define GTK_PATH_CLASS 	 2
  9890                              <1> %define GTK_PATH_WIDGET 	 0
  9891                              <1> 
  9892                              <1> ;;enum GtkPolicyType
  9893                              <1> %define GTK_POLICY_ALWAYS 	 0
  9894                              <1> %define GTK_POLICY_NEVER 	 2
  9895                              <1> %define GTK_POLICY_AUTOMATIC 	 1
  9896                              <1> 
  9897                              <1> ;;enum GtkPositionType
  9898                              <1> %define GTK_POS_BOTTOM 	 3
  9899                              <1> %define GTK_POS_RIGHT 	 1
  9900                              <1> %define GTK_POS_TOP 	 2
  9901                              <1> %define GTK_POS_LEFT 	 0
  9902                              <1> 
  9903                              <1> ;;enum GtkPreviewType
  9904                              <1> %define GTK_PREVIEW_COLOR 	 0
  9905                              <1> %define GTK_PREVIEW_GRAYSCALE 	 1
  9906                              <1> 
  9907                              <1> ;;enum GtkReliefStyle
  9908                              <1> %define GTK_RELIEF_NORMAL 	 0
  9909                              <1> %define GTK_RELIEF_HALF 	 1
  9910                              <1> %define GTK_RELIEF_NONE 	 2
  9911                              <1> 
  9912                              <1> ;;enum GtkResizeMode
  9913                              <1> %define GTK_RESIZE_QUEUE 	 1
  9914                              <1> %define GTK_RESIZE_IMMEDIATE 	 2
  9915                              <1> %define GTK_RESIZE_PARENT 	 0
  9916                              <1> 
  9917                              <1> ;;enum GtkSignalRunType
  9918                              <1> %define GTK_RUN_LAST 	 G_SIGNAL_RUN_LAST
  9919                              <1> %define GTK_RUN_BOTH 	 (GTK_RUN_FIRST | GTK_RUN_LAST)
  9920                              <1> %define GTK_RUN_NO_HOOKS 	 G_SIGNAL_NO_HOOKS
  9921                              <1> %define GTK_RUN_NO_RECURSE 	 G_SIGNAL_NO_RECURSE
  9922                              <1> %define GTK_RUN_FIRST 	 G_SIGNAL_RUN_FIRST
  9923                              <1> %define GTK_RUN_ACTION 	 G_SIGNAL_ACTION
  9924                              <1> 
  9925                              <1> ;;enum GtkScrollType
  9926                              <1> %define GTK_SCROLL_PAGE_UP 	 8
  9927                              <1> %define GTK_SCROLL_NONE 	 0
  9928                              <1> %define GTK_SCROLL_STEP_UP 	 6
  9929                              <1> %define GTK_SCROLL_PAGE_BACKWARD 	 4
  9930                              <1> %define GTK_SCROLL_PAGE_DOWN 	 9
  9931                              <1> %define GTK_SCROLL_STEP_FORWARD 	 3
  9932                              <1> %define GTK_SCROLL_STEP_DOWN 	 7
  9933                              <1> %define GTK_SCROLL_PAGE_RIGHT 	 13
  9934                              <1> %define GTK_SCROLL_JUMP 	 1
  9935                              <1> %define GTK_SCROLL_PAGE_LEFT 	 12
  9936                              <1> %define GTK_SCROLL_PAGE_FORWARD 	 5
  9937                              <1> %define GTK_SCROLL_START 	 14
  9938                              <1> %define GTK_SCROLL_STEP_RIGHT 	 11
  9939                              <1> %define GTK_SCROLL_STEP_BACKWARD 	 2
  9940                              <1> %define GTK_SCROLL_STEP_LEFT 	 10
  9941                              <1> %define GTK_SCROLL_END 	 15
  9942                              <1> 
  9943                              <1> ;;enum GtkSelectionMode
  9944                              <1> %define GTK_SELECTION_MULTIPLE 	 3
  9945                              <1> %define GTK_SELECTION_NONE 	 0
  9946                              <1> %define GTK_SELECTION_EXTENDED 	 GTK_SELECTION_MULTIPLE
  9947                              <1> %define GTK_SELECTION_SINGLE 	 1
  9948                              <1> %define GTK_SELECTION_BROWSE 	 2
  9949                              <1> 
  9950                              <1> ;;enum GtkShadowType
  9951                              <1> %define GTK_SHADOW_ETCHED_IN 	 3
  9952                              <1> %define GTK_SHADOW_ETCHED_OUT 	 4
  9953                              <1> %define GTK_SHADOW_OUT 	 2
  9954                              <1> %define GTK_SHADOW_IN 	 1
  9955                              <1> %define GTK_SHADOW_NONE 	 0
  9956                              <1> 
  9957                              <1> ;;enum GtkStateType
  9958                              <1> %define GTK_STATE_INSENSITIVE 	 4
  9959                              <1> %define GTK_STATE_NORMAL 	 0
  9960                              <1> %define GTK_STATE_PRELIGHT 	 2
  9961                              <1> %define GTK_STATE_SELECTED 	 3
  9962                              <1> %define GTK_STATE_ACTIVE 	 1
  9963                              <1> 
  9964                              <1> ;;enum GtkSubmenuDirection
  9965                              <1> %define GTK_DIRECTION_RIGHT 	 1
  9966                              <1> %define GTK_DIRECTION_LEFT 	 0
  9967                              <1> 
  9968                              <1> ;;enum GtkSubmenuPlacement
  9969                              <1> %define GTK_LEFT_RIGHT 	 1
  9970                              <1> %define GTK_TOP_BOTTOM 	 0
  9971                              <1> 
  9972                              <1> ;;enum GtkToolbarStyle
  9973                              <1> %define GTK_TOOLBAR_BOTH 	 2
  9974                              <1> %define GTK_TOOLBAR_TEXT 	 1
  9975                              <1> %define GTK_TOOLBAR_ICONS 	 0
  9976                              <1> %define GTK_TOOLBAR_BOTH_HORIZ 	 3
  9977                              <1> 
  9978                              <1> ;;enum GtkUpdateType
  9979                              <1> %define GTK_UPDATE_DISCONTINUOUS 	 1
  9980                              <1> %define GTK_UPDATE_CONTINUOUS 	 0
  9981                              <1> %define GTK_UPDATE_DELAYED 	 2
  9982                              <1> 
  9983                              <1> ;;enum GtkVisibility
  9984                              <1> %define GTK_VISIBILITY_NONE 	 0
  9985                              <1> %define GTK_VISIBILITY_FULL 	 2
  9986                              <1> %define GTK_VISIBILITY_PARTIAL 	 1
  9987                              <1> 
  9988                              <1> ;;enum GtkWindowPosition
  9989                              <1> %define GTK_WIN_POS_CENTER_ALWAYS 	 3
  9990                              <1> %define GTK_WIN_POS_NONE 	 0
  9991                              <1> %define GTK_WIN_POS_MOUSE 	 2
  9992                              <1> %define GTK_WIN_POS_CENTER_ON_PARENT 	 4
  9993                              <1> %define GTK_WIN_POS_CENTER 	 1
  9994                              <1> 
  9995                              <1> ;;enum GtkWindowType
  9996                              <1> %define GTK_WINDOW_TOPLEVEL 	 0
  9997                              <1> %define GTK_WINDOW_POPUP 	 1
  9998                              <1> 
  9999                              <1> ;;enum GtkWrapMode
 10000                              <1> %define GTK_WRAP_CHAR 	 1
 10001                              <1> %define GTK_WRAP_WORD_CHAR 	 3
 10002                              <1> %define GTK_WRAP_WORD 	 2
 10003                              <1> %define GTK_WRAP_NONE 	 0
 10004                              <1> 
 10005                              <1> ;;enum GtkSortType
 10006                              <1> %define GTK_SORT_DESCENDING 	 1
 10007                              <1> %define GTK_SORT_ASCENDING 	 0
 10008                              <1> 
 10009                              <1> ;;enum GtkIMPreeditStyle
 10010                              <1> %define GTK_IM_PREEDIT_CALLBACK 	 1
 10011                              <1> %define GTK_IM_PREEDIT_NOTHING 	 0
 10012                              <1> %define GTK_IM_PREEDIT_NONE 	 2
 10013                              <1> 
 10014                              <1> ;;enum GtkIMStatusStyle
 10015                              <1> %define GTK_IM_STATUS_NONE 	 2
 10016                              <1> %define GTK_IM_STATUS_NOTHING 	 0
 10017                              <1> %define GTK_IM_STATUS_CALLBACK 	 1
 10018                              <1> 
 10019                              <1> ;;enum GtkPackDirection
 10020                              <1> %define GTK_PACK_DIRECTION_TTB 	 2
 10021                              <1> %define GTK_PACK_DIRECTION_RTL 	 1
 10022                              <1> %define GTK_PACK_DIRECTION_LTR 	 0
 10023                              <1> %define GTK_PACK_DIRECTION_BTT 	 3
 10024                              <1> 
 10025                              <1> ;;enum GtkPrintPages
 10026                              <1> %define GTK_PRINT_PAGES_ALL 	 0
 10027                              <1> %define GTK_PRINT_PAGES_CURRENT 	 1
 10028                              <1> %define GTK_PRINT_PAGES_SELECTION 	 3
 10029                              <1> %define GTK_PRINT_PAGES_RANGES 	 2
 10030                              <1> 
 10031                              <1> ;;enum GtkPageSet
 10032                              <1> %define GTK_PAGE_SET_EVEN 	 1
 10033                              <1> 
 10034                              <1> 
 10035                              <1> %define GTK_PAGE_SET_ODD 	 2
 10036                              <1> %define GTK_PAGE_SET_ALL 	 0
 10037                              <1> 
 10038                              <1> ;;enum GtkNumberUpLayout
 10039                              <1> %define GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM 	 2
 10040                              <1> %define GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP 	 1
 10041                              <1> %define GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT 	 5
 10042                              <1> %define GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT 	 7
 10043                              <1> %define GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP 	 3
 10044                              <1> %define GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM 	 0
 10045                              <1> %define GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT 	 4
 10046                              <1> %define GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT 	 6
 10047                              <1> 
 10048                              <1> ;;enum GtkPageOrientation
 10049                              <1> %define GTK_PAGE_ORIENTATION_LANDSCAPE 	 1
 10050                              <1> %define GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT 	 2
 10051                              <1> %define GTK_PAGE_ORIENTATION_PORTRAIT 	 0
 10052                              <1> %define GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE 	 3
 10053                              <1> 
 10054                              <1> ;;enum GtkPrintQuality
 10055                              <1> %define GTK_PRINT_QUALITY_HIGH 	 2
 10056                              <1> %define GTK_PRINT_QUALITY_DRAFT 	 3
 10057                              <1> %define GTK_PRINT_QUALITY_LOW 	 0
 10058                              <1> %define GTK_PRINT_QUALITY_NORMAL 	 1
 10059                              <1> 
 10060                              <1> ;;enum GtkPrintDuplex
 10061                              <1> %define GTK_PRINT_DUPLEX_HORIZONTAL 	 1
 10062                              <1> %define GTK_PRINT_DUPLEX_VERTICAL 	 2
 10063                              <1> %define GTK_PRINT_DUPLEX_SIMPLEX 	 0
 10064                              <1> 
 10065                              <1> ;;enum GtkUnit
 10066                              <1> %define GTK_UNIT_PIXEL 	 0
 10067                              <1> %define GTK_UNIT_POINTS 	 1
 10068                              <1> %define GTK_UNIT_MM 	 3
 10069                              <1> %define GTK_UNIT_INCH 	 2
 10070                              <1> 
 10071                              <1> ;;enum GtkTreeViewGridLines
 10072                              <1> %define GTK_TREE_VIEW_GRID_LINES_BOTH 	 3
 10073                              <1> %define GTK_TREE_VIEW_GRID_LINES_HORIZONTAL 	 1
 10074                              <1> %define GTK_TREE_VIEW_GRID_LINES_VERTICAL 	 2
 10075                              <1> %define GTK_TREE_VIEW_GRID_LINES_NONE 	 0
 10076                              <1> 
 10077                              <1> ;;enum GtkDragResult
 10078                              <1> %define GTK_DRAG_RESULT_SUCCESS 	 0
 10079                              <1> %define GTK_DRAG_RESULT_GRAB_BROKEN 	 4
 10080                              <1> %define GTK_DRAG_RESULT_TIMEOUT_EXPIRED 	 3
 10081                              <1> %define GTK_DRAG_RESULT_ERROR 	 5
 10082                              <1> %define GTK_DRAG_RESULT_USER_CANCELLED 	 2
 10083                              <1> %define GTK_DRAG_RESULT_NO_TARGET 	 1
 10084                              <1> 
 10085                              <1> ;;enum GtkAccelFlags
 10086                              <1> %define GTK_ACCEL_MASK 	 0x07
 10087                              <1> %define GTK_ACCEL_LOCKED 	 1 << 1
 10088                              <1> %define GTK_ACCEL_VISIBLE 	 1 << 0
 10089                              <1> 
 10090                              <1> ;;enum GtkDebugFlag
 10091                              <1> %define GTK_DEBUG_TEXT 	 1 << 2
 10092                              <1> %define GTK_DEBUG_ICONTHEME 	 1 << 9
 10093                              <1> %define GTK_DEBUG_PRINTING 	 1 << 10
 10094                              <1> %define GTK_DEBUG_MISC 	 1 << 0
 10095                              <1> %define GTK_DEBUG_UPDATES 	 1 << 4
 10096                              <1> %define GTK_DEBUG_BUILDER 	 1 << 11
 10097                              <1> %define GTK_DEBUG_TREE 	 1 << 3
 10098                              <1> %define GTK_DEBUG_GEOMETRY 	 1 << 8
 10099                              <1> %define GTK_DEBUG_PLUGSOCKET 	 1 << 1
 10100                              <1> %define GTK_DEBUG_KEYBINDINGS 	 1 << 5
 10101                              <1> %define GTK_DEBUG_MODULES 	 1 << 7
 10102                              <1> %define GTK_DEBUG_MULTIHEAD 	 1 << 6
 10103                              <1> 
 10104                              <1> ;;enum GtkObjectFlags
 10105                              <1> %define GTK_RESERVED_1 	 1 << 2
 10106                              <1> %define GTK_RESERVED_2 	 1 << 3
 10107                              <1> %define GTK_IN_DESTRUCTION 	 1 << 0
 10108                              <1> %define GTK_FLOATING 	 1 << 1
 10109                              <1> 
 10110                              <1> ;;enum GtkArgFlags
 10111                              <1> %define GTK_ARG_CONSTRUCT 	 G_PARAM_CONSTRUCT
 10112                              <1> %define GTK_ARG_READABLE 	 G_PARAM_READABLE
 10113                              <1> %define GTK_ARG_WRITABLE 	 G_PARAM_WRITABLE
 10114                              <1> %define GTK_ARG_CHILD_ARG 	 1 << 4
 10115                              <1> %define GTK_ARG_CONSTRUCT_ONLY 	 G_PARAM_CONSTRUCT_ONLY
 10116                              <1> 
 10117                              <1> ;;enum GtkRcFlags
 10118                              <1> %define GTK_RC_BG 	 1 << 1
 10119                              <1> %define GTK_RC_TEXT 	 1 << 2
 10120                              <1> %define GTK_RC_FG 	 1 << 0
 10121                              <1> %define GTK_RC_BASE 	 1 << 3
 10122                              <1> 
 10123                              <1> ;;enum GtkRcTokenType
 10124                              <1> %define GTK_RC_TOKEN_MODULE_PATH 	 30
 10125                              <1> %define GTK_RC_TOKEN_WIDGET 	 20
 10126                              <1> %define GTK_RC_TOKEN_ENGINE 	 29
 10127                              <1> %define GTK_RC_TOKEN_IM_MODULE_PATH 	 31
 10128                              <1> %define GTK_RC_TOKEN_LOWEST 	 23
 10129                              <1> %define GTK_RC_TOKEN_PRELIGHT 	 3
 10130                              <1> %define GTK_RC_TOKEN_FG 	 6
 10131                              <1> %define GTK_RC_TOKEN_YTHICKNESS 	 11
 10132                              <1> %define GTK_RC_TOKEN_THEME 	 26
 10133                              <1> %define GTK_RC_TOKEN_XTHICKNESS 	 10
 10134                              <1> %define GTK_RC_TOKEN_BG 	 7
 10135                              <1> %define GTK_RC_TOKEN_ACTIVE 	 2
 10136                              <1> %define GTK_RC_TOKEN_LTR 	 34
 10137                              <1> %define GTK_RC_TOKEN_LAST 	 38
 10138                              <1> %define GTK_RC_TOKEN_COLOR 	 36
 10139                              <1> %define GTK_RC_TOKEN_IM_MODULE_FILE 	 32
 10140                              <1> %define GTK_RC_TOKEN_UNBIND 	 37
 10141                              <1> %define GTK_RC_TOKEN_CLASS 	 22
 10142                              <1> %define GTK_RC_TOKEN_STYLE 	 17
 10143                              <1> %define GTK_RC_TOKEN_HIGHEST 	 28
 10144                              <1> %define GTK_RC_TOKEN_STOCK 	 33
 10145                              <1> %define GTK_RC_TOKEN_RC 	 27
 10146                              <1> %define GTK_RC_TOKEN_BIND 	 19
 10147                              <1> %define GTK_RC_TOKEN_TEXT 	 8
 10148                              <1> %define GTK_RC_TOKEN_APPLICATION 	 25
 10149                              <1> %define GTK_RC_TOKEN_BASE 	 9
 10150                              <1> %define GTK_RC_TOKEN_FONTSET 	 13
 10151                              <1> %define GTK_RC_TOKEN_GTK 	 24
 10152                              <1> %define GTK_RC_TOKEN_INVALID 	 G_TOKEN_LAST
 10153                              <1> %define GTK_RC_TOKEN_INSENSITIVE 	 5
 10154                              <1> %define GTK_RC_TOKEN_PIXMAP_PATH 	 16
 10155                              <1> %define GTK_RC_TOKEN_BINDING 	 18
 10156                              <1> %define GTK_RC_TOKEN_SELECTED 	 4
 10157                              <1> %define GTK_RC_TOKEN_RTL 	 35
 10158                              <1> %define GTK_RC_TOKEN_BG_PIXMAP 	 15
 10159                              <1> %define GTK_RC_TOKEN_INCLUDE 	 0
 10160                              <1> %define GTK_RC_TOKEN_WIDGET_CLASS 	 21
 10161                              <1> %define GTK_RC_TOKEN_FONT_NAME 	 14
 10162                              <1> %define GTK_RC_TOKEN_NORMAL 	 1
 10163                              <1> %define GTK_RC_TOKEN_FONT 	 12
 10164                              <1> 
 10165                              <1> ;;enum AtkStateType
 10166                              <1> %define ATK_STATE_INVALID 	 0
 10167                              <1> %define ATK_STATE_EXPANDED 	 9
 10168                              <1> %define ATK_STATE_HORIZONTAL 	 12
 10169                              <1> %define ATK_STATE_PRESSED 	 18
 10170                              <1> %define ATK_STATE_CHECKED 	 4
 10171                              <1> %define ATK_STATE_ACTIVE 	 1
 10172                              <1> %define ATK_STATE_FOCUSABLE 	 10
 10173                              <1> %define ATK_STATE_BUSY 	 3
 10174                              <1> %define ATK_STATE_FOCUSED 	 11
 10175                              <1> %define ATK_STATE_ARMED 	 2
 10176                              <1> %define ATK_STATE_MULTI_LINE 	 15
 10177                              <1> %define ATK_STATE_ENABLED 	 7
 10178                              <1> %define ATK_STATE_OPAQUE 	 17
 10179                              <1> %define ATK_STATE_STALE 	 25
 10180                              <1> %define ATK_STATE_TRANSIENT 	 26
 10181                              <1> %define ATK_STATE_SINGLE_LINE 	 24
 10182                              <1> %define ATK_STATE_SUPPORTS_AUTOCOMPLETION 	 34
 10183                              <1> %define ATK_STATE_SENSITIVE 	 22
 10184                              <1> %define ATK_STATE_TRUNCATED 	 31
 10185                              <1> %define ATK_STATE_ICONIFIED 	 13
 10186                              <1> %define ATK_STATE_MULTISELECTABLE 	 16
 10187                              <1> %define ATK_STATE_INVALID_ENTRY 	 33
 10188                              <1> %define ATK_STATE_DEFAULT 	 36
 10189                              <1> %define ATK_STATE_SELECTABLE 	 20
 10190                              <1> %define ATK_STATE_INDETERMINATE 	 30
 10191                              <1> %define ATK_STATE_EDITABLE 	 6
 10192                              <1> %define ATK_STATE_ANIMATED 	 37
 10193                              <1> %define ATK_STATE_LAST_DEFINED 	 39
 10194                              <1> %define ATK_STATE_REQUIRED 	 32
 10195                              <1> %define ATK_STATE_VISITED 	 38
 10196                              <1> %define ATK_STATE_MODAL 	 14
 10197                              <1> %define ATK_STATE_VISIBLE 	 28
 10198                              <1> %define ATK_STATE_MANAGES_DESCENDANTS 	 29
 10199                              <1> %define ATK_STATE_RESIZABLE 	 19
 10200                              <1> %define ATK_STATE_SELECTED 	 21
 10201                              <1> %define ATK_STATE_SELECTABLE_TEXT 	 35
 10202                              <1> %define ATK_STATE_DEFUNCT 	 5
 10203                              <1> %define ATK_STATE_EXPANDABLE 	 8
 10204                              <1> %define ATK_STATE_VERTICAL 	 27
 10205                              <1> %define ATK_STATE_SHOWING 	 23
 10206                              <1> 
 10207                              <1> ;;enum AtkRelationType
 10208                              <1> %define ATK_RELATION_LABEL_FOR 	 2
 10209                              <1> %define ATK_RELATION_NULL 	 0
 10210                              <1> %define ATK_RELATION_SUBWINDOW_OF 	 8
 10211                              <1> %define ATK_RELATION_NODE_PARENT_OF 	 15
 10212                              <1> %define ATK_RELATION_LABELLED_BY 	 3
 10213                              <1> %define ATK_RELATION_PARENT_WINDOW_OF 	 12
 10214                              <1> %define ATK_RELATION_POPUP_FOR 	 11
 10215                              <1> %define ATK_RELATION_EMBEDDED_BY 	 10
 10216                              <1> %define ATK_RELATION_CONTROLLER_FOR 	 1
 10217                              <1> %define ATK_RELATION_NODE_CHILD_OF 	 5
 10218                              <1> %define ATK_RELATION_DESCRIPTION_FOR 	 14
 10219                              <1> %define ATK_RELATION_MEMBER_OF 	 4
 10220                              <1> %define ATK_RELATION_LAST_DEFINED 	 16
 10221                              <1> %define ATK_RELATION_EMBEDS 	 9
 10222                              <1> %define ATK_RELATION_FLOWS_FROM 	 7
 10223                              <1> %define ATK_RELATION_FLOWS_TO 	 6
 10224                              <1> %define ATK_RELATION_CONTROLLED_BY 	 0
 10225                              <1> %define ATK_RELATION_DESCRIBED_BY 	 13
 10226                              <1> 
 10227                              <1> ;;enum AtkRole
 10228                              <1> %define ATK_ROLE_DOCUMENT_FRAME 	 79
 10229                              <1> %define ATK_ROLE_FONT_CHOOSER 	 20
 10230                              <1> %define ATK_ROLE_PAGE_TAB_LIST 	 36
 10231                              <1> %define ATK_ROLE_ICON 	 24
 10232                              <1> %define ATK_ROLE_VIEWPORT 	 66
 10233                              <1> %define ATK_ROLE_TOOL_TIP 	 62
 10234                              <1> %define ATK_ROLE_STATUSBAR 	 52
 10235                              <1> %define ATK_ROLE_DIRECTORY_PANE 	 16
 10236                              <1> %define ATK_ROLE_RADIO_MENU_ITEM 	 43
 10237                              <1> %define ATK_ROLE_PAGE 	 81
 10238                              <1> %define ATK_ROLE_LIST_ITEM 	 30
 10239                              <1> %define ATK_ROLE_INTERNAL_FRAME 	 26
 10240                              <1> %define ATK_ROLE_IMAGE 	 25
 10241                              <1> %define ATK_ROLE_DRAWING_AREA 	 17
 10242                              <1> %define ATK_ROLE_CALENDAR 	 4
 10243                              <1> %define ATK_ROLE_AUTOCOMPLETE 	 73
 10244                              <1> %define ATK_ROLE_ANIMATION 	 2
 10245                              <1> %define ATK_ROLE_CHECK_MENU_ITEM 	 7
 10246                              <1> %define ATK_ROLE_ROW_HEADER 	 45
 10247                              <1> %define ATK_ROLE_REDUNDANT_OBJECT 	 83
 10248                              <1> %define ATK_ROLE_SECTION 	 82
 10249                              <1> %define ATK_ROLE_ACCEL_LABEL 	 0
 10250                              <1> %define ATK_ROLE_PASSWORD_TEXT 	 38
 10251                              <1> %define ATK_ROLE_PAGE_TAB 	 35
 10252                              <1> %define ATK_ROLE_INVALID 	 0
 10253                              <1> %define ATK_ROLE_SEPARATOR 	 48
 10254                              <1> %define ATK_ROLE_TREE_TABLE 	 64
 10255                              <1> %define ATK_ROLE_DIAL 	 14
 10256                              <1> %define ATK_ROLE_ROOT_PANE 	 44
 10257                              <1> %define ATK_ROLE_TREE 	 63
 10258                              <1> %define ATK_ROLE_DATE_EDITOR 	 11
 10259                              <1> %define ATK_ROLE_OPTION_PANE 	 34
 10260                              <1> %define ATK_ROLE_FOOTER 	 69
 10261                              <1> %define ATK_ROLE_CANVAS 	 5
 10262                              <1> %define ATK_ROLE_EMBEDDED 	 75
 10263                              <1> %define ATK_ROLE_TABLE_ROW_HEADER 	 56
 10264                              <1> %define ATK_ROLE_HTML_CONTAINER 	 23
 10265                              <1> %define ATK_ROLE_LAST_DEFINED 	 87
 10266                              <1> %define ATK_ROLE_MENU_ITEM 	 33
 10267                              <1> %define ATK_ROLE_DESKTOP_FRAME 	 13
 10268                              <1> %define ATK_ROLE_COLUMN_HEADER 	 9
 10269                              <1> %define ATK_ROLE_APPLICATION 	 72
 10270                              <1> %define ATK_ROLE_FRAME 	 21
 10271                              <1> %define ATK_ROLE_COLOR_CHOOSER 	 8
 10272                              <1> %define ATK_ROLE_TABLE 	 53
 10273                              <1> %define ATK_ROLE_SCROLL_BAR 	 46
 10274                              <1> %define ATK_ROLE_LABEL 	 27
 10275                              <1> %define ATK_ROLE_TABLE_COLUMN_HEADER 	 55
 10276                              <1> %define ATK_ROLE_HEADER 	 68
 10277                              <1> %define ATK_ROLE_SPLIT_PANE 	 50
 10278                              <1> %define ATK_ROLE_HEADING 	 80
 10279                              <1> %define ATK_ROLE_PARAGRAPH 	 70
 10280                              <1> %define ATK_ROLE_ALERT 	 1
 10281                              <1> %define ATK_ROLE_UNKNOWN 	 65
 10282                              <1> %define ATK_ROLE_TABLE_CELL 	 54
 10283                              <1> %define ATK_ROLE_INPUT_METHOD_WINDOW 	 86
 10284                              <1> %define ATK_ROLE_TERMINAL 	 58
 10285                              <1> %define ATK_ROLE_RULER 	 71
 10286                              <1> %define ATK_ROLE_FILLER 	 19
 10287                              <1> %define ATK_ROLE_DESKTOP_ICON 	 12
 10288                              <1> %define ATK_ROLE_PANEL 	 37
 10289                              <1> %define ATK_ROLE_LIST 	 29
 10290                              <1> %define ATK_ROLE_ARROW 	 3
 10291                              <1> %define ATK_ROLE_ENTRY 	 76
 10292                              <1> %define ATK_ROLE_EDITBAR 	 74
 10293                              <1> %define ATK_ROLE_PROGRESS_BAR 	 40
 10294                              <1> %define ATK_ROLE_DIALOG 	 15
 10295                              <1> %define ATK_ROLE_LAYERED_PANE 	 28
 10296                              <1> %define ATK_ROLE_TOOL_BAR 	 61
 10297                              <1> %define ATK_ROLE_CHART 	 77
 10298                              <1> %define ATK_ROLE_LINK 	 85
 10299                              <1> %define ATK_ROLE_TEAR_OFF_MENU_ITEM 	 57
 10300                              <1> %define ATK_ROLE_FORM 	 84
 10301                              <1> %define ATK_ROLE_MENU 	 31
 10302                              <1> %define ATK_ROLE_RADIO_BUTTON 	 42
 10303                              <1> %define ATK_ROLE_GLASS_PANE 	 22
 10304                              <1> %define ATK_ROLE_CHECK_BOX 	 6
 10305                              <1> %define ATK_ROLE_CAPTION 	 78
 10306                              <1> %define ATK_ROLE_TEXT 	 59
 10307                              <1> %define ATK_ROLE_SLIDER 	 49
 10308                              <1> %define ATK_ROLE_SCROLL_PANE 	 47
 10309                              <1> %define ATK_ROLE_FILE_CHOOSER 	 18
 10310                              <1> %define ATK_ROLE_PUSH_BUTTON 	 41
 10311                              <1> %define ATK_ROLE_TOGGLE_BUTTON 	 60
 10312                              <1> %define ATK_ROLE_COMBO_BOX 	 10
 10313                              <1> %define ATK_ROLE_SPIN_BUTTON 	 51
 10314                              <1> %define ATK_ROLE_MENU_BAR 	 32
 10315                              <1> %define ATK_ROLE_WINDOW 	 67
 10316                              <1> %define ATK_ROLE_POPUP_MENU 	 39
 10317                              <1> 
 10318                              <1> ;;enum AtkLayer
 10319                              <1> %define ATK_LAYER_WINDOW 	 7
 10320                              <1> %define ATK_LAYER_MDI 	 4
 10321                              <1> %define ATK_LAYER_WIDGET 	 3
 10322                              <1> %define ATK_LAYER_CANVAS 	 2
 10323                              <1> %define ATK_LAYER_OVERLAY 	 6
 10324                              <1> %define ATK_LAYER_BACKGROUND 	 1
 10325                              <1> %define ATK_LAYER_INVALID 	 0
 10326                              <1> %define ATK_LAYER_POPUP 	 5
 10327                              <1> 
 10328                              <1> ;;enum AtkKeyEventType
 10329                              <1> %define ATK_KEY_EVENT_PRESS 	 0
 10330                              <1> %define ATK_KEY_EVENT_LAST_DEFINED 	 2
 10331                              <1> %define ATK_KEY_EVENT_RELEASE 	 1
 10332                              <1> 
 10333                              <1> ;;enum AtkCoordType
 10334                              <1> %define ATK_XY_WINDOW 	 1
 10335                              <1> %define ATK_XY_SCREEN 	 0
 10336                              <1> 
 10337                              <1> ;;enum AtkTextAttribute
 10338                              <1> %define ATK_TEXT_ATTR_JUSTIFICATION 	 23
 10339                              <1> %define ATK_TEXT_ATTR_STRIKETHROUGH 	 11
 10340                              <1> %define ATK_TEXT_ATTR_EDITABLE 	 4
 10341                              <1> %define ATK_TEXT_ATTR_BG_FULL_HEIGHT 	 8
 10342                              <1> %define ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP 	 7
 10343                              <1> %define ATK_TEXT_ATTR_STYLE 	 26
 10344                              <1> %define ATK_TEXT_ATTR_RISE 	 9
 10345                              <1> %define ATK_TEXT_ATTR_FAMILY_NAME 	 16
 10346                              <1> %define ATK_TEXT_ATTR_PIXELS_ABOVE_LINES 	 5
 10347                              <1> %define ATK_TEXT_ATTR_INDENT 	 2
 10348                              <1> %define ATK_TEXT_ATTR_LANGUAGE 	 15
 10349                              <1> %define ATK_TEXT_ATTR_VARIANT 	 25
 10350                              <1> %define ATK_TEXT_ATTR_DIRECTION 	 22
 10351                              <1> %define ATK_TEXT_ATTR_WEIGHT 	 14
 10352                              <1> %define ATK_TEXT_ATTR_INVISIBLE 	 3
 10353                              <1> %define ATK_TEXT_ATTR_FG_STIPPLE 	 20
 10354                              <1> %define ATK_TEXT_ATTR_STRETCH 	 24
 10355                              <1> %define ATK_TEXT_ATTR_SCALE 	 13
 10356                              <1> %define ATK_TEXT_ATTR_UNDERLINE 	 10
 10357                              <1> %define ATK_TEXT_ATTR_LAST_DEFINED 	 27
 10358                              <1> %define ATK_TEXT_ATTR_FG_COLOR 	 18
 10359                              <1> %define ATK_TEXT_ATTR_LEFT_MARGIN 	 0
 10360                              <1> %define ATK_TEXT_ATTR_RIGHT_MARGIN 	 1
 10361                              <1> %define ATK_TEXT_ATTR_BG_COLOR 	 17
 10362                              <1> %define ATK_TEXT_ATTR_SIZE 	 12
 10363                              <1> %define ATK_TEXT_ATTR_PIXELS_BELOW_LINES 	 6
 10364                              <1> %define ATK_TEXT_ATTR_WRAP_MODE 	 21
 10365                              <1> %define ATK_TEXT_ATTR_INVALID 	 0
 10366                              <1> %define ATK_TEXT_ATTR_BG_STIPPLE 	 19
 10367                              <1> 
 10368                              <1> ;;enum AtkTextBoundary
 10369                              <1> %define ATK_TEXT_BOUNDARY_SENTENCE_START 	 3
 10370                              <1> %define ATK_TEXT_BOUNDARY_SENTENCE_END 	 4
 10371                              <1> %define ATK_TEXT_BOUNDARY_LINE_START 	 5
 10372                              <1> %define ATK_TEXT_BOUNDARY_LINE_END 	 6
 10373                              <1> %define ATK_TEXT_BOUNDARY_WORD_END 	 2
 10374                              <1> %define ATK_TEXT_BOUNDARY_CHAR 	 0
 10375                              <1> %define ATK_TEXT_BOUNDARY_WORD_START 	 1
 10376                              <1> 
 10377                              <1> ;;enum AtkTextClipType
 10378                              <1> %define ATK_TEXT_CLIP_BOTH 	 3
 10379                              <1> %define ATK_TEXT_CLIP_MIN 	 1
 10380                              <1> %define ATK_TEXT_CLIP_NONE 	 0
 10381                              <1> %define ATK_TEXT_CLIP_MAX 	 2
 10382                              <1> 
 10383                              <1> ;;enum AtkHyperlinkStateFlags
 10384                              <1> %define ATK_HYPERLINK_IS_INLINE 	 1 << 0
 10385                              <1> 
 10386                              <1> ;;enum GtkWidgetFlags
 10387                              <1> %define GTK_REALIZED 	 1 << 6
 10388                              <1> %define GTK_COMPOSITE_CHILD 	 1 << 17
 10389                              <1> %define GTK_RECEIVES_DEFAULT 	 1 << 20
 10390                              <1> %define GTK_VISIBLE 	 1 << 8
 10391                              <1> %define GTK_HAS_GRAB 	 1 << 15
 10392                              <1> %define GTK_RC_STYLE 	 1 << 16
 10393                              <1> %define GTK_PARENT_SENSITIVE 	 1 << 10
 10394                              <1> %define GTK_CAN_DEFAULT 	 1 << 13
 10395                              <1> %define GTK_HAS_FOCUS 	 1 << 12
 10396                              <1> %define GTK_CAN_FOCUS 	 1 << 11
 10397                              <1> %define GTK_MAPPED 	 1 << 7
 10398                              <1> %define GTK_TOPLEVEL 	 1 << 4
 10399                              <1> %define GTK_NO_WINDOW 	 1 << 5
 10400                              <1> %define GTK_NO_SHOW_ALL 	 1 << 22
 10401                              <1> %define GTK_DOUBLE_BUFFERED 	 1 << 21
 10402                              <1> %define GTK_HAS_DEFAULT 	 1 << 14
 10403                              <1> %define GTK_SENSITIVE 	 1 << 9
 10404                              <1> %define GTK_APP_PAINTABLE 	 1 << 19
 10405                              <1> %define GTK_NO_REPARENT 	 1 << 18
 10406                              <1> 
 10407                              <1> ;;enum GtkWidgetHelpType
 10408                              <1> %define GTK_WIDGET_HELP_TOOLTIP 	 0
 10409                              <1> %define GTK_WIDGET_HELP_WHATS_THIS 	 1
 10410                              <1> 
 10411                              <1> ;;enum GtkDialogFlags
 10412                              <1> %define GTK_DIALOG_MODAL 	 1 << 0
 10413                              <1> %define GTK_DIALOG_NO_SEPARATOR 	 1 << 2
 10414                              <1> %define GTK_DIALOG_DESTROY_WITH_PARENT 	 1 << 1
 10415                              <1> 
 10416                              <1> ;;enum GtkResponseType
 10417                              <1> %define GTK_RESPONSE_OK 	 -5
 10418                              <1> %define GTK_RESPONSE_NONE 	 -1
 10419                              <1> %define GTK_RESPONSE_REJECT 	 -2
 10420                              <1> %define GTK_RESPONSE_NO 	 -9
 10421                              <1> %define GTK_RESPONSE_YES 	 -8
 10422                              <1> %define GTK_RESPONSE_DELETE_EVENT 	 -4
 10423                              <1> %define GTK_RESPONSE_CLOSE 	 -7
 10424                              <1> %define GTK_RESPONSE_ACCEPT 	 -3
 10425                              <1> %define GTK_RESPONSE_CANCEL 	 -6
 10426                              <1> %define GTK_RESPONSE_HELP 	 -11
 10427                              <1> %define GTK_RESPONSE_APPLY 	 -10
 10428                              <1> 
 10429                              <1> ;;enum GtkAssistantPageType
 10430                              <1> %define GTK_ASSISTANT_PAGE_CONFIRM 	 2
 10431                              <1> %define GTK_ASSISTANT_PAGE_PROGRESS 	 4
 10432                              <1> %define GTK_ASSISTANT_PAGE_SUMMARY 	 3
 10433                              <1> %define GTK_ASSISTANT_PAGE_CONTENT 	 0
 10434                              <1> %define GTK_ASSISTANT_PAGE_INTRO 	 1
 10435                              <1> 
 10436                              <1> ;;enum GtkBuilderError
 10437                              <1> %define GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION 	 0
 10438                              <1> %define GTK_BUILDER_ERROR_UNHANDLED_TAG 	 1
 10439                              <1> %define GTK_BUILDER_ERROR_MISSING_ATTRIBUTE 	 2
 10440                              <1> %define GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE 	 5
 10441                              <1> %define GTK_BUILDER_ERROR_VERSION_MISMATCH 	 7
 10442                              <1> %define GTK_BUILDER_ERROR_INVALID_ATTRIBUTE 	 3
 10443                              <1> %define GTK_BUILDER_ERROR_DUPLICATE_ID 	 8
 10444                              <1> %define GTK_BUILDER_ERROR_INVALID_VALUE 	 6
 10445                              <1> %define GTK_BUILDER_ERROR_INVALID_TAG 	 4
 10446                              <1> 
 10447                              <1> ;;enum GtkImageType
 10448                              <1> %define GTK_IMAGE_EMPTY 	 0
 10449                              <1> %define GTK_IMAGE_ANIMATION 	 6
 10450                              <1> %define GTK_IMAGE_PIXMAP 	 1
 10451                              <1> %define GTK_IMAGE_STOCK 	 4
 10452                              <1> %define GTK_IMAGE_ICON_SET 	 5
 10453                              <1> %define GTK_IMAGE_PIXBUF 	 3
 10454                              <1> %define GTK_IMAGE_ICON_NAME 	 7
 10455                              <1> %define GTK_IMAGE_GICON 	 8
 10456                              <1> %define GTK_IMAGE_IMAGE 	 2
 10457                              <1> 
 10458                              <1> ;;enum GtkCalendarDisplayOptions
 10459                              <1> %define GTK_CALENDAR_SHOW_HEADING 	 1 << 0
 10460                              <1> %define GTK_CALENDAR_NO_MONTH_CHANGE 	 1 << 2
 10461                              <1> %define GTK_CALENDAR_WEEK_START_MONDAY 	 1 << 4
 10462                              <1> %define GTK_CALENDAR_SHOW_DAY_NAMES 	 1 << 1
 10463                              <1> %define GTK_CALENDAR_SHOW_WEEK_NUMBERS 	 1 << 3
 10464                              <1> %define GTK_CALENDAR_SHOW_DETAILS 	 1 << 5
 10465                              <1> 
 10466                              <1> ;;enum GtkCellRendererState
 10467                              <1> %define GTK_CELL_RENDERER_SELECTED 	 1 << 0
 10468                              <1> %define GTK_CELL_RENDERER_SORTED 	 1 << 3
 10469                              <1> %define GTK_CELL_RENDERER_PRELIT 	 1 << 1
 10470                              <1> %define GTK_CELL_RENDERER_FOCUSED 	 1 << 4
 10471                              <1> %define GTK_CELL_RENDERER_INSENSITIVE 	 1 << 2
 10472                              <1> 
 10473                              <1> ;;enum GtkCellRendererMode
 10474                              <1> %define GTK_CELL_RENDERER_MODE_INERT 	 0
 10475                              <1> %define GTK_CELL_RENDERER_MODE_EDITABLE 	 2
 10476                              <1> %define GTK_CELL_RENDERER_MODE_ACTIVATABLE 	 1
 10477                              <1> 
 10478                              <1> ;;enum GtkTreeModelFlags
 10479                              <1> %define GTK_TREE_MODEL_ITERS_PERSIST 	 1 << 0
 10480                              <1> %define GTK_TREE_MODEL_LIST_ONLY 	 1 << 1
 10481                              <1> 
 10482                              <1> ;;enum GtkTreeViewColumnSizing
 10483                              <1> %define GTK_TREE_VIEW_COLUMN_GROW_ONLY 	 0
 10484                              <1> %define GTK_TREE_VIEW_COLUMN_AUTOSIZE 	 1
 10485                              <1> %define GTK_TREE_VIEW_COLUMN_FIXED 	 2
 10486                              <1> 
 10487                              <1> ;;enum GtkCellRendererAccelMode
 10488                              <1> %define GTK_CELL_RENDERER_ACCEL_MODE_GTK 	 0
 10489                              <1> %define GTK_CELL_RENDERER_ACCEL_MODE_OTHER 	 1
 10490                              <1> 
 10491                              <1> ;;enum GtkTextSearchFlags
 10492                              <1> %define GTK_TEXT_SEARCH_TEXT_ONLY 	 1 << 1
 10493                              <1> %define GTK_TEXT_SEARCH_VISIBLE_ONLY 	 1 << 0
 10494                              <1> 
 10495                              <1> ;;enum GtkDestDefaults
 10496                              <1> %define GTK_DEST_DEFAULT_DROP 	 1 << 2
 10497                              <1> %define GTK_DEST_DEFAULT_MOTION 	 1 << 0
 10498                              <1> %define GTK_DEST_DEFAULT_ALL 	 0x07
 10499                              <1> %define GTK_DEST_DEFAULT_HIGHLIGHT 	 1 << 1
 10500                              <1> 
 10501                              <1> ;;enum GtkTargetFlags
 10502                              <1> %define GTK_TARGET_OTHER_WIDGET 	 1 << 3
 10503                              <1> %define GTK_TARGET_SAME_WIDGET 	 1 << 1
 10504                              <1> %define GTK_TARGET_OTHER_APP 	 1 << 2
 10505                              <1> %define GTK_TARGET_SAME_APP 	 1 << 0
 10506                              <1> 
 10507                              <1> ;;enum GtkEntryIconPosition
 10508                              <1> %define GTK_ENTRY_ICON_SECONDARY 	 1
 10509                              <1> %define GTK_ENTRY_ICON_PRIMARY 	 0
 10510                              <1> 
 10511                              <1> ;;enum GtkTreeViewDropPosition
 10512                              <1> %define GTK_TREE_VIEW_DROP_AFTER 	 1
 10513                              <1> %define GTK_TREE_VIEW_DROP_INTO_OR_AFTER 	 3
 10514                              <1> %define GTK_TREE_VIEW_DROP_BEFORE 	 0
 10515                              <1> %define GTK_TREE_VIEW_DROP_INTO_OR_BEFORE 	 2
 10516                              <1> 
 10517                              <1> ;;enum GtkFileFilterFlags
 10518                              <1> %define GTK_FILE_FILTER_FILENAME 	 1 << 0
 10519                              <1> %define GTK_FILE_FILTER_DISPLAY_NAME 	 1 << 2
 10520                              <1> %define GTK_FILE_FILTER_MIME_TYPE 	 1 << 3
 10521                              <1> %define GTK_FILE_FILTER_URI 	 1 << 1
 10522                              <1> 
 10523                              <1> ;;enum GtkFileChooserAction
 10524                              <1> %define GTK_FILE_CHOOSER_ACTION_OPEN 	 0
 10525                              <1> %define GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER 	 3
 10526                              <1> %define GTK_FILE_CHOOSER_ACTION_SAVE 	 1
 10527                              <1> %define GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER 	 2
 10528                              <1> 
 10529                              <1> ;;enum GtkFileChooserConfirmation
 10530                              <1> %define GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM 	 0
 10531                              <1> %define GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN 	 2
 10532                              <1> %define GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME 	 1
 10533                              <1> 
 10534                              <1> ;;enum GtkFileChooserError
 10535                              <1> 
 10536                              <1> %define GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME 	 3
 10537                              <1> %define GTK_FILE_CHOOSER_ERROR_BAD_FILENAME 	 1
 10538                              <1> %define GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS 	 2
 10539                              <1> %define GTK_FILE_CHOOSER_ERROR_NONEXISTENT 	 0
 10540                              <1> 
 10541                              <1> ;;enum GtkIconLookupFlags
 10542                              <1> %define GTK_ICON_LOOKUP_FORCE_SIZE 	 1 << 4
 10543                              <1> %define GTK_ICON_LOOKUP_USE_BUILTIN 	 1 << 2
 10544                              <1> %define GTK_ICON_LOOKUP_NO_SVG 	 1 << 0
 10545                              <1> %define GTK_ICON_LOOKUP_FORCE_SVG 	 1 << 1
 10546                              <1> %define GTK_ICON_LOOKUP_GENERIC_FALLBACK 	 1 << 3
 10547                              <1> 
 10548                              <1> ;;enum GtkIconThemeError
 10549                              <1> %define GTK_ICON_THEME_NOT_FOUND 	 0
 10550                              <1> %define GTK_ICON_THEME_FAILED 	 1
 10551                              <1> 
 10552                              <1> ;;enum GtkIconViewDropPosition
 10553                              <1> %define GTK_ICON_VIEW_DROP_RIGHT 	 3
 10554                              <1> %define GTK_ICON_VIEW_NO_DROP 	 0
 10555                              <1> %define GTK_ICON_VIEW_DROP_LEFT 	 2
 10556                              <1> %define GTK_ICON_VIEW_DROP_INTO 	 1
 10557                              <1> %define GTK_ICON_VIEW_DROP_ABOVE 	 4
 10558                              <1> %define GTK_ICON_VIEW_DROP_BELOW 	 5
 10559                              <1> 
 10560                              <1> ;;enum GtkSizeGroupMode
 10561                              <1> %define GTK_SIZE_GROUP_HORIZONTAL 	 1
 10562                              <1> %define GTK_SIZE_GROUP_BOTH 	 3
 10563                              <1> %define GTK_SIZE_GROUP_VERTICAL 	 2
 10564                              <1> %define GTK_SIZE_GROUP_NONE 	 0
 10565                              <1> 
 10566                              <1> ;;enum GtkButtonsType
 10567                              <1> %define GTK_BUTTONS_OK 	 1
 10568                              <1> %define GTK_BUTTONS_NONE 	 0
 10569                              <1> %define GTK_BUTTONS_YES_NO 	 4
 10570                              <1> %define GTK_BUTTONS_CANCEL 	 3
 10571                              <1> %define GTK_BUTTONS_CLOSE 	 2
 10572                              <1> %define GTK_BUTTONS_OK_CANCEL 	 5
 10573                              <1> 
 10574                              <1> ;;enum GtkNotebookTab
 10575                              <1> %define GTK_NOTEBOOK_TAB_FIRST 	 0
 10576                              <1> %define GTK_NOTEBOOK_TAB_LAST 	 1
 10577                              <1> 
 10578                              <1> ;;enum GtkPrintStatus
 10579                              <1> %define GTK_PRINT_STATUS_INITIAL 	 0
 10580                              <1> %define GTK_PRINT_STATUS_SENDING_DATA 	 3
 10581                              <1> %define GTK_PRINT_STATUS_PENDING 	 4
 10582                              <1> %define GTK_PRINT_STATUS_PREPARING 	 1
 10583                              <1> %define GTK_PRINT_STATUS_FINISHED 	 7
 10584                              <1> %define GTK_PRINT_STATUS_PRINTING 	 6
 10585                              <1> %define GTK_PRINT_STATUS_FINISHED_ABORTED 	 8
 10586                              <1> %define GTK_PRINT_STATUS_PENDING_ISSUE 	 5
 10587                              <1> %define GTK_PRINT_STATUS_GENERATING_DATA 	 2
 10588                              <1> 
 10589                              <1> ;;enum GtkPrintOperationResult
 10590                              <1> %define GTK_PRINT_OPERATION_RESULT_APPLY 	 1
 10591                              <1> %define GTK_PRINT_OPERATION_RESULT_ERROR 	 0
 10592                              <1> %define GTK_PRINT_OPERATION_RESULT_IN_PROGRESS 	 3
 10593                              <1> %define GTK_PRINT_OPERATION_RESULT_CANCEL 	 2
 10594                              <1> 
 10595                              <1> ;;enum GtkPrintOperationAction
 10596                              <1> %define GTK_PRINT_OPERATION_ACTION_PREVIEW 	 2
 10597                              <1> %define GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG 	 0
 10598                              <1> %define GTK_PRINT_OPERATION_ACTION_EXPORT 	 3
 10599                              <1> %define GTK_PRINT_OPERATION_ACTION_PRINT 	 1
 10600                              <1> 
 10601                              <1> ;;enum GtkPrintError
 10602                              <1> %define GTK_PRINT_ERROR_INVALID_FILE 	 3
 10603                              <1> %define GTK_PRINT_ERROR_NOMEM 	 2
 10604                              <1> %define GTK_PRINT_ERROR_GENERAL 	 0
 10605                              <1> %define GTK_PRINT_ERROR_INTERNAL_ERROR 	 1
 10606                              <1> 
 10607                              <1> ;;enum GtkProgressBarStyle
 10608                              <1> %define GTK_PROGRESS_DISCRETE 	 1
 10609                              <1> %define GTK_PROGRESS_CONTINUOUS 	 0
 10610                              <1> 
 10611                              <1> ;;enum GtkProgressBarOrientation
 10612                              <1> %define GTK_PROGRESS_LEFT_TO_RIGHT 	 0
 10613                              <1> %define GTK_PROGRESS_RIGHT_TO_LEFT 	 1
 10614                              <1> %define GTK_PROGRESS_TOP_TO_BOTTOM 	 3
 10615                              <1> %define GTK_PROGRESS_BOTTOM_TO_TOP 	 2
 10616                              <1> 
 10617                              <1> ;;enum GtkRecentManagerError
 10618                              <1> %define GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING 	 2
 10619                              <1> %define GTK_RECENT_MANAGER_ERROR_NOT_FOUND 	 0
 10620                              <1> %define GTK_RECENT_MANAGER_ERROR_READ 	 4
 10621                              <1> %define GTK_RECENT_MANAGER_ERROR_UNKNOWN 	 6
 10622                              <1> %define GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED 	 3
 10623                              <1> %define GTK_RECENT_MANAGER_ERROR_WRITE 	 5
 10624                              <1> %define GTK_RECENT_MANAGER_ERROR_INVALID_URI 	 1
 10625                              <1> 
 10626                              <1> ;;enum GtkRecentFilterFlags
 10627                              <1> %define GTK_RECENT_FILTER_GROUP 	 1 << 4
 10628                              <1> %define GTK_RECENT_FILTER_AGE 	 1 << 5
 10629                              <1> %define GTK_RECENT_FILTER_APPLICATION 	 1 << 3
 10630                              <1> %define GTK_RECENT_FILTER_URI 	 1 << 0
 10631                              <1> %define GTK_RECENT_FILTER_DISPLAY_NAME 	 1 << 1
 10632                              <1> %define GTK_RECENT_FILTER_MIME_TYPE 	 1 << 2
 10633                              <1> 
 10634                              <1> ;;enum GtkRecentSortType
 10635                              <1> %define GTK_RECENT_SORT_NONE 	 0
 10636                              <1> %define GTK_RECENT_SORT_LRU 	 1
 10637                              <1> %define GTK_RECENT_SORT_MRU 	 0
 10638                              <1> %define GTK_RECENT_SORT_CUSTOM 	 2
 10639                              <1> 
 10640                              <1> ;;enum GtkRecentChooserError
 10641                              <1> %define GTK_RECENT_CHOOSER_ERROR_NOT_FOUND 	 0
 10642                              <1> %define GTK_RECENT_CHOOSER_ERROR_INVALID_URI 	 1
 10643                              <1> 
 10644                              <1> ;;enum GtkSpinButtonUpdatePolicy
 10645                              <1> %define GTK_UPDATE_IF_VALID 	 1
 10646                              <1> %define GTK_UPDATE_ALWAYS 	 0
 10647                              <1> 
 10648                              <1> ;;enum GtkSpinType
 10649                              <1> %define GTK_SPIN_USER_DEFINED 	 6
 10650                              <1> %define GTK_SPIN_STEP_BACKWARD 	 1
 10651                              <1> %define GTK_SPIN_PAGE_FORWARD 	 2
 10652                              <1> %define GTK_SPIN_HOME 	 4
 10653                              <1> %define GTK_SPIN_PAGE_BACKWARD 	 3
 10654                              <1> %define GTK_SPIN_STEP_FORWARD 	 0
 10655                              <1> %define GTK_SPIN_END 	 5
 10656                              <1> 
 10657                              <1> ;;enum GtkTextBufferTargetInfo
 10658                              <1> %define GTK_TEXT_BUFFER_TARGET_INFO_TEXT 	 - 3
 10659                              <1> %define GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT 	 - 2
 10660                              <1> %define GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS 	 - 1
 10661                              <1> 
 10662                              <1> ;;enum GtkTextWindowType
 10663                              <1> %define GTK_TEXT_WINDOW_TEXT 	 2
 10664                              <1> %define GTK_TEXT_WINDOW_WIDGET 	 1
 10665                              <1> %define GTK_TEXT_WINDOW_TOP 	 5
 10666                              <1> %define GTK_TEXT_WINDOW_BOTTOM 	 6
 10667                              <1> %define GTK_TEXT_WINDOW_PRIVATE 	 0
 10668                              <1> %define GTK_TEXT_WINDOW_LEFT 	 3
 10669                              <1> %define GTK_TEXT_WINDOW_RIGHT 	 4
 10670                              <1> 
 10671                              <1> ;;enum GtkToolbarChildType
 10672                              <1> %define GTK_TOOLBAR_CHILD_WIDGET 	 4
 10673                              <1> %define GTK_TOOLBAR_CHILD_TOGGLEBUTTON 	 2
 10674                              <1> %define GTK_TOOLBAR_CHILD_RADIOBUTTON 	 3
 10675                              <1> %define GTK_TOOLBAR_CHILD_BUTTON 	 1
 10676                              <1> %define GTK_TOOLBAR_CHILD_SPACE 	 0
 10677                              <1> 
 10678                              <1> ;;enum GtkToolbarSpaceStyle
 10679                              <1> %define GTK_TOOLBAR_SPACE_LINE 	 1
 10680                              <1> %define GTK_TOOLBAR_SPACE_EMPTY 	 0
 10681                              <1> 
 10682                              <1> ;;enum GtkToolPaletteDragTargets
 10683                              <1> %define GTK_TOOL_PALETTE_DRAG_GROUPS 	 (1 << 1)
 10684                              <1> %define GTK_TOOL_PALETTE_DRAG_ITEMS 	 (1 << 0)
 10685                              <1> 
 10686                              <1> ;;enum GtkUIManagerItemType
 10687                              <1> %define GTK_UI_MANAGER_TOOLITEM 	 1 << 6
 10688                              <1> %define GTK_UI_MANAGER_POPUP 	 1 << 4
 10689                              <1> %define GTK_UI_MANAGER_AUTO 	 0
 10690                              <1> %define GTK_UI_MANAGER_MENU 	 1 << 1
 10691                              <1> %define GTK_UI_MANAGER_ACCELERATOR 	 1 << 8
 10692                              <1> %define GTK_UI_MANAGER_PLACEHOLDER 	 1 << 3
 10693                              <1> %define GTK_UI_MANAGER_POPUP_WITH_ACCELS 	 1 << 9
 10694                              <1> %define GTK_UI_MANAGER_MENUBAR 	 1 << 0
 10695                              <1> %define GTK_UI_MANAGER_MENUITEM 	 1 << 5
 10696                              <1> %define GTK_UI_MANAGER_TOOLBAR 	 1 << 2
 10697                              <1> %define GTK_UI_MANAGER_SEPARATOR 	 1 << 7
 10698                              <1> 
 10699                              <1> ;;enum GtkCellType
 10700                              <1> %define GTK_CELL_TEXT 	 1
 10701                              <1> %define GTK_CELL_EMPTY 	 0
 10702                              <1> %define GTK_CELL_PIXTEXT 	 3
 10703                              <1> %define GTK_CELL_PIXMAP 	 2
 10704                              <1> %define GTK_CELL_WIDGET 	 4
 10705                              <1> 
 10706                              <1> ;;enum GtkCListDragPos
 10707                              <1> %define GTK_CLIST_DRAG_INTO 	 2
 10708                              <1> %define GTK_CLIST_DRAG_AFTER 	 3
 10709                              <1> %define GTK_CLIST_DRAG_NONE 	 0
 10710                              <1> %define GTK_CLIST_DRAG_BEFORE 	 1
 10711                              <1> 
 10712                              <1> ;;enum GtkButtonAction
 10713                              <1> %define GTK_BUTTON_SELECTS 	 1 << 0
 10714                              <1> %define GTK_BUTTON_EXPANDS 	 1 << 2
 10715                              <1> %define GTK_BUTTON_DRAGS 	 1 << 1
 10716                              <1> %define GTK_BUTTON_IGNORED 	 0
 10717                              <1> 
 10718                              <1> ;;enum GtkCTreePos
 10719                              <1> %define GTK_CTREE_POS_BEFORE 	 0
 10720                              <1> %define GTK_CTREE_POS_AS_CHILD 	 1
 10721                              <1> %define GTK_CTREE_POS_AFTER 	 2
 10722                              <1> 
 10723                              <1> ;;enum GtkCTreeLineStyle
 10724                              <1> %define GTK_CTREE_LINES_SOLID 	 1
 10725                              <1> %define GTK_CTREE_LINES_DOTTED 	 2
 10726                              <1> %define GTK_CTREE_LINES_NONE 	 0
 10727                              <1> %define GTK_CTREE_LINES_TABBED 	 3
 10728                              <1> 
 10729                              <1> ;;enum GtkCTreeExpanderStyle
 10730                              <1> %define GTK_CTREE_EXPANDER_NONE 	 0
 10731                              <1> %define GTK_CTREE_EXPANDER_SQUARE 	 1
 10732                              <1> %define GTK_CTREE_EXPANDER_CIRCULAR 	 3
 10733                              <1> %define GTK_CTREE_EXPANDER_TRIANGLE 	 2
 10734                              <1> 
 10735                              <1> ;;enum GtkCTreeExpansionType
 10736                              <1> %define GTK_CTREE_EXPANSION_COLLAPSE_RECURSIVE 	 3
 10737                              <1> %define GTK_CTREE_EXPANSION_COLLAPSE 	 2
 10738                              <1> %define GTK_CTREE_EXPANSION_TOGGLE 	 4
 10739                              <1> %define GTK_CTREE_EXPANSION_TOGGLE_RECURSIVE 	 5
 10740                              <1> %define GTK_CTREE_EXPANSION_EXPAND_RECURSIVE 	 1
 10741                              <1> %define GTK_CTREE_EXPANSION_EXPAND 	 0
 10742                              <1> 
 10743                              <1> 
 10744                              <1> %macro GTK_ACCEL_LABEL 1
 10745                              <1> 	invoke gtk_accel_label_get_type
 10746                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10747                              <1> %endmacro
 10748                              <1> 
 10749                              <1> %macro GTK_ACCEL_LABEL_CLASS 1
 10750                              <1> 	invoke gtk_accel_label_get_type
 10751                              <1> 	invoke g_type_check_class_cast, %1, eax
 10752                              <1> %endmacro
 10753                              <1> 
 10754                              <1> %macro GTK_IS_ACCEL_LABEL 1
 10755                              <1> 	invoke gtk_accel_label_get_type
 10756                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10757                              <1> %endmacro
 10758                              <1> 
 10759                              <1> %macro GTK_IS_ACCEL_LABEL_CLASS 1
 10760                              <1> 	invoke gtk_accel_label_get_type
 10761                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10762                              <1> %endmacro
 10763                              <1> 
 10764                              <1> %macro GTK_ACCESSIBLE 1
 10765                              <1> 	invoke gtk_accessible_get_type
 10766                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10767                              <1> %endmacro
 10768                              <1> 
 10769                              <1> %macro GTK_ACCESSIBLE_CLASS 1
 10770                              <1> 	invoke gtk_accessible_get_type
 10771                              <1> 	invoke g_type_check_class_cast, %1, eax
 10772                              <1> %endmacro
 10773                              <1> 
 10774                              <1> %macro GTK_IS_ACCESSIBLE 1
 10775                              <1> 	invoke gtk_accessible_get_type
 10776                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10777                              <1> %endmacro
 10778                              <1> 
 10779                              <1> %macro GTK_IS_ACCESSIBLE_CLASS 1
 10780                              <1> 	invoke gtk_accessible_get_type
 10781                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10782                              <1> %endmacro
 10783                              <1> 
 10784                              <1> %macro GTK_ACTION 1
 10785                              <1> 	invoke gtk_action_get_type
 10786                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10787                              <1> %endmacro
 10788                              <1> 
 10789                              <1> %macro GTK_ACTION_CLASS 1
 10790                              <1> 	invoke gtk_action_get_type
 10791                              <1> 	invoke g_type_check_class_cast, %1, eax
 10792                              <1> %endmacro
 10793                              <1> 
 10794                              <1> %macro GTK_IS_ACTION 1
 10795                              <1> 	invoke gtk_action_get_type
 10796                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10797                              <1> %endmacro
 10798                              <1> 
 10799                              <1> %macro GTK_IS_ACTION_CLASS 1
 10800                              <1> 	invoke gtk_action_get_type
 10801                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10802                              <1> %endmacro
 10803                              <1> 
 10804                              <1> %macro GTK_ACTION_GROUP 1
 10805                              <1> 	invoke gtk_action_group_get_type
 10806                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10807                              <1> %endmacro
 10808                              <1> 
 10809                              <1> %macro GTK_ACTION_GROUP_CLASS 1
 10810                              <1> 
 10811                              <1> 
 10812                              <1> 	invoke gtk_action_group_get_type
 10813                              <1> 	invoke g_type_check_class_cast, %1, eax
 10814                              <1> %endmacro
 10815                              <1> 
 10816                              <1> %macro GTK_IS_ACTION_GROUP 1
 10817                              <1> 	invoke gtk_action_group_get_type
 10818                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10819                              <1> %endmacro
 10820                              <1> 
 10821                              <1> %macro GTK_IS_ACTION_GROUP_CLASS 1
 10822                              <1> 	invoke gtk_action_group_get_type
 10823                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10824                              <1> %endmacro
 10825                              <1> 
 10826                              <1> %macro GTK_ACTIVATABLE 1
 10827                              <1> 	invoke gtk_activatable_get_type
 10828                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10829                              <1> %endmacro
 10830                              <1> 
 10831                              <1> %macro GTK_ACTIVATABLE_CLASS 1
 10832                              <1> 	invoke gtk_activatable_get_type
 10833                              <1> 	invoke g_type_check_class_cast, %1, eax
 10834                              <1> %endmacro
 10835                              <1> 
 10836                              <1> %macro GTK_IS_ACTIVATABLE 1
 10837                              <1> 	invoke gtk_activatable_get_type
 10838                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10839                              <1> %endmacro
 10840                              <1> 
 10841                              <1> %macro GTK_IS_ACTIVATABLE_CLASS 1
 10842                              <1> 	invoke gtk_activatable_get_type
 10843                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10844                              <1> %endmacro
 10845                              <1> 
 10846                              <1> %macro GTK_ADJUSTMENT 1
 10847                              <1> 	invoke gtk_adjustment_get_type
 10848                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10849                              <1> %endmacro
 10850                              <1> 
 10851                              <1> %macro GTK_ADJUSTMENT_CLASS 1
 10852                              <1> 	invoke gtk_adjustment_get_type
 10853                              <1> 	invoke g_type_check_class_cast, %1, eax
 10854                              <1> %endmacro
 10855                              <1> 
 10856                              <1> %macro GTK_IS_ADJUSTMENT 1
 10857                              <1> 	invoke gtk_adjustment_get_type
 10858                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10859                              <1> %endmacro
 10860                              <1> 
 10861                              <1> %macro GTK_IS_ADJUSTMENT_CLASS 1
 10862                              <1> 	invoke gtk_adjustment_get_type
 10863                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10864                              <1> %endmacro
 10865                              <1> 
 10866                              <1> %macro GTK_ALIGNMENT 1
 10867                              <1> 	invoke gtk_alignment_get_type
 10868                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10869                              <1> %endmacro
 10870                              <1> 
 10871                              <1> %macro GTK_ALIGNMENT_CLASS 1
 10872                              <1> 	invoke gtk_alignment_get_type
 10873                              <1> 	invoke g_type_check_class_cast, %1, eax
 10874                              <1> %endmacro
 10875                              <1> 
 10876                              <1> %macro GTK_IS_ALIGNMENT 1
 10877                              <1> 	invoke gtk_alignment_get_type
 10878                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10879                              <1> %endmacro
 10880                              <1> 
 10881                              <1> %macro GTK_IS_ALIGNMENT_CLASS 1
 10882                              <1> 	invoke gtk_alignment_get_type
 10883                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10884                              <1> %endmacro
 10885                              <1> 
 10886                              <1> %macro GTK_ARROW 1
 10887                              <1> 	invoke gtk_arrow_get_type
 10888                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10889                              <1> %endmacro
 10890                              <1> 
 10891                              <1> %macro GTK_ARROW_CLASS 1
 10892                              <1> 	invoke gtk_arrow_get_type
 10893                              <1> 	invoke g_type_check_class_cast, %1, eax
 10894                              <1> %endmacro
 10895                              <1> 
 10896                              <1> %macro GTK_IS_ARROW 1
 10897                              <1> 	invoke gtk_arrow_get_type
 10898                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10899                              <1> %endmacro
 10900                              <1> 
 10901                              <1> %macro GTK_IS_ARROW_CLASS 1
 10902                              <1> 	invoke gtk_arrow_get_type
 10903                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10904                              <1> %endmacro
 10905                              <1> 
 10906                              <1> %macro GTK_ASPECT_FRAME 1
 10907                              <1> 	invoke gtk_aspect_frame_get_type
 10908                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10909                              <1> %endmacro
 10910                              <1> 
 10911                              <1> %macro GTK_ASPECT_FRAME_CLASS 1
 10912                              <1> 	invoke gtk_aspect_frame_get_type
 10913                              <1> 	invoke g_type_check_class_cast, %1, eax
 10914                              <1> %endmacro
 10915                              <1> 
 10916                              <1> %macro GTK_IS_ASPECT_FRAME 1
 10917                              <1> 	invoke gtk_aspect_frame_get_type
 10918                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10919                              <1> %endmacro
 10920                              <1> 
 10921                              <1> %macro GTK_IS_ASPECT_FRAME_CLASS 1
 10922                              <1> 	invoke gtk_aspect_frame_get_type
 10923                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10924                              <1> %endmacro
 10925                              <1> 
 10926                              <1> %macro GTK_BUTTON_BOX 1
 10927                              <1> 	invoke gtk_button_box_get_type
 10928                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10929                              <1> %endmacro
 10930                              <1> 
 10931                              <1> %macro GTK_BUTTON_BOX_CLASS 1
 10932                              <1> 	invoke gtk_button_box_get_type
 10933                              <1> 	invoke g_type_check_class_cast, %1, eax
 10934                              <1> %endmacro
 10935                              <1> 
 10936                              <1> %macro GTK_IS_BUTTON_BOX 1
 10937                              <1> 	invoke gtk_button_box_get_type
 10938                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10939                              <1> %endmacro
 10940                              <1> 
 10941                              <1> %macro GTK_IS_BUTTON_BOX_CLASS 1
 10942                              <1> 	invoke gtk_button_box_get_type
 10943                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10944                              <1> %endmacro
 10945                              <1> 
 10946                              <1> %macro GTK_BIN 1
 10947                              <1> 	invoke gtk_bin_get_type
 10948                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10949                              <1> %endmacro
 10950                              <1> 
 10951                              <1> %macro GTK_BIN_CLASS 1
 10952                              <1> 	invoke gtk_bin_get_type
 10953                              <1> 	invoke g_type_check_class_cast, %1, eax
 10954                              <1> %endmacro
 10955                              <1> 
 10956                              <1> %macro GTK_IS_BIN 1
 10957                              <1> 	invoke gtk_bin_get_type
 10958                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10959                              <1> %endmacro
 10960                              <1> 
 10961                              <1> %macro GTK_IS_BIN_CLASS 1
 10962                              <1> 	invoke gtk_bin_get_type
 10963                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10964                              <1> %endmacro
 10965                              <1> 
 10966                              <1> %macro GTK_BOX 1
 10967                              <1> 	invoke gtk_box_get_type
 10968                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10969                              <1> %endmacro
 10970                              <1> 
 10971                              <1> %macro GTK_BOX_CLASS 1
 10972                              <1> 	invoke gtk_box_get_type
 10973                              <1> 	invoke g_type_check_class_cast, %1, eax
 10974                              <1> %endmacro
 10975                              <1> 
 10976                              <1> %macro GTK_IS_BOX 1
 10977                              <1> 	invoke gtk_box_get_type
 10978                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10979                              <1> %endmacro
 10980                              <1> 
 10981                              <1> %macro GTK_IS_BOX_CLASS 1
 10982                              <1> 	invoke gtk_box_get_type
 10983                              <1> 	invoke g_type_check_class_is_a , %1, eax
 10984                              <1> %endmacro
 10985                              <1> 
 10986                              <1> %macro GTK_BUILDABLE 1
 10987                              <1> 	invoke gtk_buildable_get_type
 10988                              <1> 	invoke g_type_check_instance_cast, %1, eax
 10989                              <1> %endmacro
 10990                              <1> 
 10991                              <1> %macro GTK_BUILDABLE_CLASS 1
 10992                              <1> 	invoke gtk_buildable_get_type
 10993                              <1> 	invoke g_type_check_class_cast, %1, eax
 10994                              <1> %endmacro
 10995                              <1> 
 10996                              <1> %macro GTK_IS_BUILDABLE 1
 10997                              <1> 	invoke gtk_buildable_get_type
 10998                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 10999                              <1> %endmacro
 11000                              <1> 
 11001                              <1> %macro GTK_IS_BUILDABLE_CLASS 1
 11002                              <1> 	invoke gtk_buildable_get_type
 11003                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11004                              <1> %endmacro
 11005                              <1> 
 11006                              <1> %macro GTK_BUILDER 1
 11007                              <1> 	invoke gtk_builder_get_type
 11008                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11009                              <1> %endmacro
 11010                              <1> 
 11011                              <1> %macro GTK_BUILDER_CLASS 1
 11012                              <1> 	invoke gtk_builder_get_type
 11013                              <1> 	invoke g_type_check_class_cast, %1, eax
 11014                              <1> %endmacro
 11015                              <1> 
 11016                              <1> %macro GTK_IS_BUILDER 1
 11017                              <1> 	invoke gtk_builder_get_type
 11018                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11019                              <1> %endmacro
 11020                              <1> 
 11021                              <1> %macro GTK_IS_BUILDER_CLASS 1
 11022                              <1> 	invoke gtk_builder_get_type
 11023                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11024                              <1> %endmacro
 11025                              <1> 
 11026                              <1> %macro GTK_BUTTON 1
 11027                              <1> 	invoke gtk_button_get_type
 11028                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11029                              <1> %endmacro
 11030                              <1> 
 11031                              <1> %macro GTK_BUTTON_CLASS 1
 11032                              <1> 	invoke gtk_button_get_type
 11033                              <1> 	invoke g_type_check_class_cast, %1, eax
 11034                              <1> %endmacro
 11035                              <1> 
 11036                              <1> %macro GTK_IS_BUTTON 1
 11037                              <1> 	invoke gtk_button_get_type
 11038                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11039                              <1> %endmacro
 11040                              <1> 
 11041                              <1> %macro GTK_IS_BUTTON_CLASS 1
 11042                              <1> 	invoke gtk_button_get_type
 11043                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11044                              <1> %endmacro
 11045                              <1> 
 11046                              <1> %macro GTK_CALENDAR 1
 11047                              <1> 	invoke gtk_calendar_get_type
 11048                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11049                              <1> %endmacro
 11050                              <1> 
 11051                              <1> %macro GTK_CALENDAR_CLASS 1
 11052                              <1> 	invoke gtk_calendar_get_type
 11053                              <1> 	invoke g_type_check_class_cast, %1, eax
 11054                              <1> %endmacro
 11055                              <1> 
 11056                              <1> %macro GTK_IS_CALENDAR 1
 11057                              <1> 	invoke gtk_calendar_get_type
 11058                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11059                              <1> %endmacro
 11060                              <1> 
 11061                              <1> %macro GTK_IS_CALENDAR_CLASS 1
 11062                              <1> 	invoke gtk_calendar_get_type
 11063                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11064                              <1> %endmacro
 11065                              <1> 
 11066                              <1> %macro GTK_CELL_EDITABLE 1
 11067                              <1> 	invoke gtk_cell_editable_get_type
 11068                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11069                              <1> %endmacro
 11070                              <1> 
 11071                              <1> %macro GTK_CELL_EDITABLE_CLASS 1
 11072                              <1> 	invoke gtk_cell_editable_get_type
 11073                              <1> 	invoke g_type_check_class_cast, %1, eax
 11074                              <1> %endmacro
 11075                              <1> 
 11076                              <1> %macro GTK_IS_CELL_EDITABLE 1
 11077                              <1> 	invoke gtk_cell_editable_get_type
 11078                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11079                              <1> %endmacro
 11080                              <1> 
 11081                              <1> %macro GTK_IS_CELL_EDITABLE_CLASS 1
 11082                              <1> 	invoke gtk_cell_editable_get_type
 11083                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11084                              <1> %endmacro
 11085                              <1> 
 11086                              <1> %macro GTK_CELL_LAYOUT 1
 11087                              <1> 	invoke gtk_cell_layout_get_type
 11088                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11089                              <1> %endmacro
 11090                              <1> 
 11091                              <1> %macro GTK_CELL_LAYOUT_CLASS 1
 11092                              <1> 	invoke gtk_cell_layout_get_type
 11093                              <1> 	invoke g_type_check_class_cast, %1, eax
 11094                              <1> %endmacro
 11095                              <1> 
 11096                              <1> %macro GTK_IS_CELL_LAYOUT 1
 11097                              <1> 	invoke gtk_cell_layout_get_type
 11098                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11099                              <1> %endmacro
 11100                              <1> 
 11101                              <1> %macro GTK_IS_CELL_LAYOUT_CLASS 1
 11102                              <1> 	invoke gtk_cell_layout_get_type
 11103                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11104                              <1> %endmacro
 11105                              <1> 
 11106                              <1> %macro GTK_CELL_RENDERER 1
 11107                              <1> 	invoke gtk_cell_renderer_get_type
 11108                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11109                              <1> %endmacro
 11110                              <1> 
 11111                              <1> %macro GTK_CELL_RENDERER_CLASS 1
 11112                              <1> 	invoke gtk_cell_renderer_get_type
 11113                              <1> 	invoke g_type_check_class_cast, %1, eax
 11114                              <1> %endmacro
 11115                              <1> 
 11116                              <1> %macro GTK_IS_CELL_RENDERER 1
 11117                              <1> 	invoke gtk_cell_renderer_get_type
 11118                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11119                              <1> %endmacro
 11120                              <1> 
 11121                              <1> %macro GTK_IS_CELL_RENDERER_CLASS 1
 11122                              <1> 	invoke gtk_cell_renderer_get_type
 11123                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11124                              <1> %endmacro
 11125                              <1> 
 11126                              <1> %macro GTK_CELL_RENDERER_ACCEL 1
 11127                              <1> 	invoke gtk_cell_renderer_accel_get_type
 11128                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11129                              <1> %endmacro
 11130                              <1> 
 11131                              <1> %macro GTK_CELL_RENDERER_ACCEL_CLASS 1
 11132                              <1> 	invoke gtk_cell_renderer_accel_get_type
 11133                              <1> 	invoke g_type_check_class_cast, %1, eax
 11134                              <1> %endmacro
 11135                              <1> 
 11136                              <1> %macro GTK_IS_CELL_RENDERER_ACCEL 1
 11137                              <1> 	invoke gtk_cell_renderer_accel_get_type
 11138                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11139                              <1> %endmacro
 11140                              <1> 
 11141                              <1> %macro GTK_IS_CELL_RENDERER_ACCEL_CLASS 1
 11142                              <1> 	invoke gtk_cell_renderer_accel_get_type
 11143                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11144                              <1> %endmacro
 11145                              <1> 
 11146                              <1> %macro GTK_CELL_RENDERER_COMBO 1
 11147                              <1> 	invoke gtk_cell_renderer_combo_get_type
 11148                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11149                              <1> %endmacro
 11150                              <1> 
 11151                              <1> %macro GTK_CELL_RENDERER_COMBO_CLASS 1
 11152                              <1> 	invoke gtk_cell_renderer_combo_get_type
 11153                              <1> 	invoke g_type_check_class_cast, %1, eax
 11154                              <1> %endmacro
 11155                              <1> 
 11156                              <1> %macro GTK_IS_CELL_RENDERER_COMBO 1
 11157                              <1> 	invoke gtk_cell_renderer_combo_get_type
 11158                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11159                              <1> %endmacro
 11160                              <1> 
 11161                              <1> %macro GTK_IS_CELL_RENDERER_COMBO_CLASS 1
 11162                              <1> 	invoke gtk_cell_renderer_combo_get_type
 11163                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11164                              <1> %endmacro
 11165                              <1> 
 11166                              <1> %macro GTK_CELL_RENDERER_PIXBUF 1
 11167                              <1> 	invoke gtk_cell_renderer_pixbuf_get_type
 11168                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11169                              <1> %endmacro
 11170                              <1> 
 11171                              <1> %macro GTK_CELL_RENDERER_PIXBUF_CLASS 1
 11172                              <1> 	invoke gtk_cell_renderer_pixbuf_get_type
 11173                              <1> 	invoke g_type_check_class_cast, %1, eax
 11174                              <1> %endmacro
 11175                              <1> 
 11176                              <1> %macro GTK_IS_CELL_RENDERER_PIXBUF 1
 11177                              <1> 	invoke gtk_cell_renderer_pixbuf_get_type
 11178                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11179                              <1> %endmacro
 11180                              <1> 
 11181                              <1> %macro GTK_IS_CELL_RENDERER_PIXBUF_CLASS 1
 11182                              <1> 	invoke gtk_cell_renderer_pixbuf_get_type
 11183                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11184                              <1> %endmacro
 11185                              <1> 
 11186                              <1> %macro GTK_CELL_RENDERER_PROGRESS 1
 11187                              <1> 	invoke gtk_cell_renderer_progress_get_type
 11188                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11189                              <1> %endmacro
 11190                              <1> 
 11191                              <1> %macro GTK_CELL_RENDERER_PROGRESS_CLASS 1
 11192                              <1> 	invoke gtk_cell_renderer_progress_get_type
 11193                              <1> 	invoke g_type_check_class_cast, %1, eax
 11194                              <1> %endmacro
 11195                              <1> 
 11196                              <1> %macro GTK_IS_CELL_RENDERER_PROGRESS 1
 11197                              <1> 	invoke gtk_cell_renderer_progress_get_type
 11198                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11199                              <1> %endmacro
 11200                              <1> 
 11201                              <1> %macro GTK_IS_CELL_RENDERER_PROGRESS_CLASS 1
 11202                              <1> 	invoke gtk_cell_renderer_progress_get_type
 11203                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11204                              <1> %endmacro
 11205                              <1> 
 11206                              <1> %macro GTK_CELL_RENDERER_SPIN 1
 11207                              <1> 	invoke gtk_cell_renderer_spin_get_type
 11208                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11209                              <1> %endmacro
 11210                              <1> 
 11211                              <1> %macro GTK_CELL_RENDERER_SPIN_CLASS 1
 11212                              <1> 	invoke gtk_cell_renderer_spin_get_type
 11213                              <1> 	invoke g_type_check_class_cast, %1, eax
 11214                              <1> %endmacro
 11215                              <1> 
 11216                              <1> %macro GTK_IS_CELL_RENDERER_SPIN 1
 11217                              <1> 	invoke gtk_cell_renderer_spin_get_type
 11218                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11219                              <1> %endmacro
 11220                              <1> 
 11221                              <1> %macro GTK_IS_CELL_RENDERER_SPIN_CLASS 1
 11222                              <1> 	invoke gtk_cell_renderer_spin_get_type
 11223                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11224                              <1> %endmacro
 11225                              <1> 
 11226                              <1> %macro GTK_CELL_RENDERER_SPINNER 1
 11227                              <1> 	invoke gtk_cell_renderer_spinner_get_type
 11228                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11229                              <1> %endmacro
 11230                              <1> 
 11231                              <1> %macro GTK_CELL_RENDERER_SPINNER_CLASS 1
 11232                              <1> 	invoke gtk_cell_renderer_spinner_get_type
 11233                              <1> 	invoke g_type_check_class_cast, %1, eax
 11234                              <1> %endmacro
 11235                              <1> 
 11236                              <1> %macro GTK_IS_CELL_RENDERER_SPINNER 1
 11237                              <1> 	invoke gtk_cell_renderer_spinner_get_type
 11238                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11239                              <1> %endmacro
 11240                              <1> 
 11241                              <1> %macro GTK_IS_CELL_RENDERER_SPINNER_CLASS 1
 11242                              <1> 	invoke gtk_cell_renderer_spinner_get_type
 11243                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11244                              <1> %endmacro
 11245                              <1> 
 11246                              <1> %macro GTK_CELL_RENDERER_TEXT 1
 11247                              <1> 	invoke gtk_cell_renderer_text_get_type
 11248                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11249                              <1> %endmacro
 11250                              <1> 
 11251                              <1> %macro GTK_CELL_RENDERER_TEXT_CLASS 1
 11252                              <1> 	invoke gtk_cell_renderer_text_get_type
 11253                              <1> 	invoke g_type_check_class_cast, %1, eax
 11254                              <1> %endmacro
 11255                              <1> 
 11256                              <1> %macro GTK_IS_CELL_RENDERER_TEXT 1
 11257                              <1> 	invoke gtk_cell_renderer_text_get_type
 11258                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11259                              <1> %endmacro
 11260                              <1> 
 11261                              <1> %macro GTK_IS_CELL_RENDERER_TEXT_CLASS 1
 11262                              <1> 	invoke gtk_cell_renderer_text_get_type
 11263                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11264                              <1> %endmacro
 11265                              <1> 
 11266                              <1> %macro GTK_CELL_RENDERER_TOGGLE 1
 11267                              <1> 	invoke gtk_cell_renderer_toggle_get_type
 11268                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11269                              <1> %endmacro
 11270                              <1> 
 11271                              <1> %macro GTK_CELL_RENDERER_TOGGLE_CLASS 1
 11272                              <1> 	invoke gtk_cell_renderer_toggle_get_type
 11273                              <1> 	invoke g_type_check_class_cast, %1, eax
 11274                              <1> %endmacro
 11275                              <1> 
 11276                              <1> %macro GTK_IS_CELL_RENDERER_TOGGLE 1
 11277                              <1> 	invoke gtk_cell_renderer_toggle_get_type
 11278                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11279                              <1> %endmacro
 11280                              <1> 
 11281                              <1> %macro GTK_IS_CELL_RENDERER_TOGGLE_CLASS 1
 11282                              <1> 	invoke gtk_cell_renderer_toggle_get_type
 11283                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11284                              <1> %endmacro
 11285                              <1> 
 11286                              <1> %macro GTK_CELL_VIEW 1
 11287                              <1> 	invoke gtk_cell_view_get_type
 11288                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11289                              <1> %endmacro
 11290                              <1> 
 11291                              <1> %macro GTK_CELL_VIEW_CLASS 1
 11292                              <1> 	invoke gtk_cell_view_get_type
 11293                              <1> 	invoke g_type_check_class_cast, %1, eax
 11294                              <1> %endmacro
 11295                              <1> 
 11296                              <1> %macro GTK_IS_CELL_VIEW 1
 11297                              <1> 	invoke gtk_cell_view_get_type
 11298                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11299                              <1> %endmacro
 11300                              <1> 
 11301                              <1> %macro GTK_IS_CELL_VIEW_CLASS 1
 11302                              <1> 	invoke gtk_cell_view_get_type
 11303                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11304                              <1> %endmacro
 11305                              <1> 
 11306                              <1> %macro GTK_CHECK_BUTTON 1
 11307                              <1> 	invoke gtk_check_button_get_type
 11308                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11309                              <1> %endmacro
 11310                              <1> 
 11311                              <1> %macro GTK_CHECK_BUTTON_CLASS 1
 11312                              <1> 	invoke gtk_check_button_get_type
 11313                              <1> 	invoke g_type_check_class_cast, %1, eax
 11314                              <1> %endmacro
 11315                              <1> 
 11316                              <1> %macro GTK_IS_CHECK_BUTTON 1
 11317                              <1> 	invoke gtk_check_button_get_type
 11318                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11319                              <1> %endmacro
 11320                              <1> 
 11321                              <1> %macro GTK_IS_CHECK_BUTTON_CLASS 1
 11322                              <1> 	invoke gtk_check_button_get_type
 11323                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11324                              <1> %endmacro
 11325                              <1> 
 11326                              <1> %macro GTK_CHECK_MENU_ITEM 1
 11327                              <1> 	invoke gtk_check_menu_item_get_type
 11328                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11329                              <1> %endmacro
 11330                              <1> 
 11331                              <1> %macro GTK_CHECK_MENU_ITEM_CLASS 1
 11332                              <1> 	invoke gtk_check_menu_item_get_type
 11333                              <1> 	invoke g_type_check_class_cast, %1, eax
 11334                              <1> %endmacro
 11335                              <1> 
 11336                              <1> %macro GTK_IS_CHECK_MENU_ITEM 1
 11337                              <1> 	invoke gtk_check_menu_item_get_type
 11338                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11339                              <1> %endmacro
 11340                              <1> 
 11341                              <1> %macro GTK_IS_CHECK_MENU_ITEM_CLASS 1
 11342                              <1> 	invoke gtk_check_menu_item_get_type
 11343                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11344                              <1> %endmacro
 11345                              <1> 
 11346                              <1> %macro GTK_CLIPBOARD 1
 11347                              <1> 	invoke gtk_clipboard_get_type
 11348                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11349                              <1> %endmacro
 11350                              <1> 
 11351                              <1> %macro GTK_CLIPBOARD_CLASS 1
 11352                              <1> 	invoke gtk_clipboard_get_type
 11353                              <1> 	invoke g_type_check_class_cast, %1, eax
 11354                              <1> %endmacro
 11355                              <1> 
 11356                              <1> %macro GTK_IS_CLIPBOARD 1
 11357                              <1> 	invoke gtk_clipboard_get_type
 11358                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11359                              <1> %endmacro
 11360                              <1> 
 11361                              <1> %macro GTK_IS_CLIPBOARD_CLASS 1
 11362                              <1> 	invoke gtk_clipboard_get_type
 11363                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11364                              <1> %endmacro
 11365                              <1> 
 11366                              <1> %macro GTK_CLIST 1
 11367                              <1> 	invoke gtk_clist_get_type
 11368                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11369                              <1> %endmacro
 11370                              <1> 
 11371                              <1> %macro GTK_CLIST_CLASS 1
 11372                              <1> 	invoke gtk_clist_get_type
 11373                              <1> 	invoke g_type_check_class_cast, %1, eax
 11374                              <1> %endmacro
 11375                              <1> 
 11376                              <1> %macro GTK_IS_CLIST 1
 11377                              <1> 	invoke gtk_clist_get_type
 11378                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11379                              <1> %endmacro
 11380                              <1> 
 11381                              <1> %macro GTK_IS_CLIST_CLASS 1
 11382                              <1> 	invoke gtk_clist_get_type
 11383                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11384                              <1> %endmacro
 11385                              <1> 
 11386                              <1> %macro GTK_COLOR_BUTTON 1
 11387                              <1> 	invoke gtk_color_button_get_type
 11388                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11389                              <1> %endmacro
 11390                              <1> 
 11391                              <1> %macro GTK_COLOR_BUTTON_CLASS 1
 11392                              <1> 	invoke gtk_color_button_get_type
 11393                              <1> 	invoke g_type_check_class_cast, %1, eax
 11394                              <1> %endmacro
 11395                              <1> 
 11396                              <1> %macro GTK_IS_COLOR_BUTTON 1
 11397                              <1> 	invoke gtk_color_button_get_type
 11398                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11399                              <1> %endmacro
 11400                              <1> 
 11401                              <1> %macro GTK_IS_COLOR_BUTTON_CLASS 1
 11402                              <1> 	invoke gtk_color_button_get_type
 11403                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11404                              <1> %endmacro
 11405                              <1> 
 11406                              <1> %macro GTK_COLOR_SELECTION 1
 11407                              <1> 	invoke gtk_color_selection_get_type
 11408                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11409                              <1> %endmacro
 11410                              <1> 
 11411                              <1> %macro GTK_COLOR_SELECTION_CLASS 1
 11412                              <1> 	invoke gtk_color_selection_get_type
 11413                              <1> 	invoke g_type_check_class_cast, %1, eax
 11414                              <1> %endmacro
 11415                              <1> 
 11416                              <1> %macro GTK_IS_COLOR_SELECTION 1
 11417                              <1> 	invoke gtk_color_selection_get_type
 11418                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11419                              <1> %endmacro
 11420                              <1> 
 11421                              <1> %macro GTK_IS_COLOR_SELECTION_CLASS 1
 11422                              <1> 	invoke gtk_color_selection_get_type
 11423                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11424                              <1> %endmacro
 11425                              <1> 
 11426                              <1> %macro GTK_COLOR_SELECTION_DIALOG 1
 11427                              <1> 	invoke gtk_color_selection_dialog_get_type
 11428                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11429                              <1> %endmacro
 11430                              <1> 
 11431                              <1> %macro GTK_COLOR_SELECTION_DIALOG_CLASS 1
 11432                              <1> 	invoke gtk_color_selection_dialog_get_type
 11433                              <1> 	invoke g_type_check_class_cast, %1, eax
 11434                              <1> %endmacro
 11435                              <1> 
 11436                              <1> %macro GTK_IS_COLOR_SELECTION_DIALOG 1
 11437                              <1> 	invoke gtk_color_selection_dialog_get_type
 11438                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11439                              <1> %endmacro
 11440                              <1> 
 11441                              <1> %macro GTK_IS_COLOR_SELECTION_DIALOG_CLASS 1
 11442                              <1> 	invoke gtk_color_selection_dialog_get_type
 11443                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11444                              <1> %endmacro
 11445                              <1> 
 11446                              <1> %macro GTK_COMBO 1
 11447                              <1> 	invoke gtk_combo_get_type
 11448                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11449                              <1> %endmacro
 11450                              <1> 
 11451                              <1> %macro GTK_COMBO_CLASS 1
 11452                              <1> 	invoke gtk_combo_get_type
 11453                              <1> 	invoke g_type_check_class_cast, %1, eax
 11454                              <1> %endmacro
 11455                              <1> 
 11456                              <1> %macro GTK_IS_COMBO 1
 11457                              <1> 	invoke gtk_combo_get_type
 11458                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11459                              <1> %endmacro
 11460                              <1> 
 11461                              <1> %macro GTK_IS_COMBO_CLASS 1
 11462                              <1> 	invoke gtk_combo_get_type
 11463                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11464                              <1> %endmacro
 11465                              <1> 
 11466                              <1> %macro GTK_COMBO_BOX 1
 11467                              <1> 	invoke gtk_combo_box_get_type
 11468                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11469                              <1> %endmacro
 11470                              <1> 
 11471                              <1> %macro GTK_COMBO_BOX_CLASS 1
 11472                              <1> 	invoke gtk_combo_box_get_type
 11473                              <1> 	invoke g_type_check_class_cast, %1, eax
 11474                              <1> %endmacro
 11475                              <1> 
 11476                              <1> %macro GTK_IS_COMBO_BOX 1
 11477                              <1> 	invoke gtk_combo_box_get_type
 11478                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11479                              <1> %endmacro
 11480                              <1> 
 11481                              <1> %macro GTK_IS_COMBO_BOX_CLASS 1
 11482                              <1> 	invoke gtk_combo_box_get_type
 11483                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11484                              <1> %endmacro
 11485                              <1> 
 11486                              <1> %macro GTK_COMBO_BOX_ENTRY 1
 11487                              <1> 	invoke gtk_combo_box_entry_get_type
 11488                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11489                              <1> %endmacro
 11490                              <1> 
 11491                              <1> %macro GTK_COMBO_BOX_ENTRY_CLASS 1
 11492                              <1> 	invoke gtk_combo_box_entry_get_type
 11493                              <1> 	invoke g_type_check_class_cast, %1, eax
 11494                              <1> %endmacro
 11495                              <1> 
 11496                              <1> %macro GTK_IS_COMBO_BOX_ENTRY 1
 11497                              <1> 	invoke gtk_combo_box_entry_get_type
 11498                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11499                              <1> %endmacro
 11500                              <1> 
 11501                              <1> %macro GTK_IS_COMBO_BOX_ENTRY_CLASS 1
 11502                              <1> 	invoke gtk_combo_box_entry_get_type
 11503                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11504                              <1> %endmacro
 11505                              <1> 
 11506                              <1> %macro GTK_COMBO_BOX_TEXT 1
 11507                              <1> 	invoke gtk_combo_box_text_get_type
 11508                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11509                              <1> %endmacro
 11510                              <1> 
 11511                              <1> %macro GTK_COMBO_BOX_TEXT_CLASS 1
 11512                              <1> 	invoke gtk_combo_box_text_get_type
 11513                              <1> 	invoke g_type_check_class_cast, %1, eax
 11514                              <1> %endmacro
 11515                              <1> 
 11516                              <1> %macro GTK_IS_COMBO_BOX_TEXT 1
 11517                              <1> 	invoke gtk_combo_box_text_get_type
 11518                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11519                              <1> %endmacro
 11520                              <1> 
 11521                              <1> %macro GTK_IS_COMBO_BOX_TEXT_CLASS 1
 11522                              <1> 	invoke gtk_combo_box_text_get_type
 11523                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11524                              <1> %endmacro
 11525                              <1> 
 11526                              <1> %macro GTK_CONTAINER 1
 11527                              <1> 	invoke gtk_container_get_type
 11528                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11529                              <1> %endmacro
 11530                              <1> 
 11531                              <1> %macro GTK_CONTAINER_CLASS 1
 11532                              <1> 	invoke gtk_container_get_type
 11533                              <1> 	invoke g_type_check_class_cast, %1, eax
 11534                              <1> %endmacro
 11535                              <1> 
 11536                              <1> %macro GTK_IS_CONTAINER 1
 11537                              <1> 	invoke gtk_container_get_type
 11538                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11539                              <1> %endmacro
 11540                              <1> 
 11541                              <1> %macro GTK_IS_CONTAINER_CLASS 1
 11542                              <1> 	invoke gtk_container_get_type
 11543                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11544                              <1> %endmacro
 11545                              <1> 
 11546                              <1> %macro GTK_CTREE 1
 11547                              <1> 	invoke gtk_ctree_get_type
 11548                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11549                              <1> %endmacro
 11550                              <1> 
 11551                              <1> %macro GTK_CTREE_CLASS 1
 11552                              <1> 	invoke gtk_ctree_get_type
 11553                              <1> 	invoke g_type_check_class_cast, %1, eax
 11554                              <1> %endmacro
 11555                              <1> 
 11556                              <1> %macro GTK_IS_CTREE 1
 11557                              <1> 	invoke gtk_ctree_get_type
 11558                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11559                              <1> %endmacro
 11560                              <1> 
 11561                              <1> %macro GTK_IS_CTREE_CLASS 1
 11562                              <1> 	invoke gtk_ctree_get_type
 11563                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11564                              <1> %endmacro
 11565                              <1> 
 11566                              <1> %macro GTK_CURVE 1
 11567                              <1> 	invoke gtk_curve_get_type
 11568                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11569                              <1> %endmacro
 11570                              <1> 
 11571                              <1> %macro GTK_CURVE_CLASS 1
 11572                              <1> 	invoke gtk_curve_get_type
 11573                              <1> 	invoke g_type_check_class_cast, %1, eax
 11574                              <1> %endmacro
 11575                              <1> 
 11576                              <1> %macro GTK_IS_CURVE 1
 11577                              <1> 	invoke gtk_curve_get_type
 11578                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11579                              <1> %endmacro
 11580                              <1> 
 11581                              <1> %macro GTK_IS_CURVE_CLASS 1
 11582                              <1> 	invoke gtk_curve_get_type
 11583                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11584                              <1> %endmacro
 11585                              <1> 
 11586                              <1> %macro GTK_DIALOG 1
 11587                              <1> 	invoke gtk_dialog_get_type
 11588                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11589                              <1> %endmacro
 11590                              <1> 
 11591                              <1> %macro GTK_DIALOG_CLASS 1
 11592                              <1> 	invoke gtk_dialog_get_type
 11593                              <1> 	invoke g_type_check_class_cast, %1, eax
 11594                              <1> %endmacro
 11595                              <1> 
 11596                              <1> %macro GTK_IS_DIALOG 1
 11597                              <1> 	invoke gtk_dialog_get_type
 11598                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11599                              <1> %endmacro
 11600                              <1> 
 11601                              <1> %macro GTK_IS_DIALOG_CLASS 1
 11602                              <1> 	invoke gtk_dialog_get_type
 11603                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11604                              <1> %endmacro
 11605                              <1> 
 11606                              <1> %macro GTK_DRAWING_AREA 1
 11607                              <1> 	invoke gtk_drawing_area_get_type
 11608                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11609                              <1> %endmacro
 11610                              <1> 
 11611                              <1> %macro GTK_DRAWING_AREA_CLASS 1
 11612                              <1> 	invoke gtk_drawing_area_get_type
 11613                              <1> 	invoke g_type_check_class_cast, %1, eax
 11614                              <1> %endmacro
 11615                              <1> 
 11616                              <1> %macro GTK_IS_DRAWING_AREA 1
 11617                              <1> 	invoke gtk_drawing_area_get_type
 11618                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11619                              <1> %endmacro
 11620                              <1> 
 11621                              <1> %macro GTK_IS_DRAWING_AREA_CLASS 1
 11622                              <1> 	invoke gtk_drawing_area_get_type
 11623                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11624                              <1> %endmacro
 11625                              <1> 
 11626                              <1> %macro GTK_EDITABLE 1
 11627                              <1> 	invoke gtk_editable_get_type
 11628                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11629                              <1> %endmacro
 11630                              <1> 
 11631                              <1> %macro GTK_EDITABLE_CLASS 1
 11632                              <1> 	invoke gtk_editable_get_type
 11633                              <1> 	invoke g_type_check_class_cast, %1, eax
 11634                              <1> %endmacro
 11635                              <1> 
 11636                              <1> %macro GTK_IS_EDITABLE 1
 11637                              <1> 	invoke gtk_editable_get_type
 11638                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11639                              <1> %endmacro
 11640                              <1> 
 11641                              <1> %macro GTK_IS_EDITABLE_CLASS 1
 11642                              <1> 	invoke gtk_editable_get_type
 11643                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11644                              <1> %endmacro
 11645                              <1> 
 11646                              <1> %macro GTK_ENTRY 1
 11647                              <1> 	invoke gtk_entry_get_type
 11648                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11649                              <1> %endmacro
 11650                              <1> 
 11651                              <1> %macro GTK_ENTRY_CLASS 1
 11652                              <1> 	invoke gtk_entry_get_type
 11653                              <1> 	invoke g_type_check_class_cast, %1, eax
 11654                              <1> %endmacro
 11655                              <1> 
 11656                              <1> %macro GTK_IS_ENTRY 1
 11657                              <1> 	invoke gtk_entry_get_type
 11658                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11659                              <1> %endmacro
 11660                              <1> 
 11661                              <1> %macro GTK_IS_ENTRY_CLASS 1
 11662                              <1> 	invoke gtk_entry_get_type
 11663                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11664                              <1> %endmacro
 11665                              <1> 
 11666                              <1> %macro GTK_ENTRY_BUFFER 1
 11667                              <1> 	invoke gtk_entry_buffer_get_type
 11668                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11669                              <1> %endmacro
 11670                              <1> 
 11671                              <1> %macro GTK_ENTRY_BUFFER_CLASS 1
 11672                              <1> 	invoke gtk_entry_buffer_get_type
 11673                              <1> 	invoke g_type_check_class_cast, %1, eax
 11674                              <1> %endmacro
 11675                              <1> 
 11676                              <1> %macro GTK_IS_ENTRY_BUFFER 1
 11677                              <1> 	invoke gtk_entry_buffer_get_type
 11678                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11679                              <1> %endmacro
 11680                              <1> 
 11681                              <1> %macro GTK_IS_ENTRY_BUFFER_CLASS 1
 11682                              <1> 	invoke gtk_entry_buffer_get_type
 11683                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11684                              <1> %endmacro
 11685                              <1> 
 11686                              <1> %macro GTK_ENTRY_COMPLETION 1
 11687                              <1> 	invoke gtk_entry_completion_get_type
 11688                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11689                              <1> %endmacro
 11690                              <1> 
 11691                              <1> %macro GTK_ENTRY_COMPLETION_CLASS 1
 11692                              <1> 	invoke gtk_entry_completion_get_type
 11693                              <1> 	invoke g_type_check_class_cast, %1, eax
 11694                              <1> %endmacro
 11695                              <1> 
 11696                              <1> %macro GTK_IS_ENTRY_COMPLETION 1
 11697                              <1> 	invoke gtk_entry_completion_get_type
 11698                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11699                              <1> %endmacro
 11700                              <1> 
 11701                              <1> %macro GTK_IS_ENTRY_COMPLETION_CLASS 1
 11702                              <1> 	invoke gtk_entry_completion_get_type
 11703                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11704                              <1> %endmacro
 11705                              <1> 
 11706                              <1> %macro GTK_EVENT_BOX 1
 11707                              <1> 	invoke gtk_event_box_get_type
 11708                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11709                              <1> %endmacro
 11710                              <1> 
 11711                              <1> %macro GTK_EVENT_BOX_CLASS 1
 11712                              <1> 	invoke gtk_event_box_get_type
 11713                              <1> 	invoke g_type_check_class_cast, %1, eax
 11714                              <1> %endmacro
 11715                              <1> 
 11716                              <1> %macro GTK_IS_EVENT_BOX 1
 11717                              <1> 	invoke gtk_event_box_get_type
 11718                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11719                              <1> %endmacro
 11720                              <1> 
 11721                              <1> %macro GTK_IS_EVENT_BOX_CLASS 1
 11722                              <1> 	invoke gtk_event_box_get_type
 11723                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11724                              <1> %endmacro
 11725                              <1> 
 11726                              <1> %macro GTK_EXPANDER 1
 11727                              <1> 	invoke gtk_expander_get_type
 11728                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11729                              <1> %endmacro
 11730                              <1> 
 11731                              <1> %macro GTK_EXPANDER_CLASS 1
 11732                              <1> 	invoke gtk_expander_get_type
 11733                              <1> 	invoke g_type_check_class_cast, %1, eax
 11734                              <1> %endmacro
 11735                              <1> 
 11736                              <1> %macro GTK_IS_EXPANDER 1
 11737                              <1> 	invoke gtk_expander_get_type
 11738                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11739                              <1> %endmacro
 11740                              <1> 
 11741                              <1> %macro GTK_IS_EXPANDER_CLASS 1
 11742                              <1> 	invoke gtk_expander_get_type
 11743                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11744                              <1> %endmacro
 11745                              <1> 
 11746                              <1> %macro GTK_FILE_CHOOSER 1
 11747                              <1> 	invoke gtk_file_chooser_get_type
 11748                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11749                              <1> %endmacro
 11750                              <1> 
 11751                              <1> %macro GTK_FILE_CHOOSER_CLASS 1
 11752                              <1> 	invoke gtk_file_chooser_get_type
 11753                              <1> 	invoke g_type_check_class_cast, %1, eax
 11754                              <1> %endmacro
 11755                              <1> 
 11756                              <1> %macro GTK_IS_FILE_CHOOSER 1
 11757                              <1> 	invoke gtk_file_chooser_get_type
 11758                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11759                              <1> %endmacro
 11760                              <1> 
 11761                              <1> %macro GTK_IS_FILE_CHOOSER_CLASS 1
 11762                              <1> 	invoke gtk_file_chooser_get_type
 11763                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11764                              <1> %endmacro
 11765                              <1> 
 11766                              <1> %macro GTK_FILE_CHOOSER_BUTTON 1
 11767                              <1> 	invoke gtk_file_chooser_button_get_type
 11768                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11769                              <1> %endmacro
 11770                              <1> 
 11771                              <1> %macro GTK_FILE_CHOOSER_BUTTON_CLASS 1
 11772                              <1> 	invoke gtk_file_chooser_button_get_type
 11773                              <1> 	invoke g_type_check_class_cast, %1, eax
 11774                              <1> %endmacro
 11775                              <1> 
 11776                              <1> %macro GTK_IS_FILE_CHOOSER_BUTTON 1
 11777                              <1> 	invoke gtk_file_chooser_button_get_type
 11778                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11779                              <1> %endmacro
 11780                              <1> 
 11781                              <1> %macro GTK_IS_FILE_CHOOSER_BUTTON_CLASS 1
 11782                              <1> 	invoke gtk_file_chooser_button_get_type
 11783                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11784                              <1> %endmacro
 11785                              <1> 
 11786                              <1> %macro GTK_FILE_CHOOSER_DIALOG 1
 11787                              <1> 	invoke gtk_file_chooser_dialog_get_type
 11788                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11789                              <1> %endmacro
 11790                              <1> 
 11791                              <1> %macro GTK_FILE_CHOOSER_DIALOG_CLASS 1
 11792                              <1> 	invoke gtk_file_chooser_dialog_get_type
 11793                              <1> 	invoke g_type_check_class_cast, %1, eax
 11794                              <1> %endmacro
 11795                              <1> 
 11796                              <1> %macro GTK_IS_FILE_CHOOSER_DIALOG 1
 11797                              <1> 	invoke gtk_file_chooser_dialog_get_type
 11798                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11799                              <1> %endmacro
 11800                              <1> 
 11801                              <1> %macro GTK_IS_FILE_CHOOSER_DIALOG_CLASS 1
 11802                              <1> 	invoke gtk_file_chooser_dialog_get_type
 11803                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11804                              <1> %endmacro
 11805                              <1> 
 11806                              <1> %macro GTK_FILE_CHOOSER_WIDGET 1
 11807                              <1> 	invoke gtk_file_chooser_widget_get_type
 11808                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11809                              <1> %endmacro
 11810                              <1> 
 11811                              <1> %macro GTK_FILE_CHOOSER_WIDGET_CLASS 1
 11812                              <1> 	invoke gtk_file_chooser_widget_get_type
 11813                              <1> 	invoke g_type_check_class_cast, %1, eax
 11814                              <1> %endmacro
 11815                              <1> 
 11816                              <1> %macro GTK_IS_FILE_CHOOSER_WIDGET 1
 11817                              <1> 	invoke gtk_file_chooser_widget_get_type
 11818                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11819                              <1> %endmacro
 11820                              <1> 
 11821                              <1> %macro GTK_IS_FILE_CHOOSER_WIDGET_CLASS 1
 11822                              <1> 
 11823                              <1> 	invoke gtk_file_chooser_widget_get_type
 11824                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11825                              <1> %endmacro
 11826                              <1> 
 11827                              <1> %macro GTK_FILE_FILTER 1
 11828                              <1> 	invoke gtk_file_filter_get_type
 11829                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11830                              <1> %endmacro
 11831                              <1> 
 11832                              <1> %macro GTK_FILE_FILTER_CLASS 1
 11833                              <1> 	invoke gtk_file_filter_get_type
 11834                              <1> 	invoke g_type_check_class_cast, %1, eax
 11835                              <1> %endmacro
 11836                              <1> 
 11837                              <1> %macro GTK_IS_FILE_FILTER 1
 11838                              <1> 	invoke gtk_file_filter_get_type
 11839                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11840                              <1> %endmacro
 11841                              <1> 
 11842                              <1> %macro GTK_IS_FILE_FILTER_CLASS 1
 11843                              <1> 	invoke gtk_file_filter_get_type
 11844                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11845                              <1> %endmacro
 11846                              <1> 
 11847                              <1> %macro GTK_FILE_SELECTION 1
 11848                              <1> 	invoke gtk_file_selection_get_type
 11849                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11850                              <1> %endmacro
 11851                              <1> 
 11852                              <1> %macro GTK_FILE_SELECTION_CLASS 1
 11853                              <1> 	invoke gtk_file_selection_get_type
 11854                              <1> 	invoke g_type_check_class_cast, %1, eax
 11855                              <1> %endmacro
 11856                              <1> 
 11857                              <1> %macro GTK_IS_FILE_SELECTION 1
 11858                              <1> 	invoke gtk_file_selection_get_type
 11859                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11860                              <1> %endmacro
 11861                              <1> 
 11862                              <1> %macro GTK_IS_FILE_SELECTION_CLASS 1
 11863                              <1> 	invoke gtk_file_selection_get_type
 11864                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11865                              <1> %endmacro
 11866                              <1> 
 11867                              <1> %macro GTK_FIXED 1
 11868                              <1> 	invoke gtk_fixed_get_type
 11869                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11870                              <1> %endmacro
 11871                              <1> 
 11872                              <1> %macro GTK_FIXED_CLASS 1
 11873                              <1> 	invoke gtk_fixed_get_type
 11874                              <1> 	invoke g_type_check_class_cast, %1, eax
 11875                              <1> %endmacro
 11876                              <1> 
 11877                              <1> %macro GTK_IS_FIXED 1
 11878                              <1> 	invoke gtk_fixed_get_type
 11879                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11880                              <1> %endmacro
 11881                              <1> 
 11882                              <1> %macro GTK_IS_FIXED_CLASS 1
 11883                              <1> 	invoke gtk_fixed_get_type
 11884                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11885                              <1> %endmacro
 11886                              <1> 
 11887                              <1> %macro GTK_FONT_BUTTON 1
 11888                              <1> 	invoke gtk_font_button_get_type
 11889                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11890                              <1> %endmacro
 11891                              <1> 
 11892                              <1> %macro GTK_FONT_BUTTON_CLASS 1
 11893                              <1> 	invoke gtk_font_button_get_type
 11894                              <1> 	invoke g_type_check_class_cast, %1, eax
 11895                              <1> %endmacro
 11896                              <1> 
 11897                              <1> %macro GTK_IS_FONT_BUTTON 1
 11898                              <1> 	invoke gtk_font_button_get_type
 11899                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11900                              <1> %endmacro
 11901                              <1> 
 11902                              <1> %macro GTK_IS_FONT_BUTTON_CLASS 1
 11903                              <1> 	invoke gtk_font_button_get_type
 11904                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11905                              <1> %endmacro
 11906                              <1> 
 11907                              <1> %macro GTK_FONT_SELECTION 1
 11908                              <1> 	invoke gtk_font_selection_get_type
 11909                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11910                              <1> %endmacro
 11911                              <1> 
 11912                              <1> %macro GTK_FONT_SELECTION_CLASS 1
 11913                              <1> 	invoke gtk_font_selection_get_type
 11914                              <1> 	invoke g_type_check_class_cast, %1, eax
 11915                              <1> %endmacro
 11916                              <1> 
 11917                              <1> %macro GTK_IS_FONT_SELECTION 1
 11918                              <1> 	invoke gtk_font_selection_get_type
 11919                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11920                              <1> %endmacro
 11921                              <1> 
 11922                              <1> %macro GTK_IS_FONT_SELECTION_CLASS 1
 11923                              <1> 	invoke gtk_font_selection_get_type
 11924                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11925                              <1> %endmacro
 11926                              <1> 
 11927                              <1> %macro GTK_FONT_SELECTION_DIALOG 1
 11928                              <1> 	invoke gtk_font_selection_dialog_get_type
 11929                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11930                              <1> %endmacro
 11931                              <1> 
 11932                              <1> %macro GTK_FONT_SELECTION_DIALOG_CLASS 1
 11933                              <1> 	invoke gtk_font_selection_dialog_get_type
 11934                              <1> 	invoke g_type_check_class_cast, %1, eax
 11935                              <1> %endmacro
 11936                              <1> 
 11937                              <1> %macro GTK_IS_FONT_SELECTION_DIALOG 1
 11938                              <1> 	invoke gtk_font_selection_dialog_get_type
 11939                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11940                              <1> %endmacro
 11941                              <1> 
 11942                              <1> %macro GTK_IS_FONT_SELECTION_DIALOG_CLASS 1
 11943                              <1> 	invoke gtk_font_selection_dialog_get_type
 11944                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11945                              <1> %endmacro
 11946                              <1> 
 11947                              <1> %macro GTK_FRAME 1
 11948                              <1> 	invoke gtk_frame_get_type
 11949                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11950                              <1> %endmacro
 11951                              <1> 
 11952                              <1> %macro GTK_FRAME_CLASS 1
 11953                              <1> 	invoke gtk_frame_get_type
 11954                              <1> 	invoke g_type_check_class_cast, %1, eax
 11955                              <1> %endmacro
 11956                              <1> 
 11957                              <1> %macro GTK_IS_FRAME 1
 11958                              <1> 	invoke gtk_frame_get_type
 11959                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11960                              <1> %endmacro
 11961                              <1> 
 11962                              <1> %macro GTK_IS_FRAME_CLASS 1
 11963                              <1> 	invoke gtk_frame_get_type
 11964                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11965                              <1> %endmacro
 11966                              <1> 
 11967                              <1> %macro GTK_GAMMA_CURVE 1
 11968                              <1> 	invoke gtk_gamma_curve_get_type
 11969                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11970                              <1> %endmacro
 11971                              <1> 
 11972                              <1> %macro GTK_GAMMA_CURVE_CLASS 1
 11973                              <1> 	invoke gtk_gamma_curve_get_type
 11974                              <1> 	invoke g_type_check_class_cast, %1, eax
 11975                              <1> %endmacro
 11976                              <1> 
 11977                              <1> %macro GTK_IS_GAMMA_CURVE 1
 11978                              <1> 	invoke gtk_gamma_curve_get_type
 11979                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 11980                              <1> %endmacro
 11981                              <1> 
 11982                              <1> %macro GTK_IS_GAMMA_CURVE_CLASS 1
 11983                              <1> 	invoke gtk_gamma_curve_get_type
 11984                              <1> 	invoke g_type_check_class_is_a , %1, eax
 11985                              <1> %endmacro
 11986                              <1> 
 11987                              <1> %macro GTK_HANDLE_BOX 1
 11988                              <1> 	invoke gtk_handle_box_get_type
 11989                              <1> 	invoke g_type_check_instance_cast, %1, eax
 11990                              <1> %endmacro
 11991                              <1> 
 11992                              <1> %macro GTK_HANDLE_BOX_CLASS 1
 11993                              <1> 	invoke gtk_handle_box_get_type
 11994                              <1> 	invoke g_type_check_class_cast, %1, eax
 11995                              <1> %endmacro
 11996                              <1> 
 11997                              <1> %macro GTK_IS_HANDLE_BOX 1
 11998                              <1> 	invoke gtk_handle_box_get_type
 11999                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12000                              <1> %endmacro
 12001                              <1> 
 12002                              <1> %macro GTK_IS_HANDLE_BOX_CLASS 1
 12003                              <1> 	invoke gtk_handle_box_get_type
 12004                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12005                              <1> %endmacro
 12006                              <1> 
 12007                              <1> %macro GTK_HBUTTON_BOX 1
 12008                              <1> 	invoke gtk_hbutton_box_get_type
 12009                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12010                              <1> %endmacro
 12011                              <1> 
 12012                              <1> %macro GTK_HBUTTON_BOX_CLASS 1
 12013                              <1> 	invoke gtk_hbutton_box_get_type
 12014                              <1> 	invoke g_type_check_class_cast, %1, eax
 12015                              <1> %endmacro
 12016                              <1> 
 12017                              <1> %macro GTK_IS_HBUTTON_BOX 1
 12018                              <1> 	invoke gtk_hbutton_box_get_type
 12019                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12020                              <1> %endmacro
 12021                              <1> 
 12022                              <1> %macro GTK_IS_HBUTTON_BOX_CLASS 1
 12023                              <1> 	invoke gtk_hbutton_box_get_type
 12024                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12025                              <1> %endmacro
 12026                              <1> 
 12027                              <1> %macro GTK_HBOX 1
 12028                              <1> 	invoke gtk_hbox_get_type
 12029                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12030                              <1> %endmacro
 12031                              <1> 
 12032                              <1> %macro GTK_HBOX_CLASS 1
 12033                              <1> 	invoke gtk_hbox_get_type
 12034                              <1> 	invoke g_type_check_class_cast, %1, eax
 12035                              <1> %endmacro
 12036                              <1> 
 12037                              <1> %macro GTK_IS_HBOX 1
 12038                              <1> 	invoke gtk_hbox_get_type
 12039                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12040                              <1> %endmacro
 12041                              <1> 
 12042                              <1> %macro GTK_IS_HBOX_CLASS 1
 12043                              <1> 	invoke gtk_hbox_get_type
 12044                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12045                              <1> %endmacro
 12046                              <1> 
 12047                              <1> %macro GTK_HPANED 1
 12048                              <1> 	invoke gtk_hpaned_get_type
 12049                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12050                              <1> %endmacro
 12051                              <1> 
 12052                              <1> %macro GTK_HPANED_CLASS 1
 12053                              <1> 	invoke gtk_hpaned_get_type
 12054                              <1> 	invoke g_type_check_class_cast, %1, eax
 12055                              <1> %endmacro
 12056                              <1> 
 12057                              <1> %macro GTK_IS_HPANED 1
 12058                              <1> 	invoke gtk_hpaned_get_type
 12059                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12060                              <1> %endmacro
 12061                              <1> 
 12062                              <1> %macro GTK_IS_HPANED_CLASS 1
 12063                              <1> 	invoke gtk_hpaned_get_type
 12064                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12065                              <1> %endmacro
 12066                              <1> 
 12067                              <1> %macro GTK_HRULER 1
 12068                              <1> 	invoke gtk_hruler_get_type
 12069                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12070                              <1> %endmacro
 12071                              <1> 
 12072                              <1> %macro GTK_HRULER_CLASS 1
 12073                              <1> 	invoke gtk_hruler_get_type
 12074                              <1> 	invoke g_type_check_class_cast, %1, eax
 12075                              <1> %endmacro
 12076                              <1> 
 12077                              <1> %macro GTK_IS_HRULER 1
 12078                              <1> 	invoke gtk_hruler_get_type
 12079                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12080                              <1> %endmacro
 12081                              <1> 
 12082                              <1> %macro GTK_IS_HRULER_CLASS 1
 12083                              <1> 	invoke gtk_hruler_get_type
 12084                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12085                              <1> %endmacro
 12086                              <1> 
 12087                              <1> %macro GTK_HSCALE 1
 12088                              <1> 	invoke gtk_hscale_get_type
 12089                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12090                              <1> %endmacro
 12091                              <1> 
 12092                              <1> %macro GTK_HSCALE_CLASS 1
 12093                              <1> 	invoke gtk_hscale_get_type
 12094                              <1> 	invoke g_type_check_class_cast, %1, eax
 12095                              <1> %endmacro
 12096                              <1> 
 12097                              <1> %macro GTK_IS_HSCALE 1
 12098                              <1> 	invoke gtk_hscale_get_type
 12099                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12100                              <1> %endmacro
 12101                              <1> 
 12102                              <1> %macro GTK_IS_HSCALE_CLASS 1
 12103                              <1> 	invoke gtk_hscale_get_type
 12104                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12105                              <1> %endmacro
 12106                              <1> 
 12107                              <1> %macro GTK_HSCROLLBAR 1
 12108                              <1> 	invoke gtk_hscrollbar_get_type
 12109                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12110                              <1> %endmacro
 12111                              <1> 
 12112                              <1> %macro GTK_HSCROLLBAR_CLASS 1
 12113                              <1> 	invoke gtk_hscrollbar_get_type
 12114                              <1> 	invoke g_type_check_class_cast, %1, eax
 12115                              <1> %endmacro
 12116                              <1> 
 12117                              <1> %macro GTK_IS_HSCROLLBAR 1
 12118                              <1> 	invoke gtk_hscrollbar_get_type
 12119                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12120                              <1> %endmacro
 12121                              <1> 
 12122                              <1> %macro GTK_IS_HSCROLLBAR_CLASS 1
 12123                              <1> 	invoke gtk_hscrollbar_get_type
 12124                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12125                              <1> %endmacro
 12126                              <1> 
 12127                              <1> %macro GTK_HSEPARATOR 1
 12128                              <1> 	invoke gtk_hseparator_get_type
 12129                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12130                              <1> %endmacro
 12131                              <1> 
 12132                              <1> %macro GTK_HSEPARATOR_CLASS 1
 12133                              <1> 	invoke gtk_hseparator_get_type
 12134                              <1> 	invoke g_type_check_class_cast, %1, eax
 12135                              <1> %endmacro
 12136                              <1> 
 12137                              <1> %macro GTK_IS_HSEPARATOR 1
 12138                              <1> 	invoke gtk_hseparator_get_type
 12139                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12140                              <1> %endmacro
 12141                              <1> 
 12142                              <1> %macro GTK_IS_HSEPARATOR_CLASS 1
 12143                              <1> 	invoke gtk_hseparator_get_type
 12144                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12145                              <1> %endmacro
 12146                              <1> 
 12147                              <1> %macro GTK_HSV 1
 12148                              <1> 	invoke gtk_hsv_get_type
 12149                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12150                              <1> %endmacro
 12151                              <1> 
 12152                              <1> %macro GTK_HSV_CLASS 1
 12153                              <1> 	invoke gtk_hsv_get_type
 12154                              <1> 	invoke g_type_check_class_cast, %1, eax
 12155                              <1> %endmacro
 12156                              <1> 
 12157                              <1> %macro GTK_IS_HSV 1
 12158                              <1> 	invoke gtk_hsv_get_type
 12159                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12160                              <1> %endmacro
 12161                              <1> 
 12162                              <1> %macro GTK_IS_HSV_CLASS 1
 12163                              <1> 	invoke gtk_hsv_get_type
 12164                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12165                              <1> %endmacro
 12166                              <1> 
 12167                              <1> %macro GTK_ICON_THEME 1
 12168                              <1> 	invoke gtk_icon_theme_get_type
 12169                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12170                              <1> %endmacro
 12171                              <1> 
 12172                              <1> %macro GTK_ICON_THEME_CLASS 1
 12173                              <1> 	invoke gtk_icon_theme_get_type
 12174                              <1> 	invoke g_type_check_class_cast, %1, eax
 12175                              <1> %endmacro
 12176                              <1> 
 12177                              <1> %macro GTK_IS_ICON_THEME 1
 12178                              <1> 	invoke gtk_icon_theme_get_type
 12179                              <1> 
 12180                              <1> 
 12181                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12182                              <1> %endmacro
 12183                              <1> 
 12184                              <1> %macro GTK_IS_ICON_THEME_CLASS 1
 12185                              <1> 	invoke gtk_icon_theme_get_type
 12186                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12187                              <1> %endmacro
 12188                              <1> 
 12189                              <1> %macro GTK_ICON_VIEW 1
 12190                              <1> 	invoke gtk_icon_view_get_type
 12191                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12192                              <1> %endmacro
 12193                              <1> 
 12194                              <1> %macro GTK_ICON_VIEW_CLASS 1
 12195                              <1> 	invoke gtk_icon_view_get_type
 12196                              <1> 	invoke g_type_check_class_cast, %1, eax
 12197                              <1> %endmacro
 12198                              <1> 
 12199                              <1> %macro GTK_IS_ICON_VIEW 1
 12200                              <1> 	invoke gtk_icon_view_get_type
 12201                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12202                              <1> %endmacro
 12203                              <1> 
 12204                              <1> %macro GTK_IS_ICON_VIEW_CLASS 1
 12205                              <1> 	invoke gtk_icon_view_get_type
 12206                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12207                              <1> %endmacro
 12208                              <1> 
 12209                              <1> %macro GTK_IMAGE 1
 12210                              <1> 	invoke gtk_image_get_type
 12211                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12212                              <1> %endmacro
 12213                              <1> 
 12214                              <1> %macro GTK_IMAGE_CLASS 1
 12215                              <1> 	invoke gtk_image_get_type
 12216                              <1> 	invoke g_type_check_class_cast, %1, eax
 12217                              <1> %endmacro
 12218                              <1> 
 12219                              <1> %macro GTK_IS_IMAGE 1
 12220                              <1> 	invoke gtk_image_get_type
 12221                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12222                              <1> %endmacro
 12223                              <1> 
 12224                              <1> %macro GTK_IS_IMAGE_CLASS 1
 12225                              <1> 	invoke gtk_image_get_type
 12226                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12227                              <1> %endmacro
 12228                              <1> 
 12229                              <1> %macro GTK_IMAGE_MENU_ITEM 1
 12230                              <1> 	invoke gtk_image_menu_item_get_type
 12231                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12232                              <1> %endmacro
 12233                              <1> 
 12234                              <1> %macro GTK_IMAGE_MENU_ITEM_CLASS 1
 12235                              <1> 	invoke gtk_image_menu_item_get_type
 12236                              <1> 	invoke g_type_check_class_cast, %1, eax
 12237                              <1> %endmacro
 12238                              <1> 
 12239                              <1> %macro GTK_IS_IMAGE_MENU_ITEM 1
 12240                              <1> 	invoke gtk_image_menu_item_get_type
 12241                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12242                              <1> %endmacro
 12243                              <1> 
 12244                              <1> %macro GTK_IS_IMAGE_MENU_ITEM_CLASS 1
 12245                              <1> 	invoke gtk_image_menu_item_get_type
 12246                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12247                              <1> %endmacro
 12248                              <1> 
 12249                              <1> %macro GTK_IM_CONTEXT 1
 12250                              <1> 	invoke gtk_im_context_get_type
 12251                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12252                              <1> %endmacro
 12253                              <1> 
 12254                              <1> %macro GTK_IM_CONTEXT_CLASS 1
 12255                              <1> 	invoke gtk_im_context_get_type
 12256                              <1> 	invoke g_type_check_class_cast, %1, eax
 12257                              <1> %endmacro
 12258                              <1> 
 12259                              <1> %macro GTK_IS_IM_CONTEXT 1
 12260                              <1> 	invoke gtk_im_context_get_type
 12261                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12262                              <1> %endmacro
 12263                              <1> 
 12264                              <1> %macro GTK_IS_IM_CONTEXT_CLASS 1
 12265                              <1> 	invoke gtk_im_context_get_type
 12266                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12267                              <1> %endmacro
 12268                              <1> 
 12269                              <1> %macro GTK_IM_CONTEXT_SIMPLE 1
 12270                              <1> 	invoke gtk_im_context_simple_get_type
 12271                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12272                              <1> %endmacro
 12273                              <1> 
 12274                              <1> %macro GTK_IM_CONTEXT_SIMPLE_CLASS 1
 12275                              <1> 	invoke gtk_im_context_simple_get_type
 12276                              <1> 	invoke g_type_check_class_cast, %1, eax
 12277                              <1> %endmacro
 12278                              <1> 
 12279                              <1> %macro GTK_IS_IM_CONTEXT_SIMPLE 1
 12280                              <1> 	invoke gtk_im_context_simple_get_type
 12281                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12282                              <1> %endmacro
 12283                              <1> 
 12284                              <1> %macro GTK_IS_IM_CONTEXT_SIMPLE_CLASS 1
 12285                              <1> 	invoke gtk_im_context_simple_get_type
 12286                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12287                              <1> %endmacro
 12288                              <1> 
 12289                              <1> %macro GTK_IM_MULTICONTEXT 1
 12290                              <1> 	invoke gtk_im_multicontext_get_type
 12291                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12292                              <1> %endmacro
 12293                              <1> 
 12294                              <1> %macro GTK_IM_MULTICONTEXT_CLASS 1
 12295                              <1> 	invoke gtk_im_multicontext_get_type
 12296                              <1> 	invoke g_type_check_class_cast, %1, eax
 12297                              <1> %endmacro
 12298                              <1> 
 12299                              <1> %macro GTK_IS_IM_MULTICONTEXT 1
 12300                              <1> 	invoke gtk_im_multicontext_get_type
 12301                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12302                              <1> %endmacro
 12303                              <1> 
 12304                              <1> %macro GTK_IS_IM_MULTICONTEXT_CLASS 1
 12305                              <1> 	invoke gtk_im_multicontext_get_type
 12306                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12307                              <1> %endmacro
 12308                              <1> 
 12309                              <1> %macro GTK_INFO_BAR 1
 12310                              <1> 	invoke gtk_info_bar_get_type
 12311                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12312                              <1> %endmacro
 12313                              <1> 
 12314                              <1> %macro GTK_INFO_BAR_CLASS 1
 12315                              <1> 	invoke gtk_info_bar_get_type
 12316                              <1> 	invoke g_type_check_class_cast, %1, eax
 12317                              <1> %endmacro
 12318                              <1> 
 12319                              <1> %macro GTK_IS_INFO_BAR 1
 12320                              <1> 	invoke gtk_info_bar_get_type
 12321                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12322                              <1> %endmacro
 12323                              <1> 
 12324                              <1> %macro GTK_IS_INFO_BAR_CLASS 1
 12325                              <1> 	invoke gtk_info_bar_get_type
 12326                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12327                              <1> %endmacro
 12328                              <1> 
 12329                              <1> %macro GTK_INPUT_DIALOG 1
 12330                              <1> 	invoke gtk_input_dialog_get_type
 12331                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12332                              <1> %endmacro
 12333                              <1> 
 12334                              <1> %macro GTK_INPUT_DIALOG_CLASS 1
 12335                              <1> 	invoke gtk_input_dialog_get_type
 12336                              <1> 	invoke g_type_check_class_cast, %1, eax
 12337                              <1> %endmacro
 12338                              <1> 
 12339                              <1> %macro GTK_IS_INPUT_DIALOG 1
 12340                              <1> 	invoke gtk_input_dialog_get_type
 12341                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12342                              <1> %endmacro
 12343                              <1> 
 12344                              <1> %macro GTK_IS_INPUT_DIALOG_CLASS 1
 12345                              <1> 	invoke gtk_input_dialog_get_type
 12346                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12347                              <1> %endmacro
 12348                              <1> 
 12349                              <1> %macro GTK_INVISIBLE 1
 12350                              <1> 	invoke gtk_invisible_get_type
 12351                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12352                              <1> %endmacro
 12353                              <1> 
 12354                              <1> %macro GTK_INVISIBLE_CLASS 1
 12355                              <1> 	invoke gtk_invisible_get_type
 12356                              <1> 	invoke g_type_check_class_cast, %1, eax
 12357                              <1> %endmacro
 12358                              <1> 
 12359                              <1> %macro GTK_IS_INVISIBLE 1
 12360                              <1> 	invoke gtk_invisible_get_type
 12361                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12362                              <1> %endmacro
 12363                              <1> 
 12364                              <1> %macro GTK_IS_INVISIBLE_CLASS 1
 12365                              <1> 	invoke gtk_invisible_get_type
 12366                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12367                              <1> %endmacro
 12368                              <1> 
 12369                              <1> %macro GTK_ITEM 1
 12370                              <1> 	invoke gtk_item_get_type
 12371                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12372                              <1> %endmacro
 12373                              <1> 
 12374                              <1> %macro GTK_ITEM_CLASS 1
 12375                              <1> 	invoke gtk_item_get_type
 12376                              <1> 	invoke g_type_check_class_cast, %1, eax
 12377                              <1> %endmacro
 12378                              <1> 
 12379                              <1> %macro GTK_IS_ITEM 1
 12380                              <1> 	invoke gtk_item_get_type
 12381                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12382                              <1> %endmacro
 12383                              <1> 
 12384                              <1> %macro GTK_IS_ITEM_CLASS 1
 12385                              <1> 	invoke gtk_item_get_type
 12386                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12387                              <1> %endmacro
 12388                              <1> 
 12389                              <1> %macro GTK_LABEL 1
 12390                              <1> 	invoke gtk_label_get_type
 12391                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12392                              <1> %endmacro
 12393                              <1> 
 12394                              <1> %macro GTK_LABEL_CLASS 1
 12395                              <1> 	invoke gtk_label_get_type
 12396                              <1> 	invoke g_type_check_class_cast, %1, eax
 12397                              <1> %endmacro
 12398                              <1> 
 12399                              <1> %macro GTK_IS_LABEL 1
 12400                              <1> 	invoke gtk_label_get_type
 12401                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12402                              <1> %endmacro
 12403                              <1> 
 12404                              <1> %macro GTK_IS_LABEL_CLASS 1
 12405                              <1> 	invoke gtk_label_get_type
 12406                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12407                              <1> %endmacro
 12408                              <1> 
 12409                              <1> %macro GTK_LAYOUT 1
 12410                              <1> 	invoke gtk_layout_get_type
 12411                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12412                              <1> %endmacro
 12413                              <1> 
 12414                              <1> %macro GTK_LAYOUT_CLASS 1
 12415                              <1> 	invoke gtk_layout_get_type
 12416                              <1> 	invoke g_type_check_class_cast, %1, eax
 12417                              <1> %endmacro
 12418                              <1> 
 12419                              <1> %macro GTK_IS_LAYOUT 1
 12420                              <1> 	invoke gtk_layout_get_type
 12421                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12422                              <1> %endmacro
 12423                              <1> 
 12424                              <1> %macro GTK_IS_LAYOUT_CLASS 1
 12425                              <1> 	invoke gtk_layout_get_type
 12426                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12427                              <1> %endmacro
 12428                              <1> 
 12429                              <1> %macro GTK_LINK_BUTTON 1
 12430                              <1> 	invoke gtk_link_button_get_type
 12431                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12432                              <1> %endmacro
 12433                              <1> 
 12434                              <1> %macro GTK_LINK_BUTTON_CLASS 1
 12435                              <1> 	invoke gtk_link_button_get_type
 12436                              <1> 	invoke g_type_check_class_cast, %1, eax
 12437                              <1> %endmacro
 12438                              <1> 
 12439                              <1> %macro GTK_IS_LINK_BUTTON 1
 12440                              <1> 	invoke gtk_link_button_get_type
 12441                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12442                              <1> %endmacro
 12443                              <1> 
 12444                              <1> %macro GTK_IS_LINK_BUTTON_CLASS 1
 12445                              <1> 	invoke gtk_link_button_get_type
 12446                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12447                              <1> %endmacro
 12448                              <1> 
 12449                              <1> %macro GTK_LIST 1
 12450                              <1> 	invoke gtk_list_get_type
 12451                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12452                              <1> %endmacro
 12453                              <1> 
 12454                              <1> %macro GTK_LIST_CLASS 1
 12455                              <1> 	invoke gtk_list_get_type
 12456                              <1> 	invoke g_type_check_class_cast, %1, eax
 12457                              <1> %endmacro
 12458                              <1> 
 12459                              <1> %macro GTK_IS_LIST 1
 12460                              <1> 	invoke gtk_list_get_type
 12461                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12462                              <1> %endmacro
 12463                              <1> 
 12464                              <1> %macro GTK_IS_LIST_CLASS 1
 12465                              <1> 	invoke gtk_list_get_type
 12466                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12467                              <1> %endmacro
 12468                              <1> 
 12469                              <1> %macro GTK_LIST_ITEM 1
 12470                              <1> 	invoke gtk_list_item_get_type
 12471                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12472                              <1> %endmacro
 12473                              <1> 
 12474                              <1> %macro GTK_LIST_ITEM_CLASS 1
 12475                              <1> 	invoke gtk_list_item_get_type
 12476                              <1> 	invoke g_type_check_class_cast, %1, eax
 12477                              <1> %endmacro
 12478                              <1> 
 12479                              <1> %macro GTK_IS_LIST_ITEM 1
 12480                              <1> 	invoke gtk_list_item_get_type
 12481                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12482                              <1> %endmacro
 12483                              <1> 
 12484                              <1> %macro GTK_IS_LIST_ITEM_CLASS 1
 12485                              <1> 	invoke gtk_list_item_get_type
 12486                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12487                              <1> %endmacro
 12488                              <1> 
 12489                              <1> %macro GTK_LIST_STORE 1
 12490                              <1> 	invoke gtk_list_store_get_type
 12491                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12492                              <1> %endmacro
 12493                              <1> 
 12494                              <1> %macro GTK_LIST_STORE_CLASS 1
 12495                              <1> 	invoke gtk_list_store_get_type
 12496                              <1> 	invoke g_type_check_class_cast, %1, eax
 12497                              <1> %endmacro
 12498                              <1> 
 12499                              <1> %macro GTK_IS_LIST_STORE 1
 12500                              <1> 	invoke gtk_list_store_get_type
 12501                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12502                              <1> %endmacro
 12503                              <1> 
 12504                              <1> %macro GTK_IS_LIST_STORE_CLASS 1
 12505                              <1> 	invoke gtk_list_store_get_type
 12506                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12507                              <1> %endmacro
 12508                              <1> 
 12509                              <1> %macro GTK_MENU 1
 12510                              <1> 	invoke gtk_menu_get_type
 12511                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12512                              <1> %endmacro
 12513                              <1> 
 12514                              <1> %macro GTK_MENU_CLASS 1
 12515                              <1> 	invoke gtk_menu_get_type
 12516                              <1> 	invoke g_type_check_class_cast, %1, eax
 12517                              <1> %endmacro
 12518                              <1> 
 12519                              <1> %macro GTK_IS_MENU 1
 12520                              <1> 	invoke gtk_menu_get_type
 12521                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12522                              <1> %endmacro
 12523                              <1> 
 12524                              <1> %macro GTK_IS_MENU_CLASS 1
 12525                              <1> 	invoke gtk_menu_get_type
 12526                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12527                              <1> %endmacro
 12528                              <1> 
 12529                              <1> %macro GTK_MENU_BAR 1
 12530                              <1> 	invoke gtk_menu_bar_get_type
 12531                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12532                              <1> %endmacro
 12533                              <1> 
 12534                              <1> %macro GTK_MENU_BAR_CLASS 1
 12535                              <1> 	invoke gtk_menu_bar_get_type
 12536                              <1> 	invoke g_type_check_class_cast, %1, eax
 12537                              <1> %endmacro
 12538                              <1> 
 12539                              <1> %macro GTK_IS_MENU_BAR 1
 12540                              <1> 	invoke gtk_menu_bar_get_type
 12541                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12542                              <1> %endmacro
 12543                              <1> 
 12544                              <1> %macro GTK_IS_MENU_BAR_CLASS 1
 12545                              <1> 	invoke gtk_menu_bar_get_type
 12546                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12547                              <1> %endmacro
 12548                              <1> 
 12549                              <1> %macro GTK_MENU_ITEM 1
 12550                              <1> 	invoke gtk_menu_item_get_type
 12551                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12552                              <1> %endmacro
 12553                              <1> 
 12554                              <1> %macro GTK_MENU_ITEM_CLASS 1
 12555                              <1> 	invoke gtk_menu_item_get_type
 12556                              <1> 	invoke g_type_check_class_cast, %1, eax
 12557                              <1> %endmacro
 12558                              <1> 
 12559                              <1> %macro GTK_IS_MENU_ITEM 1
 12560                              <1> 	invoke gtk_menu_item_get_type
 12561                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12562                              <1> %endmacro
 12563                              <1> 
 12564                              <1> %macro GTK_IS_MENU_ITEM_CLASS 1
 12565                              <1> 	invoke gtk_menu_item_get_type
 12566                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12567                              <1> %endmacro
 12568                              <1> 
 12569                              <1> %macro GTK_MENU_SHELL 1
 12570                              <1> 	invoke gtk_menu_shell_get_type
 12571                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12572                              <1> %endmacro
 12573                              <1> 
 12574                              <1> %macro GTK_MENU_SHELL_CLASS 1
 12575                              <1> 	invoke gtk_menu_shell_get_type
 12576                              <1> 	invoke g_type_check_class_cast, %1, eax
 12577                              <1> %endmacro
 12578                              <1> 
 12579                              <1> %macro GTK_IS_MENU_SHELL 1
 12580                              <1> 	invoke gtk_menu_shell_get_type
 12581                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12582                              <1> %endmacro
 12583                              <1> 
 12584                              <1> %macro GTK_IS_MENU_SHELL_CLASS 1
 12585                              <1> 	invoke gtk_menu_shell_get_type
 12586                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12587                              <1> %endmacro
 12588                              <1> 
 12589                              <1> %macro GTK_MESSAGE_DIALOG 1
 12590                              <1> 	invoke gtk_message_dialog_get_type
 12591                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12592                              <1> %endmacro
 12593                              <1> 
 12594                              <1> %macro GTK_MESSAGE_DIALOG_CLASS 1
 12595                              <1> 	invoke gtk_message_dialog_get_type
 12596                              <1> 	invoke g_type_check_class_cast, %1, eax
 12597                              <1> %endmacro
 12598                              <1> 
 12599                              <1> %macro GTK_IS_MESSAGE_DIALOG 1
 12600                              <1> 	invoke gtk_message_dialog_get_type
 12601                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12602                              <1> %endmacro
 12603                              <1> 
 12604                              <1> %macro GTK_IS_MESSAGE_DIALOG_CLASS 1
 12605                              <1> 	invoke gtk_message_dialog_get_type
 12606                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12607                              <1> %endmacro
 12608                              <1> 
 12609                              <1> %macro GTK_MISC 1
 12610                              <1> 	invoke gtk_misc_get_type
 12611                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12612                              <1> %endmacro
 12613                              <1> 
 12614                              <1> %macro GTK_MISC_CLASS 1
 12615                              <1> 	invoke gtk_misc_get_type
 12616                              <1> 	invoke g_type_check_class_cast, %1, eax
 12617                              <1> %endmacro
 12618                              <1> 
 12619                              <1> %macro GTK_IS_MISC 1
 12620                              <1> 	invoke gtk_misc_get_type
 12621                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12622                              <1> %endmacro
 12623                              <1> 
 12624                              <1> %macro GTK_IS_MISC_CLASS 1
 12625                              <1> 	invoke gtk_misc_get_type
 12626                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12627                              <1> %endmacro
 12628                              <1> 
 12629                              <1> %macro GTK_NOTEBOOK 1
 12630                              <1> 	invoke gtk_notebook_get_type
 12631                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12632                              <1> %endmacro
 12633                              <1> 
 12634                              <1> %macro GTK_NOTEBOOK_CLASS 1
 12635                              <1> 	invoke gtk_notebook_get_type
 12636                              <1> 	invoke g_type_check_class_cast, %1, eax
 12637                              <1> %endmacro
 12638                              <1> 
 12639                              <1> %macro GTK_IS_NOTEBOOK 1
 12640                              <1> 	invoke gtk_notebook_get_type
 12641                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12642                              <1> %endmacro
 12643                              <1> 
 12644                              <1> %macro GTK_IS_NOTEBOOK_CLASS 1
 12645                              <1> 	invoke gtk_notebook_get_type
 12646                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12647                              <1> %endmacro
 12648                              <1> 
 12649                              <1> %macro GTK_OLD_EDITABLE 1
 12650                              <1> 	invoke gtk_old_editable_get_type
 12651                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12652                              <1> %endmacro
 12653                              <1> 
 12654                              <1> %macro GTK_OLD_EDITABLE_CLASS 1
 12655                              <1> 	invoke gtk_old_editable_get_type
 12656                              <1> 	invoke g_type_check_class_cast, %1, eax
 12657                              <1> %endmacro
 12658                              <1> 
 12659                              <1> %macro GTK_IS_OLD_EDITABLE 1
 12660                              <1> 	invoke gtk_old_editable_get_type
 12661                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12662                              <1> %endmacro
 12663                              <1> 
 12664                              <1> %macro GTK_IS_OLD_EDITABLE_CLASS 1
 12665                              <1> 	invoke gtk_old_editable_get_type
 12666                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12667                              <1> %endmacro
 12668                              <1> 
 12669                              <1> %macro GTK_OPTION_MENU 1
 12670                              <1> 	invoke gtk_option_menu_get_type
 12671                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12672                              <1> %endmacro
 12673                              <1> 
 12674                              <1> %macro GTK_OPTION_MENU_CLASS 1
 12675                              <1> 	invoke gtk_option_menu_get_type
 12676                              <1> 	invoke g_type_check_class_cast, %1, eax
 12677                              <1> %endmacro
 12678                              <1> 
 12679                              <1> %macro GTK_IS_OPTION_MENU 1
 12680                              <1> 	invoke gtk_option_menu_get_type
 12681                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12682                              <1> %endmacro
 12683                              <1> 
 12684                              <1> %macro GTK_IS_OPTION_MENU_CLASS 1
 12685                              <1> 	invoke gtk_option_menu_get_type
 12686                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12687                              <1> %endmacro
 12688                              <1> 
 12689                              <1> %macro GTK_ORIENTABLE 1
 12690                              <1> 	invoke gtk_orientable_get_type
 12691                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12692                              <1> %endmacro
 12693                              <1> 
 12694                              <1> %macro GTK_ORIENTABLE_CLASS 1
 12695                              <1> 	invoke gtk_orientable_get_type
 12696                              <1> 	invoke g_type_check_class_cast, %1, eax
 12697                              <1> %endmacro
 12698                              <1> 
 12699                              <1> %macro GTK_IS_ORIENTABLE 1
 12700                              <1> 	invoke gtk_orientable_get_type
 12701                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12702                              <1> %endmacro
 12703                              <1> 
 12704                              <1> %macro GTK_IS_ORIENTABLE_CLASS 1
 12705                              <1> 	invoke gtk_orientable_get_type
 12706                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12707                              <1> %endmacro
 12708                              <1> 
 12709                              <1> %macro GTK_PAGE_SETUP 1
 12710                              <1> 	invoke gtk_page_setup_get_type
 12711                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12712                              <1> %endmacro
 12713                              <1> 
 12714                              <1> %macro GTK_PAGE_SETUP_CLASS 1
 12715                              <1> 	invoke gtk_page_setup_get_type
 12716                              <1> 	invoke g_type_check_class_cast, %1, eax
 12717                              <1> %endmacro
 12718                              <1> 
 12719                              <1> %macro GTK_IS_PAGE_SETUP 1
 12720                              <1> 	invoke gtk_page_setup_get_type
 12721                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12722                              <1> %endmacro
 12723                              <1> 
 12724                              <1> %macro GTK_IS_PAGE_SETUP_CLASS 1
 12725                              <1> 	invoke gtk_page_setup_get_type
 12726                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12727                              <1> %endmacro
 12728                              <1> 
 12729                              <1> %macro GTK_PANED 1
 12730                              <1> 	invoke gtk_paned_get_type
 12731                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12732                              <1> %endmacro
 12733                              <1> 
 12734                              <1> %macro GTK_PANED_CLASS 1
 12735                              <1> 	invoke gtk_paned_get_type
 12736                              <1> 	invoke g_type_check_class_cast, %1, eax
 12737                              <1> %endmacro
 12738                              <1> 
 12739                              <1> %macro GTK_IS_PANED 1
 12740                              <1> 	invoke gtk_paned_get_type
 12741                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12742                              <1> %endmacro
 12743                              <1> 
 12744                              <1> %macro GTK_IS_PANED_CLASS 1
 12745                              <1> 	invoke gtk_paned_get_type
 12746                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12747                              <1> %endmacro
 12748                              <1> 
 12749                              <1> %macro GTK_PIXMAP 1
 12750                              <1> 	invoke gtk_pixmap_get_type
 12751                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12752                              <1> %endmacro
 12753                              <1> 
 12754                              <1> %macro GTK_PIXMAP_CLASS 1
 12755                              <1> 	invoke gtk_pixmap_get_type
 12756                              <1> 	invoke g_type_check_class_cast, %1, eax
 12757                              <1> %endmacro
 12758                              <1> 
 12759                              <1> %macro GTK_IS_PIXMAP 1
 12760                              <1> 	invoke gtk_pixmap_get_type
 12761                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12762                              <1> %endmacro
 12763                              <1> 
 12764                              <1> %macro GTK_IS_PIXMAP_CLASS 1
 12765                              <1> 	invoke gtk_pixmap_get_type
 12766                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12767                              <1> %endmacro
 12768                              <1> 
 12769                              <1> %macro GTK_PLUG 1
 12770                              <1> 	invoke gtk_plug_get_type
 12771                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12772                              <1> %endmacro
 12773                              <1> 
 12774                              <1> %macro GTK_PLUG_CLASS 1
 12775                              <1> 	invoke gtk_plug_get_type
 12776                              <1> 	invoke g_type_check_class_cast, %1, eax
 12777                              <1> %endmacro
 12778                              <1> 
 12779                              <1> %macro GTK_IS_PLUG 1
 12780                              <1> 	invoke gtk_plug_get_type
 12781                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12782                              <1> %endmacro
 12783                              <1> 
 12784                              <1> %macro GTK_IS_PLUG_CLASS 1
 12785                              <1> 	invoke gtk_plug_get_type
 12786                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12787                              <1> %endmacro
 12788                              <1> 
 12789                              <1> %macro GTK_PREVIEW 1
 12790                              <1> 	invoke gtk_preview_get_type
 12791                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12792                              <1> %endmacro
 12793                              <1> 
 12794                              <1> %macro GTK_PREVIEW_CLASS 1
 12795                              <1> 	invoke gtk_preview_get_type
 12796                              <1> 	invoke g_type_check_class_cast, %1, eax
 12797                              <1> %endmacro
 12798                              <1> 
 12799                              <1> %macro GTK_IS_PREVIEW 1
 12800                              <1> 	invoke gtk_preview_get_type
 12801                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12802                              <1> %endmacro
 12803                              <1> 
 12804                              <1> %macro GTK_IS_PREVIEW_CLASS 1
 12805                              <1> 	invoke gtk_preview_get_type
 12806                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12807                              <1> %endmacro
 12808                              <1> 
 12809                              <1> %macro GTK_PRINT_CONTEXT 1
 12810                              <1> 	invoke gtk_print_context_get_type
 12811                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12812                              <1> %endmacro
 12813                              <1> 
 12814                              <1> %macro GTK_PRINT_CONTEXT_CLASS 1
 12815                              <1> 	invoke gtk_print_context_get_type
 12816                              <1> 	invoke g_type_check_class_cast, %1, eax
 12817                              <1> %endmacro
 12818                              <1> 
 12819                              <1> %macro GTK_IS_PRINT_CONTEXT 1
 12820                              <1> 	invoke gtk_print_context_get_type
 12821                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12822                              <1> %endmacro
 12823                              <1> 
 12824                              <1> %macro GTK_IS_PRINT_CONTEXT_CLASS 1
 12825                              <1> 	invoke gtk_print_context_get_type
 12826                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12827                              <1> %endmacro
 12828                              <1> 
 12829                              <1> %macro GTK_PRINT_OPERATION 1
 12830                              <1> 	invoke gtk_print_operation_get_type
 12831                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12832                              <1> %endmacro
 12833                              <1> 
 12834                              <1> %macro GTK_PRINT_OPERATION_CLASS 1
 12835                              <1> 	invoke gtk_print_operation_get_type
 12836                              <1> 	invoke g_type_check_class_cast, %1, eax
 12837                              <1> %endmacro
 12838                              <1> 
 12839                              <1> %macro GTK_IS_PRINT_OPERATION 1
 12840                              <1> 	invoke gtk_print_operation_get_type
 12841                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12842                              <1> %endmacro
 12843                              <1> 
 12844                              <1> %macro GTK_IS_PRINT_OPERATION_CLASS 1
 12845                              <1> 	invoke gtk_print_operation_get_type
 12846                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12847                              <1> %endmacro
 12848                              <1> 
 12849                              <1> %macro GTK_PRINT_OPERATION_PREVIEW 1
 12850                              <1> 	invoke gtk_print_operation_preview_get_type
 12851                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12852                              <1> %endmacro
 12853                              <1> 
 12854                              <1> %macro GTK_PRINT_OPERATION_PREVIEW_CLASS 1
 12855                              <1> 	invoke gtk_print_operation_preview_get_type
 12856                              <1> 	invoke g_type_check_class_cast, %1, eax
 12857                              <1> %endmacro
 12858                              <1> 
 12859                              <1> %macro GTK_IS_PRINT_OPERATION_PREVIEW 1
 12860                              <1> 	invoke gtk_print_operation_preview_get_type
 12861                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12862                              <1> %endmacro
 12863                              <1> 
 12864                              <1> %macro GTK_IS_PRINT_OPERATION_PREVIEW_CLASS 1
 12865                              <1> 	invoke gtk_print_operation_preview_get_type
 12866                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12867                              <1> %endmacro
 12868                              <1> 
 12869                              <1> %macro GTK_PRINT_SETTINGS 1
 12870                              <1> 	invoke gtk_print_settings_get_type
 12871                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12872                              <1> %endmacro
 12873                              <1> 
 12874                              <1> %macro GTK_PRINT_SETTINGS_CLASS 1
 12875                              <1> 	invoke gtk_print_settings_get_type
 12876                              <1> 	invoke g_type_check_class_cast, %1, eax
 12877                              <1> %endmacro
 12878                              <1> 
 12879                              <1> %macro GTK_IS_PRINT_SETTINGS 1
 12880                              <1> 	invoke gtk_print_settings_get_type
 12881                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12882                              <1> %endmacro
 12883                              <1> 
 12884                              <1> 
 12885                              <1> %macro GTK_IS_PRINT_SETTINGS_CLASS 1
 12886                              <1> 	invoke gtk_print_settings_get_type
 12887                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12888                              <1> %endmacro
 12889                              <1> 
 12890                              <1> %macro GTK_PROGRESS 1
 12891                              <1> 	invoke gtk_progress_get_type
 12892                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12893                              <1> %endmacro
 12894                              <1> 
 12895                              <1> %macro GTK_PROGRESS_CLASS 1
 12896                              <1> 	invoke gtk_progress_get_type
 12897                              <1> 	invoke g_type_check_class_cast, %1, eax
 12898                              <1> %endmacro
 12899                              <1> 
 12900                              <1> %macro GTK_IS_PROGRESS 1
 12901                              <1> 	invoke gtk_progress_get_type
 12902                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12903                              <1> %endmacro
 12904                              <1> 
 12905                              <1> %macro GTK_IS_PROGRESS_CLASS 1
 12906                              <1> 	invoke gtk_progress_get_type
 12907                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12908                              <1> %endmacro
 12909                              <1> 
 12910                              <1> %macro GTK_PROGRESS_BAR 1
 12911                              <1> 	invoke gtk_progress_bar_get_type
 12912                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12913                              <1> %endmacro
 12914                              <1> 
 12915                              <1> %macro GTK_PROGRESS_BAR_CLASS 1
 12916                              <1> 	invoke gtk_progress_bar_get_type
 12917                              <1> 	invoke g_type_check_class_cast, %1, eax
 12918                              <1> %endmacro
 12919                              <1> 
 12920                              <1> %macro GTK_IS_PROGRESS_BAR 1
 12921                              <1> 	invoke gtk_progress_bar_get_type
 12922                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12923                              <1> %endmacro
 12924                              <1> 
 12925                              <1> %macro GTK_IS_PROGRESS_BAR_CLASS 1
 12926                              <1> 	invoke gtk_progress_bar_get_type
 12927                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12928                              <1> %endmacro
 12929                              <1> 
 12930                              <1> %macro GTK_RADIO_ACTION 1
 12931                              <1> 	invoke gtk_radio_action_get_type
 12932                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12933                              <1> %endmacro
 12934                              <1> 
 12935                              <1> %macro GTK_RADIO_ACTION_CLASS 1
 12936                              <1> 	invoke gtk_radio_action_get_type
 12937                              <1> 	invoke g_type_check_class_cast, %1, eax
 12938                              <1> %endmacro
 12939                              <1> 
 12940                              <1> %macro GTK_IS_RADIO_ACTION 1
 12941                              <1> 	invoke gtk_radio_action_get_type
 12942                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12943                              <1> %endmacro
 12944                              <1> 
 12945                              <1> %macro GTK_IS_RADIO_ACTION_CLASS 1
 12946                              <1> 	invoke gtk_radio_action_get_type
 12947                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12948                              <1> %endmacro
 12949                              <1> 
 12950                              <1> %macro GTK_RADIO_BUTTON 1
 12951                              <1> 	invoke gtk_radio_button_get_type
 12952                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12953                              <1> %endmacro
 12954                              <1> 
 12955                              <1> %macro GTK_RADIO_BUTTON_CLASS 1
 12956                              <1> 	invoke gtk_radio_button_get_type
 12957                              <1> 	invoke g_type_check_class_cast, %1, eax
 12958                              <1> %endmacro
 12959                              <1> 
 12960                              <1> %macro GTK_IS_RADIO_BUTTON 1
 12961                              <1> 	invoke gtk_radio_button_get_type
 12962                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12963                              <1> %endmacro
 12964                              <1> 
 12965                              <1> %macro GTK_IS_RADIO_BUTTON_CLASS 1
 12966                              <1> 	invoke gtk_radio_button_get_type
 12967                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12968                              <1> %endmacro
 12969                              <1> 
 12970                              <1> %macro GTK_RADIO_MENU_ITEM 1
 12971                              <1> 	invoke gtk_radio_menu_item_get_type
 12972                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12973                              <1> %endmacro
 12974                              <1> 
 12975                              <1> %macro GTK_RADIO_MENU_ITEM_CLASS 1
 12976                              <1> 	invoke gtk_radio_menu_item_get_type
 12977                              <1> 	invoke g_type_check_class_cast, %1, eax
 12978                              <1> %endmacro
 12979                              <1> 
 12980                              <1> %macro GTK_IS_RADIO_MENU_ITEM 1
 12981                              <1> 	invoke gtk_radio_menu_item_get_type
 12982                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 12983                              <1> %endmacro
 12984                              <1> 
 12985                              <1> %macro GTK_IS_RADIO_MENU_ITEM_CLASS 1
 12986                              <1> 	invoke gtk_radio_menu_item_get_type
 12987                              <1> 	invoke g_type_check_class_is_a , %1, eax
 12988                              <1> %endmacro
 12989                              <1> 
 12990                              <1> %macro GTK_RADIO_TOOL_BUTTON 1
 12991                              <1> 	invoke gtk_radio_tool_button_get_type
 12992                              <1> 	invoke g_type_check_instance_cast, %1, eax
 12993                              <1> %endmacro
 12994                              <1> 
 12995                              <1> %macro GTK_RADIO_TOOL_BUTTON_CLASS 1
 12996                              <1> 	invoke gtk_radio_tool_button_get_type
 12997                              <1> 	invoke g_type_check_class_cast, %1, eax
 12998                              <1> %endmacro
 12999                              <1> 
 13000                              <1> %macro GTK_IS_RADIO_TOOL_BUTTON 1
 13001                              <1> 	invoke gtk_radio_tool_button_get_type
 13002                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13003                              <1> %endmacro
 13004                              <1> 
 13005                              <1> %macro GTK_IS_RADIO_TOOL_BUTTON_CLASS 1
 13006                              <1> 	invoke gtk_radio_tool_button_get_type
 13007                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13008                              <1> %endmacro
 13009                              <1> 
 13010                              <1> %macro GTK_RANGE 1
 13011                              <1> 	invoke gtk_range_get_type
 13012                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13013                              <1> %endmacro
 13014                              <1> 
 13015                              <1> %macro GTK_RANGE_CLASS 1
 13016                              <1> 	invoke gtk_range_get_type
 13017                              <1> 	invoke g_type_check_class_cast, %1, eax
 13018                              <1> %endmacro
 13019                              <1> 
 13020                              <1> %macro GTK_IS_RANGE 1
 13021                              <1> 	invoke gtk_range_get_type
 13022                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13023                              <1> %endmacro
 13024                              <1> 
 13025                              <1> %macro GTK_IS_RANGE_CLASS 1
 13026                              <1> 	invoke gtk_range_get_type
 13027                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13028                              <1> %endmacro
 13029                              <1> 
 13030                              <1> %macro GTK_RECENT_ACTION 1
 13031                              <1> 	invoke gtk_recent_action_get_type
 13032                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13033                              <1> %endmacro
 13034                              <1> 
 13035                              <1> %macro GTK_RECENT_ACTION_CLASS 1
 13036                              <1> 	invoke gtk_recent_action_get_type
 13037                              <1> 	invoke g_type_check_class_cast, %1, eax
 13038                              <1> %endmacro
 13039                              <1> 
 13040                              <1> %macro GTK_IS_RECENT_ACTION 1
 13041                              <1> 	invoke gtk_recent_action_get_type
 13042                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13043                              <1> %endmacro
 13044                              <1> 
 13045                              <1> %macro GTK_IS_RECENT_ACTION_CLASS 1
 13046                              <1> 	invoke gtk_recent_action_get_type
 13047                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13048                              <1> %endmacro
 13049                              <1> 
 13050                              <1> %macro GTK_RECENT_CHOOSER 1
 13051                              <1> 	invoke gtk_recent_chooser_get_type
 13052                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13053                              <1> %endmacro
 13054                              <1> 
 13055                              <1> %macro GTK_RECENT_CHOOSER_CLASS 1
 13056                              <1> 	invoke gtk_recent_chooser_get_type
 13057                              <1> 	invoke g_type_check_class_cast, %1, eax
 13058                              <1> %endmacro
 13059                              <1> 
 13060                              <1> %macro GTK_IS_RECENT_CHOOSER 1
 13061                              <1> 	invoke gtk_recent_chooser_get_type
 13062                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13063                              <1> %endmacro
 13064                              <1> 
 13065                              <1> %macro GTK_IS_RECENT_CHOOSER_CLASS 1
 13066                              <1> 	invoke gtk_recent_chooser_get_type
 13067                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13068                              <1> %endmacro
 13069                              <1> 
 13070                              <1> %macro GTK_RECENT_CHOOSER_DIALOG 1
 13071                              <1> 	invoke gtk_recent_chooser_dialog_get_type
 13072                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13073                              <1> %endmacro
 13074                              <1> 
 13075                              <1> %macro GTK_RECENT_CHOOSER_DIALOG_CLASS 1
 13076                              <1> 	invoke gtk_recent_chooser_dialog_get_type
 13077                              <1> 	invoke g_type_check_class_cast, %1, eax
 13078                              <1> %endmacro
 13079                              <1> 
 13080                              <1> %macro GTK_IS_RECENT_CHOOSER_DIALOG 1
 13081                              <1> 	invoke gtk_recent_chooser_dialog_get_type
 13082                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13083                              <1> %endmacro
 13084                              <1> 
 13085                              <1> %macro GTK_IS_RECENT_CHOOSER_DIALOG_CLASS 1
 13086                              <1> 	invoke gtk_recent_chooser_dialog_get_type
 13087                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13088                              <1> %endmacro
 13089                              <1> 
 13090                              <1> %macro GTK_RECENT_CHOOSER_MENU 1
 13091                              <1> 	invoke gtk_recent_chooser_menu_get_type
 13092                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13093                              <1> %endmacro
 13094                              <1> 
 13095                              <1> %macro GTK_RECENT_CHOOSER_MENU_CLASS 1
 13096                              <1> 	invoke gtk_recent_chooser_menu_get_type
 13097                              <1> 	invoke g_type_check_class_cast, %1, eax
 13098                              <1> %endmacro
 13099                              <1> 
 13100                              <1> %macro GTK_IS_RECENT_CHOOSER_MENU 1
 13101                              <1> 	invoke gtk_recent_chooser_menu_get_type
 13102                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13103                              <1> %endmacro
 13104                              <1> 
 13105                              <1> %macro GTK_IS_RECENT_CHOOSER_MENU_CLASS 1
 13106                              <1> 	invoke gtk_recent_chooser_menu_get_type
 13107                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13108                              <1> %endmacro
 13109                              <1> 
 13110                              <1> %macro GTK_RECENT_CHOOSER_WIDGET 1
 13111                              <1> 	invoke gtk_recent_chooser_widget_get_type
 13112                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13113                              <1> %endmacro
 13114                              <1> 
 13115                              <1> %macro GTK_RECENT_CHOOSER_WIDGET_CLASS 1
 13116                              <1> 	invoke gtk_recent_chooser_widget_get_type
 13117                              <1> 	invoke g_type_check_class_cast, %1, eax
 13118                              <1> %endmacro
 13119                              <1> 
 13120                              <1> %macro GTK_IS_RECENT_CHOOSER_WIDGET 1
 13121                              <1> 	invoke gtk_recent_chooser_widget_get_type
 13122                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13123                              <1> %endmacro
 13124                              <1> 
 13125                              <1> %macro GTK_IS_RECENT_CHOOSER_WIDGET_CLASS 1
 13126                              <1> 	invoke gtk_recent_chooser_widget_get_type
 13127                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13128                              <1> %endmacro
 13129                              <1> 
 13130                              <1> %macro GTK_RECENT_FILTER 1
 13131                              <1> 	invoke gtk_recent_filter_get_type
 13132                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13133                              <1> %endmacro
 13134                              <1> 
 13135                              <1> %macro GTK_RECENT_FILTER_CLASS 1
 13136                              <1> 	invoke gtk_recent_filter_get_type
 13137                              <1> 	invoke g_type_check_class_cast, %1, eax
 13138                              <1> %endmacro
 13139                              <1> 
 13140                              <1> %macro GTK_IS_RECENT_FILTER 1
 13141                              <1> 	invoke gtk_recent_filter_get_type
 13142                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13143                              <1> %endmacro
 13144                              <1> 
 13145                              <1> %macro GTK_IS_RECENT_FILTER_CLASS 1
 13146                              <1> 	invoke gtk_recent_filter_get_type
 13147                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13148                              <1> %endmacro
 13149                              <1> 
 13150                              <1> %macro GTK_RECENT_MANAGER 1
 13151                              <1> 	invoke gtk_recent_manager_get_type
 13152                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13153                              <1> %endmacro
 13154                              <1> 
 13155                              <1> %macro GTK_RECENT_MANAGER_CLASS 1
 13156                              <1> 	invoke gtk_recent_manager_get_type
 13157                              <1> 	invoke g_type_check_class_cast, %1, eax
 13158                              <1> %endmacro
 13159                              <1> 
 13160                              <1> %macro GTK_IS_RECENT_MANAGER 1
 13161                              <1> 	invoke gtk_recent_manager_get_type
 13162                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13163                              <1> %endmacro
 13164                              <1> 
 13165                              <1> %macro GTK_IS_RECENT_MANAGER_CLASS 1
 13166                              <1> 	invoke gtk_recent_manager_get_type
 13167                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13168                              <1> %endmacro
 13169                              <1> 
 13170                              <1> %macro GTK_RULER 1
 13171                              <1> 	invoke gtk_ruler_get_type
 13172                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13173                              <1> %endmacro
 13174                              <1> 
 13175                              <1> %macro GTK_RULER_CLASS 1
 13176                              <1> 	invoke gtk_ruler_get_type
 13177                              <1> 	invoke g_type_check_class_cast, %1, eax
 13178                              <1> %endmacro
 13179                              <1> 
 13180                              <1> %macro GTK_IS_RULER 1
 13181                              <1> 	invoke gtk_ruler_get_type
 13182                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13183                              <1> %endmacro
 13184                              <1> 
 13185                              <1> %macro GTK_IS_RULER_CLASS 1
 13186                              <1> 	invoke gtk_ruler_get_type
 13187                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13188                              <1> %endmacro
 13189                              <1> 
 13190                              <1> %macro GTK_SCALE 1
 13191                              <1> 	invoke gtk_scale_get_type
 13192                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13193                              <1> %endmacro
 13194                              <1> 
 13195                              <1> %macro GTK_SCALE_CLASS 1
 13196                              <1> 	invoke gtk_scale_get_type
 13197                              <1> 	invoke g_type_check_class_cast, %1, eax
 13198                              <1> %endmacro
 13199                              <1> 
 13200                              <1> %macro GTK_IS_SCALE 1
 13201                              <1> 	invoke gtk_scale_get_type
 13202                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13203                              <1> %endmacro
 13204                              <1> 
 13205                              <1> %macro GTK_IS_SCALE_CLASS 1
 13206                              <1> 	invoke gtk_scale_get_type
 13207                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13208                              <1> %endmacro
 13209                              <1> 
 13210                              <1> %macro GTK_SCALE_BUTTON 1
 13211                              <1> 	invoke gtk_scale_button_get_type
 13212                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13213                              <1> %endmacro
 13214                              <1> 
 13215                              <1> %macro GTK_SCALE_BUTTON_CLASS 1
 13216                              <1> 	invoke gtk_scale_button_get_type
 13217                              <1> 	invoke g_type_check_class_cast, %1, eax
 13218                              <1> %endmacro
 13219                              <1> 
 13220                              <1> %macro GTK_IS_SCALE_BUTTON 1
 13221                              <1> 	invoke gtk_scale_button_get_type
 13222                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13223                              <1> %endmacro
 13224                              <1> 
 13225                              <1> %macro GTK_IS_SCALE_BUTTON_CLASS 1
 13226                              <1> 	invoke gtk_scale_button_get_type
 13227                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13228                              <1> %endmacro
 13229                              <1> 
 13230                              <1> %macro GTK_SCROLLBAR 1
 13231                              <1> 	invoke gtk_scrollbar_get_type
 13232                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13233                              <1> %endmacro
 13234                              <1> 
 13235                              <1> %macro GTK_SCROLLBAR_CLASS 1
 13236                              <1> 	invoke gtk_scrollbar_get_type
 13237                              <1> 	invoke g_type_check_class_cast, %1, eax
 13238                              <1> %endmacro
 13239                              <1> 
 13240                              <1> %macro GTK_IS_SCROLLBAR 1
 13241                              <1> 	invoke gtk_scrollbar_get_type
 13242                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13243                              <1> %endmacro
 13244                              <1> 
 13245                              <1> %macro GTK_IS_SCROLLBAR_CLASS 1
 13246                              <1> 	invoke gtk_scrollbar_get_type
 13247                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13248                              <1> %endmacro
 13249                              <1> 
 13250                              <1> %macro GTK_SCROLLED_WINDOW 1
 13251                              <1> 	invoke gtk_scrolled_window_get_type
 13252                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13253                              <1> %endmacro
 13254                              <1> 
 13255                              <1> %macro GTK_SCROLLED_WINDOW_CLASS 1
 13256                              <1> 	invoke gtk_scrolled_window_get_type
 13257                              <1> 	invoke g_type_check_class_cast, %1, eax
 13258                              <1> %endmacro
 13259                              <1> 
 13260                              <1> %macro GTK_IS_SCROLLED_WINDOW 1
 13261                              <1> 	invoke gtk_scrolled_window_get_type
 13262                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13263                              <1> %endmacro
 13264                              <1> 
 13265                              <1> %macro GTK_IS_SCROLLED_WINDOW_CLASS 1
 13266                              <1> 	invoke gtk_scrolled_window_get_type
 13267                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13268                              <1> %endmacro
 13269                              <1> 
 13270                              <1> %macro GTK_SEPARATOR 1
 13271                              <1> 	invoke gtk_separator_get_type
 13272                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13273                              <1> %endmacro
 13274                              <1> 
 13275                              <1> %macro GTK_SEPARATOR_CLASS 1
 13276                              <1> 	invoke gtk_separator_get_type
 13277                              <1> 	invoke g_type_check_class_cast, %1, eax
 13278                              <1> %endmacro
 13279                              <1> 
 13280                              <1> %macro GTK_IS_SEPARATOR 1
 13281                              <1> 	invoke gtk_separator_get_type
 13282                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13283                              <1> %endmacro
 13284                              <1> 
 13285                              <1> %macro GTK_IS_SEPARATOR_CLASS 1
 13286                              <1> 	invoke gtk_separator_get_type
 13287                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13288                              <1> %endmacro
 13289                              <1> 
 13290                              <1> %macro GTK_SEPARATOR_MENU_ITEM 1
 13291                              <1> 	invoke gtk_separator_menu_item_get_type
 13292                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13293                              <1> %endmacro
 13294                              <1> 
 13295                              <1> %macro GTK_SEPARATOR_MENU_ITEM_CLASS 1
 13296                              <1> 	invoke gtk_separator_menu_item_get_type
 13297                              <1> 	invoke g_type_check_class_cast, %1, eax
 13298                              <1> %endmacro
 13299                              <1> 
 13300                              <1> %macro GTK_IS_SEPARATOR_MENU_ITEM 1
 13301                              <1> 	invoke gtk_separator_menu_item_get_type
 13302                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13303                              <1> %endmacro
 13304                              <1> 
 13305                              <1> %macro GTK_IS_SEPARATOR_MENU_ITEM_CLASS 1
 13306                              <1> 	invoke gtk_separator_menu_item_get_type
 13307                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13308                              <1> %endmacro
 13309                              <1> 
 13310                              <1> %macro GTK_SEPARATOR_TOOL_ITEM 1
 13311                              <1> 	invoke gtk_separator_tool_item_get_type
 13312                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13313                              <1> %endmacro
 13314                              <1> 
 13315                              <1> %macro GTK_SEPARATOR_TOOL_ITEM_CLASS 1
 13316                              <1> 	invoke gtk_separator_tool_item_get_type
 13317                              <1> 	invoke g_type_check_class_cast, %1, eax
 13318                              <1> %endmacro
 13319                              <1> 
 13320                              <1> %macro GTK_IS_SEPARATOR_TOOL_ITEM 1
 13321                              <1> 	invoke gtk_separator_tool_item_get_type
 13322                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13323                              <1> %endmacro
 13324                              <1> 
 13325                              <1> %macro GTK_IS_SEPARATOR_TOOL_ITEM_CLASS 1
 13326                              <1> 	invoke gtk_separator_tool_item_get_type
 13327                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13328                              <1> %endmacro
 13329                              <1> 
 13330                              <1> %macro GTK_SETTINGS 1
 13331                              <1> 	invoke gtk_settings_get_type
 13332                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13333                              <1> %endmacro
 13334                              <1> 
 13335                              <1> %macro GTK_SETTINGS_CLASS 1
 13336                              <1> 	invoke gtk_settings_get_type
 13337                              <1> 	invoke g_type_check_class_cast, %1, eax
 13338                              <1> %endmacro
 13339                              <1> 
 13340                              <1> %macro GTK_IS_SETTINGS 1
 13341                              <1> 	invoke gtk_settings_get_type
 13342                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13343                              <1> %endmacro
 13344                              <1> 
 13345                              <1> %macro GTK_IS_SETTINGS_CLASS 1
 13346                              <1> 	invoke gtk_settings_get_type
 13347                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13348                              <1> %endmacro
 13349                              <1> 
 13350                              <1> %macro GTK_SIZE_GROUP 1
 13351                              <1> 	invoke gtk_size_group_get_type
 13352                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13353                              <1> %endmacro
 13354                              <1> 
 13355                              <1> %macro GTK_SIZE_GROUP_CLASS 1
 13356                              <1> 	invoke gtk_size_group_get_type
 13357                              <1> 	invoke g_type_check_class_cast, %1, eax
 13358                              <1> %endmacro
 13359                              <1> 
 13360                              <1> %macro GTK_IS_SIZE_GROUP 1
 13361                              <1> 	invoke gtk_size_group_get_type
 13362                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13363                              <1> %endmacro
 13364                              <1> 
 13365                              <1> %macro GTK_IS_SIZE_GROUP_CLASS 1
 13366                              <1> 	invoke gtk_size_group_get_type
 13367                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13368                              <1> %endmacro
 13369                              <1> 
 13370                              <1> %macro GTK_SOCKET 1
 13371                              <1> 	invoke gtk_socket_get_type
 13372                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13373                              <1> %endmacro
 13374                              <1> 
 13375                              <1> %macro GTK_SOCKET_CLASS 1
 13376                              <1> 	invoke gtk_socket_get_type
 13377                              <1> 	invoke g_type_check_class_cast, %1, eax
 13378                              <1> %endmacro
 13379                              <1> 
 13380                              <1> %macro GTK_IS_SOCKET 1
 13381                              <1> 	invoke gtk_socket_get_type
 13382                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13383                              <1> %endmacro
 13384                              <1> 
 13385                              <1> %macro GTK_IS_SOCKET_CLASS 1
 13386                              <1> 	invoke gtk_socket_get_type
 13387                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13388                              <1> %endmacro
 13389                              <1> 
 13390                              <1> %macro GTK_SPIN_BUTTON 1
 13391                              <1> 	invoke gtk_spin_button_get_type
 13392                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13393                              <1> %endmacro
 13394                              <1> 
 13395                              <1> %macro GTK_SPIN_BUTTON_CLASS 1
 13396                              <1> 	invoke gtk_spin_button_get_type
 13397                              <1> 	invoke g_type_check_class_cast, %1, eax
 13398                              <1> %endmacro
 13399                              <1> 
 13400                              <1> %macro GTK_IS_SPIN_BUTTON 1
 13401                              <1> 	invoke gtk_spin_button_get_type
 13402                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13403                              <1> %endmacro
 13404                              <1> 
 13405                              <1> %macro GTK_IS_SPIN_BUTTON_CLASS 1
 13406                              <1> 	invoke gtk_spin_button_get_type
 13407                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13408                              <1> %endmacro
 13409                              <1> 
 13410                              <1> %macro GTK_SPINNER 1
 13411                              <1> 	invoke gtk_spinner_get_type
 13412                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13413                              <1> %endmacro
 13414                              <1> 
 13415                              <1> %macro GTK_SPINNER_CLASS 1
 13416                              <1> 	invoke gtk_spinner_get_type
 13417                              <1> 	invoke g_type_check_class_cast, %1, eax
 13418                              <1> %endmacro
 13419                              <1> 
 13420                              <1> %macro GTK_IS_SPINNER 1
 13421                              <1> 	invoke gtk_spinner_get_type
 13422                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13423                              <1> %endmacro
 13424                              <1> 
 13425                              <1> %macro GTK_IS_SPINNER_CLASS 1
 13426                              <1> 	invoke gtk_spinner_get_type
 13427                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13428                              <1> %endmacro
 13429                              <1> 
 13430                              <1> %macro GTK_STATUSBAR 1
 13431                              <1> 	invoke gtk_statusbar_get_type
 13432                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13433                              <1> %endmacro
 13434                              <1> 
 13435                              <1> %macro GTK_STATUSBAR_CLASS 1
 13436                              <1> 	invoke gtk_statusbar_get_type
 13437                              <1> 	invoke g_type_check_class_cast, %1, eax
 13438                              <1> %endmacro
 13439                              <1> 
 13440                              <1> %macro GTK_IS_STATUSBAR 1
 13441                              <1> 	invoke gtk_statusbar_get_type
 13442                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13443                              <1> %endmacro
 13444                              <1> 
 13445                              <1> %macro GTK_IS_STATUSBAR_CLASS 1
 13446                              <1> 	invoke gtk_statusbar_get_type
 13447                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13448                              <1> %endmacro
 13449                              <1> 
 13450                              <1> %macro GTK_TABLE 1
 13451                              <1> 	invoke gtk_table_get_type
 13452                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13453                              <1> %endmacro
 13454                              <1> 
 13455                              <1> %macro GTK_TABLE_CLASS 1
 13456                              <1> 	invoke gtk_table_get_type
 13457                              <1> 	invoke g_type_check_class_cast, %1, eax
 13458                              <1> %endmacro
 13459                              <1> 
 13460                              <1> %macro GTK_IS_TABLE 1
 13461                              <1> 	invoke gtk_table_get_type
 13462                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13463                              <1> %endmacro
 13464                              <1> 
 13465                              <1> %macro GTK_IS_TABLE_CLASS 1
 13466                              <1> 	invoke gtk_table_get_type
 13467                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13468                              <1> %endmacro
 13469                              <1> 
 13470                              <1> %macro GTK_TEAROFF_MENU_ITEM 1
 13471                              <1> 	invoke gtk_tearoff_menu_item_get_type
 13472                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13473                              <1> %endmacro
 13474                              <1> 
 13475                              <1> %macro GTK_TEAROFF_MENU_ITEM_CLASS 1
 13476                              <1> 	invoke gtk_tearoff_menu_item_get_type
 13477                              <1> 	invoke g_type_check_class_cast, %1, eax
 13478                              <1> %endmacro
 13479                              <1> 
 13480                              <1> %macro GTK_IS_TEAROFF_MENU_ITEM 1
 13481                              <1> 	invoke gtk_tearoff_menu_item_get_type
 13482                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13483                              <1> %endmacro
 13484                              <1> 
 13485                              <1> %macro GTK_IS_TEAROFF_MENU_ITEM_CLASS 1
 13486                              <1> 	invoke gtk_tearoff_menu_item_get_type
 13487                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13488                              <1> %endmacro
 13489                              <1> 
 13490                              <1> %macro GTK_TEXT 1
 13491                              <1> 	invoke gtk_text_get_type
 13492                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13493                              <1> %endmacro
 13494                              <1> 
 13495                              <1> %macro GTK_TEXT_CLASS 1
 13496                              <1> 	invoke gtk_text_get_type
 13497                              <1> 	invoke g_type_check_class_cast, %1, eax
 13498                              <1> %endmacro
 13499                              <1> 
 13500                              <1> %macro GTK_IS_TEXT 1
 13501                              <1> 	invoke gtk_text_get_type
 13502                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13503                              <1> %endmacro
 13504                              <1> 
 13505                              <1> %macro GTK_IS_TEXT_CLASS 1
 13506                              <1> 	invoke gtk_text_get_type
 13507                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13508                              <1> %endmacro
 13509                              <1> 
 13510                              <1> %macro GTK_TEXT_BUFFER 1
 13511                              <1> 	invoke gtk_text_buffer_get_type
 13512                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13513                              <1> %endmacro
 13514                              <1> 
 13515                              <1> %macro GTK_TEXT_BUFFER_CLASS 1
 13516                              <1> 	invoke gtk_text_buffer_get_type
 13517                              <1> 	invoke g_type_check_class_cast, %1, eax
 13518                              <1> %endmacro
 13519                              <1> 
 13520                              <1> %macro GTK_IS_TEXT_BUFFER 1
 13521                              <1> 	invoke gtk_text_buffer_get_type
 13522                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13523                              <1> %endmacro
 13524                              <1> 
 13525                              <1> %macro GTK_IS_TEXT_BUFFER_CLASS 1
 13526                              <1> 	invoke gtk_text_buffer_get_type
 13527                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13528                              <1> %endmacro
 13529                              <1> 
 13530                              <1> %macro GTK_TEXT_LAYOUT 1
 13531                              <1> 	invoke gtk_text_layout_get_type
 13532                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13533                              <1> %endmacro
 13534                              <1> 
 13535                              <1> %macro GTK_TEXT_LAYOUT_CLASS 1
 13536                              <1> 	invoke gtk_text_layout_get_type
 13537                              <1> 	invoke g_type_check_class_cast, %1, eax
 13538                              <1> %endmacro
 13539                              <1> 
 13540                              <1> %macro GTK_IS_TEXT_LAYOUT 1
 13541                              <1> 	invoke gtk_text_layout_get_type
 13542                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13543                              <1> %endmacro
 13544                              <1> 
 13545                              <1> %macro GTK_IS_TEXT_LAYOUT_CLASS 1
 13546                              <1> 	invoke gtk_text_layout_get_type
 13547                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13548                              <1> %endmacro
 13549                              <1> 
 13550                              <1> %macro GTK_TEXT_TAG 1
 13551                              <1> 	invoke gtk_text_tag_get_type
 13552                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13553                              <1> %endmacro
 13554                              <1> 
 13555                              <1> %macro GTK_TEXT_TAG_CLASS 1
 13556                              <1> 	invoke gtk_text_tag_get_type
 13557                              <1> 	invoke g_type_check_class_cast, %1, eax
 13558                              <1> %endmacro
 13559                              <1> 
 13560                              <1> %macro GTK_IS_TEXT_TAG 1
 13561                              <1> 	invoke gtk_text_tag_get_type
 13562                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13563                              <1> %endmacro
 13564                              <1> 
 13565                              <1> %macro GTK_IS_TEXT_TAG_CLASS 1
 13566                              <1> 	invoke gtk_text_tag_get_type
 13567                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13568                              <1> %endmacro
 13569                              <1> 
 13570                              <1> %macro GTK_TEXT_TAG_TABLE 1
 13571                              <1> 	invoke gtk_text_tag_table_get_type
 13572                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13573                              <1> %endmacro
 13574                              <1> 
 13575                              <1> %macro GTK_TEXT_TAG_TABLE_CLASS 1
 13576                              <1> 	invoke gtk_text_tag_table_get_type
 13577                              <1> 	invoke g_type_check_class_cast, %1, eax
 13578                              <1> %endmacro
 13579                              <1> 
 13580                              <1> %macro GTK_IS_TEXT_TAG_TABLE 1
 13581                              <1> 	invoke gtk_text_tag_table_get_type
 13582                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13583                              <1> %endmacro
 13584                              <1> 
 13585                              <1> %macro GTK_IS_TEXT_TAG_TABLE_CLASS 1
 13586                              <1> 	invoke gtk_text_tag_table_get_type
 13587                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13588                              <1> %endmacro
 13589                              <1> 
 13590                              <1> %macro GTK_TEXT_VIEW 1
 13591                              <1> 	invoke gtk_text_view_get_type
 13592                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13593                              <1> %endmacro
 13594                              <1> 
 13595                              <1> %macro GTK_TEXT_VIEW_CLASS 1
 13596                              <1> 	invoke gtk_text_view_get_type
 13597                              <1> 	invoke g_type_check_class_cast, %1, eax
 13598                              <1> %endmacro
 13599                              <1> 
 13600                              <1> %macro GTK_IS_TEXT_VIEW 1
 13601                              <1> 	invoke gtk_text_view_get_type
 13602                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13603                              <1> %endmacro
 13604                              <1> 
 13605                              <1> %macro GTK_IS_TEXT_VIEW_CLASS 1
 13606                              <1> 	invoke gtk_text_view_get_type
 13607                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13608                              <1> %endmacro
 13609                              <1> 
 13610                              <1> %macro GTK_TIPS_QUERY 1
 13611                              <1> 	invoke gtk_tips_query_get_type
 13612                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13613                              <1> %endmacro
 13614                              <1> 
 13615                              <1> %macro GTK_TIPS_QUERY_CLASS 1
 13616                              <1> 	invoke gtk_tips_query_get_type
 13617                              <1> 	invoke g_type_check_class_cast, %1, eax
 13618                              <1> %endmacro
 13619                              <1> 
 13620                              <1> %macro GTK_IS_TIPS_QUERY 1
 13621                              <1> 	invoke gtk_tips_query_get_type
 13622                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13623                              <1> %endmacro
 13624                              <1> 
 13625                              <1> %macro GTK_IS_TIPS_QUERY_CLASS 1
 13626                              <1> 	invoke gtk_tips_query_get_type
 13627                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13628                              <1> %endmacro
 13629                              <1> 
 13630                              <1> %macro GTK_TOGGLE_ACTION 1
 13631                              <1> 	invoke gtk_toggle_action_get_type
 13632                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13633                              <1> %endmacro
 13634                              <1> 
 13635                              <1> %macro GTK_TOGGLE_ACTION_CLASS 1
 13636                              <1> 	invoke gtk_toggle_action_get_type
 13637                              <1> 	invoke g_type_check_class_cast, %1, eax
 13638                              <1> %endmacro
 13639                              <1> 
 13640                              <1> %macro GTK_IS_TOGGLE_ACTION 1
 13641                              <1> 	invoke gtk_toggle_action_get_type
 13642                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13643                              <1> %endmacro
 13644                              <1> 
 13645                              <1> %macro GTK_IS_TOGGLE_ACTION_CLASS 1
 13646                              <1> 	invoke gtk_toggle_action_get_type
 13647                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13648                              <1> %endmacro
 13649                              <1> 
 13650                              <1> %macro GTK_TOGGLE_BUTTON 1
 13651                              <1> 	invoke gtk_toggle_button_get_type
 13652                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13653                              <1> %endmacro
 13654                              <1> 
 13655                              <1> %macro GTK_TOGGLE_BUTTON_CLASS 1
 13656                              <1> 	invoke gtk_toggle_button_get_type
 13657                              <1> 	invoke g_type_check_class_cast, %1, eax
 13658                              <1> %endmacro
 13659                              <1> 
 13660                              <1> %macro GTK_IS_TOGGLE_BUTTON 1
 13661                              <1> 	invoke gtk_toggle_button_get_type
 13662                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13663                              <1> %endmacro
 13664                              <1> 
 13665                              <1> %macro GTK_IS_TOGGLE_BUTTON_CLASS 1
 13666                              <1> 	invoke gtk_toggle_button_get_type
 13667                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13668                              <1> %endmacro
 13669                              <1> 
 13670                              <1> %macro GTK_TOGGLE_TOOL_BUTTON 1
 13671                              <1> 	invoke gtk_toggle_tool_button_get_type
 13672                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13673                              <1> %endmacro
 13674                              <1> 
 13675                              <1> %macro GTK_TOGGLE_TOOL_BUTTON_CLASS 1
 13676                              <1> 	invoke gtk_toggle_tool_button_get_type
 13677                              <1> 	invoke g_type_check_class_cast, %1, eax
 13678                              <1> %endmacro
 13679                              <1> 
 13680                              <1> %macro GTK_IS_TOGGLE_TOOL_BUTTON 1
 13681                              <1> 	invoke gtk_toggle_tool_button_get_type
 13682                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13683                              <1> %endmacro
 13684                              <1> 
 13685                              <1> %macro GTK_IS_TOGGLE_TOOL_BUTTON_CLASS 1
 13686                              <1> 	invoke gtk_toggle_tool_button_get_type
 13687                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13688                              <1> %endmacro
 13689                              <1> 
 13690                              <1> %macro GTK_TOOLBAR 1
 13691                              <1> 	invoke gtk_toolbar_get_type
 13692                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13693                              <1> %endmacro
 13694                              <1> 
 13695                              <1> %macro GTK_TOOLBAR_CLASS 1
 13696                              <1> 	invoke gtk_toolbar_get_type
 13697                              <1> 	invoke g_type_check_class_cast, %1, eax
 13698                              <1> %endmacro
 13699                              <1> 
 13700                              <1> %macro GTK_IS_TOOLBAR 1
 13701                              <1> 	invoke gtk_toolbar_get_type
 13702                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13703                              <1> %endmacro
 13704                              <1> 
 13705                              <1> %macro GTK_IS_TOOLBAR_CLASS 1
 13706                              <1> 	invoke gtk_toolbar_get_type
 13707                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13708                              <1> %endmacro
 13709                              <1> 
 13710                              <1> %macro GTK_TOOL_BUTTON 1
 13711                              <1> 	invoke gtk_tool_button_get_type
 13712                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13713                              <1> %endmacro
 13714                              <1> 
 13715                              <1> %macro GTK_TOOL_BUTTON_CLASS 1
 13716                              <1> 	invoke gtk_tool_button_get_type
 13717                              <1> 	invoke g_type_check_class_cast, %1, eax
 13718                              <1> %endmacro
 13719                              <1> 
 13720                              <1> %macro GTK_IS_TOOL_BUTTON 1
 13721                              <1> 	invoke gtk_tool_button_get_type
 13722                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13723                              <1> %endmacro
 13724                              <1> 
 13725                              <1> %macro GTK_IS_TOOL_BUTTON_CLASS 1
 13726                              <1> 	invoke gtk_tool_button_get_type
 13727                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13728                              <1> %endmacro
 13729                              <1> 
 13730                              <1> %macro GTK_TOOL_ITEM_GROUP 1
 13731                              <1> 	invoke gtk_tool_item_group_get_type
 13732                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13733                              <1> %endmacro
 13734                              <1> 
 13735                              <1> %macro GTK_TOOL_ITEM_GROUP_CLASS 1
 13736                              <1> 	invoke gtk_tool_item_group_get_type
 13737                              <1> 	invoke g_type_check_class_cast, %1, eax
 13738                              <1> %endmacro
 13739                              <1> 
 13740                              <1> %macro GTK_IS_TOOL_ITEM_GROUP 1
 13741                              <1> 	invoke gtk_tool_item_group_get_type
 13742                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13743                              <1> %endmacro
 13744                              <1> 
 13745                              <1> %macro GTK_IS_TOOL_ITEM_GROUP_CLASS 1
 13746                              <1> 	invoke gtk_tool_item_group_get_type
 13747                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13748                              <1> %endmacro
 13749                              <1> 
 13750                              <1> %macro GTK_TOOL_PALETTE 1
 13751                              <1> 	invoke gtk_tool_palette_get_type
 13752                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13753                              <1> %endmacro
 13754                              <1> 
 13755                              <1> %macro GTK_TOOL_PALETTE_CLASS 1
 13756                              <1> 	invoke gtk_tool_palette_get_type
 13757                              <1> 	invoke g_type_check_class_cast, %1, eax
 13758                              <1> %endmacro
 13759                              <1> 
 13760                              <1> %macro GTK_IS_TOOL_PALETTE 1
 13761                              <1> 	invoke gtk_tool_palette_get_type
 13762                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13763                              <1> %endmacro
 13764                              <1> 
 13765                              <1> %macro GTK_IS_TOOL_PALETTE_CLASS 1
 13766                              <1> 	invoke gtk_tool_palette_get_type
 13767                              <1> 
 13768                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13769                              <1> %endmacro
 13770                              <1> 
 13771                              <1> %macro GTK_TOOL_SHELL 1
 13772                              <1> 	invoke gtk_tool_shell_get_type
 13773                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13774                              <1> %endmacro
 13775                              <1> 
 13776                              <1> %macro GTK_TOOL_SHELL_CLASS 1
 13777                              <1> 	invoke gtk_tool_shell_get_type
 13778                              <1> 	invoke g_type_check_class_cast, %1, eax
 13779                              <1> %endmacro
 13780                              <1> 
 13781                              <1> %macro GTK_IS_TOOL_SHELL 1
 13782                              <1> 	invoke gtk_tool_shell_get_type
 13783                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13784                              <1> %endmacro
 13785                              <1> 
 13786                              <1> %macro GTK_IS_TOOL_SHELL_CLASS 1
 13787                              <1> 	invoke gtk_tool_shell_get_type
 13788                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13789                              <1> %endmacro
 13790                              <1> 
 13791                              <1> %macro GTK_TOOLTIP 1
 13792                              <1> 	invoke gtk_tooltip_get_type
 13793                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13794                              <1> %endmacro
 13795                              <1> 
 13796                              <1> %macro GTK_TOOLTIP_CLASS 1
 13797                              <1> 	invoke gtk_tooltip_get_type
 13798                              <1> 	invoke g_type_check_class_cast, %1, eax
 13799                              <1> %endmacro
 13800                              <1> 
 13801                              <1> %macro GTK_IS_TOOLTIP 1
 13802                              <1> 	invoke gtk_tooltip_get_type
 13803                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13804                              <1> %endmacro
 13805                              <1> 
 13806                              <1> %macro GTK_IS_TOOLTIP_CLASS 1
 13807                              <1> 	invoke gtk_tooltip_get_type
 13808                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13809                              <1> %endmacro
 13810                              <1> 
 13811                              <1> %macro GTK_TOOLTIPS 1
 13812                              <1> 	invoke gtk_tooltips_get_type
 13813                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13814                              <1> %endmacro
 13815                              <1> 
 13816                              <1> %macro GTK_TOOLTIPS_CLASS 1
 13817                              <1> 	invoke gtk_tooltips_get_type
 13818                              <1> 	invoke g_type_check_class_cast, %1, eax
 13819                              <1> %endmacro
 13820                              <1> 
 13821                              <1> %macro GTK_IS_TOOLTIPS 1
 13822                              <1> 	invoke gtk_tooltips_get_type
 13823                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13824                              <1> %endmacro
 13825                              <1> 
 13826                              <1> %macro GTK_IS_TOOLTIPS_CLASS 1
 13827                              <1> 	invoke gtk_tooltips_get_type
 13828                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13829                              <1> %endmacro
 13830                              <1> 
 13831                              <1> %macro GTK_TREE 1
 13832                              <1> 	invoke gtk_tree_get_type
 13833                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13834                              <1> %endmacro
 13835                              <1> 
 13836                              <1> %macro GTK_TREE_CLASS 1
 13837                              <1> 	invoke gtk_tree_get_type
 13838                              <1> 	invoke g_type_check_class_cast, %1, eax
 13839                              <1> %endmacro
 13840                              <1> 
 13841                              <1> %macro GTK_IS_TREE 1
 13842                              <1> 	invoke gtk_tree_get_type
 13843                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13844                              <1> %endmacro
 13845                              <1> 
 13846                              <1> %macro GTK_IS_TREE_CLASS 1
 13847                              <1> 	invoke gtk_tree_get_type
 13848                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13849                              <1> %endmacro
 13850                              <1> 
 13851                              <1> %macro GTK_TREE_DRAG_SOURCE 1
 13852                              <1> 	invoke gtk_tree_drag_source_get_type
 13853                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13854                              <1> %endmacro
 13855                              <1> 
 13856                              <1> %macro GTK_TREE_DRAG_SOURCE_CLASS 1
 13857                              <1> 	invoke gtk_tree_drag_source_get_type
 13858                              <1> 	invoke g_type_check_class_cast, %1, eax
 13859                              <1> %endmacro
 13860                              <1> 
 13861                              <1> %macro GTK_IS_TREE_DRAG_SOURCE 1
 13862                              <1> 	invoke gtk_tree_drag_source_get_type
 13863                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13864                              <1> %endmacro
 13865                              <1> 
 13866                              <1> %macro GTK_IS_TREE_DRAG_SOURCE_CLASS 1
 13867                              <1> 	invoke gtk_tree_drag_source_get_type
 13868                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13869                              <1> %endmacro
 13870                              <1> 
 13871                              <1> %macro GTK_TREE_DRAG_DEST 1
 13872                              <1> 	invoke gtk_tree_drag_dest_get_type
 13873                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13874                              <1> %endmacro
 13875                              <1> 
 13876                              <1> %macro GTK_TREE_DRAG_DEST_CLASS 1
 13877                              <1> 	invoke gtk_tree_drag_dest_get_type
 13878                              <1> 	invoke g_type_check_class_cast, %1, eax
 13879                              <1> %endmacro
 13880                              <1> 
 13881                              <1> %macro GTK_IS_TREE_DRAG_DEST 1
 13882                              <1> 	invoke gtk_tree_drag_dest_get_type
 13883                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13884                              <1> %endmacro
 13885                              <1> 
 13886                              <1> %macro GTK_IS_TREE_DRAG_DEST_CLASS 1
 13887                              <1> 	invoke gtk_tree_drag_dest_get_type
 13888                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13889                              <1> %endmacro
 13890                              <1> 
 13891                              <1> %macro GTK_TREE_ITEM 1
 13892                              <1> 	invoke gtk_tree_item_get_type
 13893                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13894                              <1> %endmacro
 13895                              <1> 
 13896                              <1> %macro GTK_TREE_ITEM_CLASS 1
 13897                              <1> 	invoke gtk_tree_item_get_type
 13898                              <1> 	invoke g_type_check_class_cast, %1, eax
 13899                              <1> %endmacro
 13900                              <1> 
 13901                              <1> %macro GTK_IS_TREE_ITEM 1
 13902                              <1> 	invoke gtk_tree_item_get_type
 13903                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13904                              <1> %endmacro
 13905                              <1> 
 13906                              <1> %macro GTK_IS_TREE_ITEM_CLASS 1
 13907                              <1> 	invoke gtk_tree_item_get_type
 13908                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13909                              <1> %endmacro
 13910                              <1> 
 13911                              <1> %macro GTK_TREE_MODEL 1
 13912                              <1> 	invoke gtk_tree_model_get_type
 13913                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13914                              <1> %endmacro
 13915                              <1> 
 13916                              <1> %macro GTK_TREE_MODEL_CLASS 1
 13917                              <1> 	invoke gtk_tree_model_get_type
 13918                              <1> 	invoke g_type_check_class_cast, %1, eax
 13919                              <1> %endmacro
 13920                              <1> 
 13921                              <1> %macro GTK_IS_TREE_MODEL 1
 13922                              <1> 	invoke gtk_tree_model_get_type
 13923                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13924                              <1> %endmacro
 13925                              <1> 
 13926                              <1> %macro GTK_IS_TREE_MODEL_CLASS 1
 13927                              <1> 	invoke gtk_tree_model_get_type
 13928                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13929                              <1> %endmacro
 13930                              <1> 
 13931                              <1> %macro GTK_TREE_MODEL_FILTER 1
 13932                              <1> 	invoke gtk_tree_model_filter_get_type
 13933                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13934                              <1> %endmacro
 13935                              <1> 
 13936                              <1> %macro GTK_TREE_MODEL_FILTER_CLASS 1
 13937                              <1> 	invoke gtk_tree_model_filter_get_type
 13938                              <1> 	invoke g_type_check_class_cast, %1, eax
 13939                              <1> %endmacro
 13940                              <1> 
 13941                              <1> %macro GTK_IS_TREE_MODEL_FILTER 1
 13942                              <1> 	invoke gtk_tree_model_filter_get_type
 13943                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13944                              <1> %endmacro
 13945                              <1> 
 13946                              <1> %macro GTK_IS_TREE_MODEL_FILTER_CLASS 1
 13947                              <1> 	invoke gtk_tree_model_filter_get_type
 13948                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13949                              <1> %endmacro
 13950                              <1> 
 13951                              <1> %macro GTK_TREE_MODEL_SORT 1
 13952                              <1> 	invoke gtk_tree_model_sort_get_type
 13953                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13954                              <1> %endmacro
 13955                              <1> 
 13956                              <1> %macro GTK_TREE_MODEL_SORT_CLASS 1
 13957                              <1> 	invoke gtk_tree_model_sort_get_type
 13958                              <1> 	invoke g_type_check_class_cast, %1, eax
 13959                              <1> %endmacro
 13960                              <1> 
 13961                              <1> %macro GTK_IS_TREE_MODEL_SORT 1
 13962                              <1> 	invoke gtk_tree_model_sort_get_type
 13963                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13964                              <1> %endmacro
 13965                              <1> 
 13966                              <1> %macro GTK_IS_TREE_MODEL_SORT_CLASS 1
 13967                              <1> 	invoke gtk_tree_model_sort_get_type
 13968                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13969                              <1> %endmacro
 13970                              <1> 
 13971                              <1> %macro GTK_TREE_SELECTION 1
 13972                              <1> 	invoke gtk_tree_selection_get_type
 13973                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13974                              <1> %endmacro
 13975                              <1> 
 13976                              <1> %macro GTK_TREE_SELECTION_CLASS 1
 13977                              <1> 	invoke gtk_tree_selection_get_type
 13978                              <1> 	invoke g_type_check_class_cast, %1, eax
 13979                              <1> %endmacro
 13980                              <1> 
 13981                              <1> %macro GTK_IS_TREE_SELECTION 1
 13982                              <1> 	invoke gtk_tree_selection_get_type
 13983                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 13984                              <1> %endmacro
 13985                              <1> 
 13986                              <1> %macro GTK_IS_TREE_SELECTION_CLASS 1
 13987                              <1> 	invoke gtk_tree_selection_get_type
 13988                              <1> 	invoke g_type_check_class_is_a , %1, eax
 13989                              <1> %endmacro
 13990                              <1> 
 13991                              <1> %macro GTK_TREE_SORTABLE 1
 13992                              <1> 	invoke gtk_tree_sortable_get_type
 13993                              <1> 	invoke g_type_check_instance_cast, %1, eax
 13994                              <1> %endmacro
 13995                              <1> 
 13996                              <1> %macro GTK_TREE_SORTABLE_CLASS 1
 13997                              <1> 	invoke gtk_tree_sortable_get_type
 13998                              <1> 	invoke g_type_check_class_cast, %1, eax
 13999                              <1> %endmacro
 14000                              <1> 
 14001                              <1> %macro GTK_IS_TREE_SORTABLE 1
 14002                              <1> 	invoke gtk_tree_sortable_get_type
 14003                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14004                              <1> %endmacro
 14005                              <1> 
 14006                              <1> %macro GTK_IS_TREE_SORTABLE_CLASS 1
 14007                              <1> 	invoke gtk_tree_sortable_get_type
 14008                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14009                              <1> %endmacro
 14010                              <1> 
 14011                              <1> %macro GTK_TREE_STORE 1
 14012                              <1> 	invoke gtk_tree_store_get_type
 14013                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14014                              <1> %endmacro
 14015                              <1> 
 14016                              <1> %macro GTK_TREE_STORE_CLASS 1
 14017                              <1> 	invoke gtk_tree_store_get_type
 14018                              <1> 	invoke g_type_check_class_cast, %1, eax
 14019                              <1> %endmacro
 14020                              <1> 
 14021                              <1> %macro GTK_IS_TREE_STORE 1
 14022                              <1> 	invoke gtk_tree_store_get_type
 14023                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14024                              <1> %endmacro
 14025                              <1> 
 14026                              <1> %macro GTK_IS_TREE_STORE_CLASS 1
 14027                              <1> 	invoke gtk_tree_store_get_type
 14028                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14029                              <1> %endmacro
 14030                              <1> 
 14031                              <1> %macro GTK_TREE_VIEW 1
 14032                              <1> 	invoke gtk_tree_view_get_type
 14033                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14034                              <1> %endmacro
 14035                              <1> 
 14036                              <1> %macro GTK_TREE_VIEW_CLASS 1
 14037                              <1> 	invoke gtk_tree_view_get_type
 14038                              <1> 	invoke g_type_check_class_cast, %1, eax
 14039                              <1> %endmacro
 14040                              <1> 
 14041                              <1> %macro GTK_IS_TREE_VIEW 1
 14042                              <1> 	invoke gtk_tree_view_get_type
 14043                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14044                              <1> %endmacro
 14045                              <1> 
 14046                              <1> %macro GTK_IS_TREE_VIEW_CLASS 1
 14047                              <1> 	invoke gtk_tree_view_get_type
 14048                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14049                              <1> %endmacro
 14050                              <1> 
 14051                              <1> %macro GTK_TREE_VIEW_COLUMN 1
 14052                              <1> 	invoke gtk_tree_view_column_get_type
 14053                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14054                              <1> %endmacro
 14055                              <1> 
 14056                              <1> %macro GTK_TREE_VIEW_COLUMN_CLASS 1
 14057                              <1> 	invoke gtk_tree_view_column_get_type
 14058                              <1> 	invoke g_type_check_class_cast, %1, eax
 14059                              <1> %endmacro
 14060                              <1> 
 14061                              <1> %macro GTK_IS_TREE_VIEW_COLUMN 1
 14062                              <1> 	invoke gtk_tree_view_column_get_type
 14063                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14064                              <1> %endmacro
 14065                              <1> 
 14066                              <1> %macro GTK_IS_TREE_VIEW_COLUMN_CLASS 1
 14067                              <1> 	invoke gtk_tree_view_column_get_type
 14068                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14069                              <1> %endmacro
 14070                              <1> 
 14071                              <1> %macro GTK_UI_MANAGER 1
 14072                              <1> 	invoke gtk_ui_manager_get_type
 14073                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14074                              <1> %endmacro
 14075                              <1> 
 14076                              <1> %macro GTK_UI_MANAGER_CLASS 1
 14077                              <1> 	invoke gtk_ui_manager_get_type
 14078                              <1> 	invoke g_type_check_class_cast, %1, eax
 14079                              <1> %endmacro
 14080                              <1> 
 14081                              <1> %macro GTK_IS_UI_MANAGER 1
 14082                              <1> 	invoke gtk_ui_manager_get_type
 14083                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14084                              <1> %endmacro
 14085                              <1> 
 14086                              <1> %macro GTK_IS_UI_MANAGER_CLASS 1
 14087                              <1> 	invoke gtk_ui_manager_get_type
 14088                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14089                              <1> %endmacro
 14090                              <1> 
 14091                              <1> %macro GTK_VBUTTON_BOX 1
 14092                              <1> 	invoke gtk_vbutton_box_get_type
 14093                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14094                              <1> %endmacro
 14095                              <1> 
 14096                              <1> %macro GTK_VBUTTON_BOX_CLASS 1
 14097                              <1> 	invoke gtk_vbutton_box_get_type
 14098                              <1> 	invoke g_type_check_class_cast, %1, eax
 14099                              <1> %endmacro
 14100                              <1> 
 14101                              <1> %macro GTK_IS_VBUTTON_BOX 1
 14102                              <1> 	invoke gtk_vbutton_box_get_type
 14103                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14104                              <1> %endmacro
 14105                              <1> 
 14106                              <1> %macro GTK_IS_VBUTTON_BOX_CLASS 1
 14107                              <1> 	invoke gtk_vbutton_box_get_type
 14108                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14109                              <1> %endmacro
 14110                              <1> 
 14111                              <1> %macro GTK_VBOX 1
 14112                              <1> 	invoke gtk_vbox_get_type
 14113                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14114                              <1> %endmacro
 14115                              <1> 
 14116                              <1> %macro GTK_VBOX_CLASS 1
 14117                              <1> 	invoke gtk_vbox_get_type
 14118                              <1> 	invoke g_type_check_class_cast, %1, eax
 14119                              <1> %endmacro
 14120                              <1> 
 14121                              <1> %macro GTK_IS_VBOX 1
 14122                              <1> 	invoke gtk_vbox_get_type
 14123                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14124                              <1> %endmacro
 14125                              <1> 
 14126                              <1> %macro GTK_IS_VBOX_CLASS 1
 14127                              <1> 	invoke gtk_vbox_get_type
 14128                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14129                              <1> %endmacro
 14130                              <1> 
 14131                              <1> %macro GTK_VIEWPORT 1
 14132                              <1> 	invoke gtk_viewport_get_type
 14133                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14134                              <1> %endmacro
 14135                              <1> 
 14136                              <1> %macro GTK_VIEWPORT_CLASS 1
 14137                              <1> 	invoke gtk_viewport_get_type
 14138                              <1> 	invoke g_type_check_class_cast, %1, eax
 14139                              <1> %endmacro
 14140                              <1> 
 14141                              <1> %macro GTK_IS_VIEWPORT 1
 14142                              <1> 	invoke gtk_viewport_get_type
 14143                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14144                              <1> %endmacro
 14145                              <1> 
 14146                              <1> %macro GTK_IS_VIEWPORT_CLASS 1
 14147                              <1> 	invoke gtk_viewport_get_type
 14148                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14149                              <1> %endmacro
 14150                              <1> 
 14151                              <1> %macro GTK_VOLUME_BUTTON 1
 14152                              <1> 	invoke gtk_volume_button_get_type
 14153                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14154                              <1> %endmacro
 14155                              <1> 
 14156                              <1> %macro GTK_VOLUME_BUTTON_CLASS 1
 14157                              <1> 	invoke gtk_volume_button_get_type
 14158                              <1> 	invoke g_type_check_class_cast, %1, eax
 14159                              <1> %endmacro
 14160                              <1> 
 14161                              <1> %macro GTK_IS_VOLUME_BUTTON 1
 14162                              <1> 	invoke gtk_volume_button_get_type
 14163                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14164                              <1> %endmacro
 14165                              <1> 
 14166                              <1> %macro GTK_IS_VOLUME_BUTTON_CLASS 1
 14167                              <1> 	invoke gtk_volume_button_get_type
 14168                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14169                              <1> %endmacro
 14170                              <1> 
 14171                              <1> %macro GTK_VPANED 1
 14172                              <1> 	invoke gtk_vpaned_get_type
 14173                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14174                              <1> %endmacro
 14175                              <1> 
 14176                              <1> %macro GTK_VPANED_CLASS 1
 14177                              <1> 	invoke gtk_vpaned_get_type
 14178                              <1> 	invoke g_type_check_class_cast, %1, eax
 14179                              <1> %endmacro
 14180                              <1> 
 14181                              <1> %macro GTK_IS_VPANED 1
 14182                              <1> 	invoke gtk_vpaned_get_type
 14183                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14184                              <1> %endmacro
 14185                              <1> 
 14186                              <1> %macro GTK_IS_VPANED_CLASS 1
 14187                              <1> 	invoke gtk_vpaned_get_type
 14188                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14189                              <1> %endmacro
 14190                              <1> 
 14191                              <1> %macro GTK_VRULER 1
 14192                              <1> 	invoke gtk_vruler_get_type
 14193                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14194                              <1> %endmacro
 14195                              <1> 
 14196                              <1> %macro GTK_VRULER_CLASS 1
 14197                              <1> 	invoke gtk_vruler_get_type
 14198                              <1> 	invoke g_type_check_class_cast, %1, eax
 14199                              <1> %endmacro
 14200                              <1> 
 14201                              <1> %macro GTK_IS_VRULER 1
 14202                              <1> 	invoke gtk_vruler_get_type
 14203                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14204                              <1> %endmacro
 14205                              <1> 
 14206                              <1> %macro GTK_IS_VRULER_CLASS 1
 14207                              <1> 	invoke gtk_vruler_get_type
 14208                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14209                              <1> %endmacro
 14210                              <1> 
 14211                              <1> %macro GTK_VSCALE 1
 14212                              <1> 	invoke gtk_vscale_get_type
 14213                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14214                              <1> %endmacro
 14215                              <1> 
 14216                              <1> %macro GTK_VSCALE_CLASS 1
 14217                              <1> 	invoke gtk_vscale_get_type
 14218                              <1> 	invoke g_type_check_class_cast, %1, eax
 14219                              <1> %endmacro
 14220                              <1> 
 14221                              <1> %macro GTK_IS_VSCALE 1
 14222                              <1> 	invoke gtk_vscale_get_type
 14223                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14224                              <1> %endmacro
 14225                              <1> 
 14226                              <1> %macro GTK_IS_VSCALE_CLASS 1
 14227                              <1> 	invoke gtk_vscale_get_type
 14228                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14229                              <1> %endmacro
 14230                              <1> 
 14231                              <1> %macro GTK_VSCROLLBAR 1
 14232                              <1> 	invoke gtk_vscrollbar_get_type
 14233                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14234                              <1> %endmacro
 14235                              <1> 
 14236                              <1> %macro GTK_VSCROLLBAR_CLASS 1
 14237                              <1> 	invoke gtk_vscrollbar_get_type
 14238                              <1> 	invoke g_type_check_class_cast, %1, eax
 14239                              <1> %endmacro
 14240                              <1> 
 14241                              <1> %macro GTK_IS_VSCROLLBAR 1
 14242                              <1> 	invoke gtk_vscrollbar_get_type
 14243                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14244                              <1> %endmacro
 14245                              <1> 
 14246                              <1> %macro GTK_IS_VSCROLLBAR_CLASS 1
 14247                              <1> 	invoke gtk_vscrollbar_get_type
 14248                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14249                              <1> %endmacro
 14250                              <1> 
 14251                              <1> %macro GTK_VSEPARATOR 1
 14252                              <1> 	invoke gtk_vseparator_get_type
 14253                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14254                              <1> %endmacro
 14255                              <1> 
 14256                              <1> %macro GTK_VSEPARATOR_CLASS 1
 14257                              <1> 	invoke gtk_vseparator_get_type
 14258                              <1> 	invoke g_type_check_class_cast, %1, eax
 14259                              <1> %endmacro
 14260                              <1> 
 14261                              <1> %macro GTK_IS_VSEPARATOR 1
 14262                              <1> 	invoke gtk_vseparator_get_type
 14263                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14264                              <1> %endmacro
 14265                              <1> 
 14266                              <1> %macro GTK_IS_VSEPARATOR_CLASS 1
 14267                              <1> 	invoke gtk_vseparator_get_type
 14268                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14269                              <1> %endmacro
 14270                              <1> 
 14271                              <1> %macro GTK_WINDOW 1
 14272                              <1> 	invoke gtk_window_get_type
 14273                              <1> 	invoke g_type_check_instance_cast, %1, eax
 14274                              <1> %endmacro
 14275                              <1> 
 14276                              <1> %macro GTK_WINDOW_CLASS 1
 14277                              <1> 	invoke gtk_window_get_type
 14278                              <1> 	invoke g_type_check_class_cast, %1, eax
 14279                              <1> %endmacro
 14280                              <1> 
 14281                              <1> %macro GTK_IS_WINDOW 1
 14282                              <1> 	invoke gtk_window_get_type
 14283                              <1> 	invoke g_type_check_instance_is_a , %1, eax
 14284                              <1> %endmacro
 14285                              <1> 
 14286                              <1> %macro GTK_IS_WINDOW_CLASS 1
 14287                              <1> 	invoke gtk_window_get_type
 14288                              <1> 	invoke g_type_check_class_is_a , %1, eax
 14289                              <1> %endmacro
 14290                              <1> 
 14291                              <1> %ifidni __OUTPUT_FORMAT__,win32
 14292                              <1> 	%macro gtk_init 2
 14293                              <1> 		invoke gtk_init_abi_check,%1,%2, 2, GtkWindow_size, GtkBox_size
 14294                              <1> 	%endmacro
 14295                              <1> 	%macro gtk_init_check 2
 14296                              <1> 		invoke gtk_init_check_abi_check,%1 ,%2 ,2 ,GtkWindow_size ,GtkBox_size
 14297                              <1> 	%endmacro
 14298                              <1> %endif
 14299                              <1> 
 14300                              <1> 
 14301                              <1> %endif  ;;__GTK_INC__
    23                                  
    24                                  ENTRY demo8
    25                                  
    26                                  	APP_WIDTH	equ 300
    27                                  	APP_HEIGHT	equ 50
    28                                  
    29                                  IMPORT gtk_init,8
    30                                  IMPORT gtk_window_new,4
    31                                  IMPORT gtk_button_new_with_label,4
    32                                  IMPORT gtk_entry_new,0
    33                                  IMPORT gtk_vbox_new,8
    34                                  IMPORT gtk_window_set_title,8
    35                                  IMPORT gtk_window_set_default_size,12
    36                                  IMPORT g_signal_connect_data,24
    37                                  IMPORT gtk_box_pack_start,20
    38                                  IMPORT gtk_container_add,8
    39                                  IMPORT gtk_widget_show_all,4
    40                                  IMPORT gtk_main,0
    41                                  IMPORT gtk_exit,4
    42                                  IMPORT gtk_entry_get_text,4
    43                                  IMPORT gtk_message_dialog_new,20
    44                                  IMPORT gtk_dialog_run,4
    45                                  IMPORT gtk_widget_destroy,4
    46                                  IMPORT gtk_main_quit,0
    47                                  
    48                                  segment .bss
    49                                  
    50 00000000 <res 00000004>          	window: reserve(uint32_t) 1
    51 00000004 <res 00000004>          	button: reserve(uint32_t) 1
    52 00000008 <res 00000004>          	vbox: reserve(uint32_t) 1
    53 0000000C <res 00000004>          	entrydata: reserve(uint32_t) 1
    54 00000010 <res 00000004>          	msgboxdiag: reserve(uint32_t) 1
    55                                  
    56                                  segment .data
    57                                  
    58 00000000 456E74727920697320-     is_empty: db "Entry is empty.", 0
    58 00000009 656D7074792E00     
    59                                  
    60                                  segment .code
    61                                  ;;Define the call back functions.
    62                                  ;; cdecl for callback function which is called from inside the c library !?
    63                                  ;; NOTE : cdecl is not really needed in linux
    64                                  ;; By default NASMX assembles procs in linux with cdecl. (when invoked with -f elf32)
    65                                  ;; cdecl is needed in windows. 
    66                                  
    67                                  proc cdecl, kill_window, ptrdiff_t widget, ptrdiff_t event, ptrdiff_t data
    68 00000000 5589E5                  locals none
    69                                  
    70 00000003 E8(00000000)            	invoke gtk_main_quit
    71 00000008 31C0EB00                	return 0
    72 0000000C 5DC3                    endproc
    73                                  
    74                                  proc cdecl, button_press,ptrdiff_t widget, ptrdiff_t data  
    75 0000000E 5589E5                  locals none
    76                                  
    77 00000011 FF35[0C000000]E8-       	invoke gtk_entry_get_text,[entrydata]
    77 00000018 (00000000)83C404   
    78                                  
    79 0000001F 8038007505              	if [eax], ==, byte 0
    80 00000024 B8[00000000]            		mov eax, is_empty
    81                                  	endif
    82                                  
    83 00000029 506A016A006A02FF35-     	invoke gtk_message_dialog_new, [window], GTK_DIALOG_DESTROY_WITH_PARENT, GTK_MESSAGE_INFO, GTK_BUTTONS_OK, eax
    83 00000032 [00000000]E8-      
    83 00000037 (00000000)83C414   
    84 0000003E A3[10000000]            	mov [msgboxdiag],eax
    85                                  
    86 00000043 EB05496E666F0068-       	invoke gtk_window_set_title, [msgboxdiag], "Info"
    86 0000004B [45000000]FF35-    
    86 00000051 [10000000]E8-      
    86 00000056 (00000000)83C408   
    87                                  
    88 0000005D FF35[10000000]E8-       	invoke gtk_dialog_run, [msgboxdiag]
    88 00000064 (00000000)83C404   
    89                                  
    90 0000006B FF35[10000000]E8-       	invoke gtk_widget_destroy, [msgboxdiag]
    90 00000072 (00000000)83C404   
    91 00000079 5DC3                    endproc
    92                                  
    93                                  ;; Our Main proc.
    94 0000007B 5589E589E083E00774-     proc demo8
    94 00000084 0683EC0883E4F8     
    95                                  locals none
    96 0000008B 6A006A00E8-             	invoke gtk_init,NULL,NULL
    96 00000090 (00000000)83C408   
    97                                  	
    98 00000097 6A00E8(00000000)83-     	invoke gtk_window_new, GTK_WINDOW_TOPLEVEL
    98 0000009F C404               
    99 000000A1 A3[00000000]            	mov [window],eax
   100                                  
   101 000000A6 EB054563686F0068-       	invoke gtk_button_new_with_label, "Echo"
   101 000000AE [A8000000]E8-      
   101 000000B3 (00000000)83C404   
   102 000000BA A3[04000000]            	mov [button],eax
   103                                  
   104 000000BF E8(00000000)            	invoke gtk_entry_new
   105 000000C4 A3[0C000000]            	mov [entrydata],eax
   106                                  
   107 000000C9 6A026A00E8-             	invoke gtk_vbox_new, FALSE, 2
   107 000000CE (00000000)83C408   
   108 000000D5 A3[08000000]            	mov [vbox],eax
   109                                  
   110 000000DA EB1047544B20617070-     	invoke gtk_window_set_title, [window],"GTK application"
   110 000000E3 6C69636174696F6E00-
   110 000000EC 68[DC000000]FF35-  
   110 000000F3 [00000000]E8-      
   110 000000F8 (00000000)83C408   
   111 000000FF 6A32682C010000FF35-     	invoke gtk_window_set_default_size, [window], APP_WIDTH, APP_HEIGHT
   111 00000108 [00000000]E8-      
   111 0000010D (00000000)83C40C   
   112 00000114 6A006A006A0068-         	invoke g_signal_connect_data,[window], "delete_event", kill_window, 0, 0, 0
   112 0000011B [00000000]EB0D6465-
   112 00000123 6C6574655F6576656E-
   112 0000012C 740068[21010000]FF-
   112 00000134 35[00000000]E8-    
   112 0000013A (00000000)83C418   
   113                                  
   114 00000141 6A006A006A0068-         	invoke g_signal_connect_data, [button], "clicked", button_press , 0, 0, 0
   114 00000148 [0E000000]EB08636C-
   114 00000150 69636B65640068-    
   114 00000157 [4E010000]FF35-    
   114 0000015D [04000000]E8-      
   114 00000162 (00000000)83C418   
   115                                  
   116                                  	;;We pack a textbox and a button into the container. 
   117                                  	;;The first two parameters are the container and the child widget. 
   118                                  	;;The next three parameters are expand, fill and padding. 
   119                                  	;;Note that the fill parameter has no effect, if the expand paramater is set to FALSE.
   120                                  	
   121 00000169 6A026A016A01FF35-       	invoke gtk_box_pack_start, [vbox],[entrydata], TRUE, TRUE, 2
   121 00000171 [0C000000]FF35-    
   121 00000177 [08000000]E8-      
   121 0000017C (00000000)83C414   
   122 00000183 6A026A006A00FF35-       	invoke gtk_box_pack_start, [vbox],[button], FALSE, FALSE, 2
   122 0000018B [04000000]FF35-    
   122 00000191 [08000000]E8-      
   122 00000196 (00000000)83C414   
   123                                  
   124 0000019D FF35[08000000]FF35-     	invoke gtk_container_add, [window], [vbox]
   124 000001A5 [00000000]E8-      
   124 000001AA (00000000)83C408   
   125                                  
   126 000001B1 FF35[00000000]E8-       	invoke gtk_widget_show_all, [window]
   126 000001B8 (00000000)83C404   
   127                                  	
   128 000001BF E8(00000000)            	invoke gtk_main
   129                                  	
   130 000001C4 6A00E8(00000000)83-     	invoke gtk_exit,0
   130 000001CC C404               
   131 000001CE 89EC5DC3                endproc
