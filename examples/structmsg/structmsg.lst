     1                                  ; Name:         structmsg.asm
     2                                  ;
     3                                  ; Build:        nasm "-felf64" structmsg.asm -l structmsg.lst -o structmsg.o
     4                                  ;               ld -s -melf_x86_64 -o structmsg structmsg.o ../libmodulo97/libmodulo97.a
     5                                  ;
     6                                  ; Description:  Modulo 97 check on Strutured messages
     7                                  
     8                                  %define COMMAND          "structmsg"
     9                                  %define PURPOSE          "Strutured message check in pure NASM <http://www.nasm.us>."
    10                                  %define APPLICATIONTITLE "Strutured message"
    11                                  %define NUMBERLENGTH     12
    12                                  %define NUMBERSTRING     "12"
    13                                  
    14                                  %macro MODULO97CHECK 0
    15                                      mov     rdi, rax
    16                                      call    Modulo97.Check
    17                                  %endm
    18                                  
   851                                  [list -]
   852          ******************       warning: using 64 bits syscalls
   853                              <1> 
   854                              <1> section .data
   855                              <1> 
   856                              <1>      Message:
   857 00000000 7374727563746D7367- <1>      .usage:                  db  COMMAND, " - Copyright (C) 2012 - Agguro <http://www.agguro.org>.", 10
   858 00000009 202D20436F70797269- <1>
   859 00000012 676874202843292032- <1>
   860 0000001B 303132202D20416767- <1>
   861 00000024 75726F203C68747470- <1>
   862 0000002D 3A2F2F7777772E6167- <1>
   863 00000036 6775726F2E6F72673E- <1>
   864 0000003F 2E0A                <1>
   865 00000041 537472757475726564- <1>                               db  PURPOSE, 10
   866 0000004A 206D65737361676520- <1>
   867 00000053 636865636B20696E20- <1>
   868 0000005C 70757265204E41534D- <1>
   869 00000065 203C687474703A2F2F- <1>
   870 0000006E 7777772E6E61736D2E- <1>
   871 00000077 75733E2E0A          <1>
   872 0000007C 546869732069732066- <1>                               db  "This is free software and you are free to redistribute under <http://www.gnu.org/licenses/> conditions.", 10
   873 00000085 72656520736F667477- <1>
   874 0000008E 61726520616E642079- <1>
   875 00000097 6F7520617265206672- <1>
   876 000000A0 656520746F20726564- <1>
   877 000000A9 697374726962757465- <1>
   878 000000B2 20756E646572203C68- <1>
   879 000000BB 7474703A2F2F777777- <1>
   880 000000C4 2E676E752E6F72672F- <1>
   881 000000CD 6C6963656E7365732F- <1>
   882 000000D6 3E20636F6E64697469- <1>
   883 000000DF 6F6E732E0A          <1>
   884 000000E4 75736167653A207374- <1>                               db  "usage: ",COMMAND," n (where n = ", NUMBERSTRING, " digit ", APPLICATIONTITLE, ".)", 10
   885 000000ED 727563746D7367206E- <1>
   886 000000F6 20287768657265206E- <1>
   887 000000FF 203D20313220646967- <1>
   888 00000108 697420537472757475- <1>
   889 00000111 726564206D65737361- <1>
   890 0000011A 67652E290A          <1>
   891                              <1>      .usagelength:            equ $-Message.usage
   892 0000011F 696C                <1>      .illegalnumber:          db  "il"
   893 00000121 6C6567616C206E756D- <1>      .legalnumber:            db  "legal number", 10
   894 0000012A 6265720A            <1>
   895                              <1>      .legalnumberlength:      equ $-Message.legalnumber
   896                              <1>      .illegalnumberlength:    equ Message.legalnumberlength + 2
   897                              <1> 
   898                              <1> section .text
   899                              <1>      global _start
   900                              <1>     
   901                              <1> _start:
   902 00000000 58                  <1>      pop       rax                     ; get argc
   903 00000001 4883F802            <1>      cmp       rax, 2                  ; two arguments?
   904 00000005 7541                <1>      jne       .usage                  ; nope, show usage
   905 00000007 58                  <1>      pop       rax                     ; pointer to programname
   906 00000008 5E                  <1>      pop       rsi                     ; pointer to number string
   907 00000009 BF0C000000          <1>      mov       rdi, NUMBERLENGTH
   908 0000000E E8(00000000)        <1>      call      Modulo97.CheckLength
   909 00000013 7222                <1>      jc        .illegalnumber
   910 00000015 E8(00000000)        <1>      call      Modulo97.ParseNumber
   911 0000001A 721B                <1>      jc        .illegalnumber
   912                              <1>      
   913                              <1>      MODULO97CHECK
   914 0000001C 4889C7              <2>  mov rdi, rax
   915 0000001F E8(00000000)        <2>  call Modulo97.Check
   916                              <1>      
   917 00000024 7211                <1>      jc        .illegalnumber
   918 00000026 48BE-               <1>      mov       rsi, Message.legalnumber
   919 00000028 [2101000000000000]  <1>
   920 00000030 BA0D000000          <1>      mov       rdx, Message.legalnumberlength
   921 00000035 EB20                <1>      jmp       .printmessage
   922                              <1> .illegalnumber:
   923 00000037 48BE-               <1>      mov       rsi, Message.illegalnumber
   924 00000039 [1F01000000000000]  <1>
   925 00000041 BA0F000000          <1>      mov       rdx, Message.illegalnumberlength
   926 00000046 EB0F                <1>      jmp       .printmessage
   927                              <1> .usage:
   928 00000048 48BE-               <1>      mov       rsi, Message.usage
   929 0000004A [0000000000000000]  <1>
   930 00000052 BA1F010000          <1>      mov       rdx, Message.usagelength
   931                              <1> .printmessage:     
   932 00000057 E80A000000          <1>      call      Write
   933 0000005C 4831FFB83C0000000F- <1>      syscall   exit, 0
   934 00000065 05                  <1>
   935                              <1>      
   936                              <1> Write:
   937 00000066 BF01000000B8010000- <1>      syscall   write, stdout
   938 0000006F 000F05              <1>
   939 00000072 C3                  <1>      ret
   940                                  [list +]
